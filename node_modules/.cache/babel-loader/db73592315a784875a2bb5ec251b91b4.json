{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Player\\\\mini-player\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport ProgressCircle from '../../../baseUI/progress-circle';\nimport { getName } from '../../../api/utils';\nimport { MiniPlayerContainer } from './style';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MiniPlayer(props) {\n  _s();\n\n  const {\n    full,\n    song,\n    playing,\n    percent\n  } = props;\n  const {\n    clickPlaying,\n    setFullScreen,\n    togglePlayList\n  } = props;\n  const miniPlayerRef = useRef();\n  const miniWrapperRef = useRef();\n  const miniImageRef = useRef();\n  const handleTogglePlayList = useCallback(e => {\n    togglePlayList(true);\n    e.stopPropagation();\n  }, [togglePlayList]);\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: !full,\n    timeout: 400,\n    classNames: \"mini\",\n    onEnter: () => {\n      miniPlayerRef.current.style.display = \"flex\";\n    },\n    onExited: () => {\n      miniPlayerRef.current.style.display = \"none\";\n    },\n    children: /*#__PURE__*/_jsxDEV(MiniPlayerContainer, {\n      ref: miniPlayerRef,\n      onClick: () => setFullScreen(true),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imgWrapper\",\n          ref: miniWrapperRef,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `play ${playing ? \"\" : \"pause\"}`,\n            ref: miniImageRef,\n            src: song.al.picUrl,\n            width: \"40\",\n            height: \"40\",\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"name\",\n          children: song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"desc\",\n          children: getName(song.ar)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(ProgressCircle, {\n          radius: 32,\n          percent: percent,\n          children: playing ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-mini iconfont icon-pause\",\n            onClick: e => clickPlaying(e, false),\n            children: \"\\uE650\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-mini iconfont icon-play\",\n            onClick: e => clickPlaying(e, true),\n            children: \"\\uE61E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        onClick: handleTogglePlayList,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"iconfont\",\n          children: \"\\uE640\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MiniPlayer, \"Ke0yDR1S4eAzHVavIwRW5ifjhIs=\");\n\n_c = MiniPlayer;\nexport default _c2 = /*#__PURE__*/React.memo(MiniPlayer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MiniPlayer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Player/mini-player/index.js"],"names":["React","useRef","CSSTransition","ProgressCircle","getName","MiniPlayerContainer","useCallback","MiniPlayer","props","full","song","playing","percent","clickPlaying","setFullScreen","togglePlayList","miniPlayerRef","miniWrapperRef","miniImageRef","handleTogglePlayList","e","stopPropagation","current","style","display","al","picUrl","name","ar","memo"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ProgressCircle from '../../../baseUI/progress-circle';\r\nimport { getName } from '../../../api/utils';\r\nimport { MiniPlayerContainer } from './style';\r\nimport { useCallback } from 'react';\r\n\r\n\r\nfunction MiniPlayer(props) {\r\n  const { full, song, playing, percent } = props;\r\n  const { clickPlaying, setFullScreen, togglePlayList } = props;\r\n\r\n  const miniPlayerRef = useRef();\r\n  const miniWrapperRef = useRef();\r\n  const miniImageRef = useRef();\r\n\r\n  const handleTogglePlayList = useCallback((e) => {\r\n    togglePlayList(true);\r\n    e.stopPropagation();\r\n  }, [togglePlayList]);\r\n\r\n  return (\r\n    <CSSTransition \r\n      in={!full} \r\n      timeout={400} \r\n      classNames=\"mini\" \r\n      onEnter={() => {\r\n        miniPlayerRef.current.style.display = \"flex\";\r\n      }}\r\n      onExited={() => {\r\n        miniPlayerRef.current.style.display = \"none\";\r\n      }}\r\n    >\r\n      <MiniPlayerContainer ref={miniPlayerRef} onClick={() => setFullScreen(true)}>\r\n        <div className=\"icon\">\r\n          <div className=\"imgWrapper\" ref={miniWrapperRef}>\r\n            <img className={`play ${playing ? \"\": \"pause\"}`} ref={miniImageRef} src={song.al.picUrl} width=\"40\" height=\"40\" alt=\"img\"/>\r\n          </div>\r\n        </div>\r\n        <div className=\"text\">\r\n          <h2 className=\"name\">{song.name}</h2>\r\n          <p className=\"desc\">{getName(song.ar)}</p>\r\n        </div>\r\n        <div className=\"control\">\r\n          <ProgressCircle radius={32} percent={percent}>\r\n            { playing ? \r\n              <i className=\"icon-mini iconfont icon-pause\" onClick={e => clickPlaying(e, false)}>&#xe650;</i>\r\n              :\r\n              <i className=\"icon-mini iconfont icon-play\" onClick={e => clickPlaying(e, true)}>&#xe61e;</i> \r\n            }\r\n          </ProgressCircle>\r\n        </div>\r\n        <div className=\"control\" onClick={handleTogglePlayList}>\r\n          <i className=\"iconfont\">&#xe640;</i>\r\n        </div>\r\n      </MiniPlayerContainer>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nexport default React.memo(MiniPlayer);"]},"metadata":{},"sourceType":"module"}