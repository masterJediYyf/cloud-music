{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Player\\\\index.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { changePlayingState, changeShowPlayList, changeCurrentIndex, changeCurrentSong, changePlayList, changePlayMode, changeFullScreen } from './store/actionCreators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Player(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Player\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n} //映射 Redux 全局的 state 到组件的 props 上\n\n\n_c = Player;\n\nconst mapStateToProps = state => ({\n  fullScreen: state.getIn([\"player\", \"fullScreen\"]),\n  playing: state.getIn([\"player\", \"playing\"]),\n  currentSong: state.getIn([\"player\", \"currentSong\"]),\n  showPlayList: state.getIn([\"player\", \"showPlayList\"]),\n  mode: state.getIn([\"player\", \"mode\"]),\n  currentIndex: state.getIn([\"player\", \"currentIndex\"]),\n  playList: state.getIn([\"player\", \"playList\"]),\n  sequencePlayList: state.getIn([\"player\", \"sequencePlayList\"])\n}); //映射 dispatch 到 props 上\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    togglePlayingDispatch(data) {\n      dispatch(changePlayingState(data));\n    },\n\n    toggleFullScreenDispatch(data) {\n      dispatch(changeFullScreen(data));\n    },\n\n    togglePlayListDispatch(data) {\n      dispatch(changeShowPlayList(data));\n    },\n\n    changeCurrentIndexDispatch(index) {\n      dispatch(changeCurrentIndex(index));\n    },\n\n    changeCurrentDispatch(data) {\n      dispatch(changeCurrentSong(data));\n    },\n\n    changeModeDispatch(data) {\n      dispatch(changePlayMode(data));\n    },\n\n    changePlayListDispatch(data) {\n      dispatch(changePlayList(data));\n    }\n\n  };\n}; // 将ui 组件 包装成容器组件\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/React.memo(Player));\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Player/index.js"],"names":["React","useRef","useState","useEffect","connect","changePlayingState","changeShowPlayList","changeCurrentIndex","changeCurrentSong","changePlayList","changePlayMode","changeFullScreen","Player","props","mapStateToProps","state","fullScreen","getIn","playing","currentSong","showPlayList","mode","currentIndex","playList","sequencePlayList","mapDispatchToProps","dispatch","togglePlayingDispatch","data","toggleFullScreenDispatch","togglePlayListDispatch","changeCurrentIndexDispatch","index","changeCurrentDispatch","changeModeDispatch","changePlayListDispatch","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAqBC,QAArB,EAA8BC,SAA9B,QAA8C,OAA9C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,EAIIC,iBAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,gBAPJ,QAQO,wBARP;;;AAUA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAClB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,C,CAED;;;KANSD,M;;AAOT,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,UAAU,EAAED,KAAK,CAACE,KAAN,CAAa,CAAC,QAAD,EAAW,YAAX,CAAb,CADkB;AAE9BC,EAAAA,OAAO,EAAEH,KAAK,CAACE,KAAN,CAAa,CAAC,QAAD,EAAW,SAAX,CAAb,CAFqB;AAG9BE,EAAAA,WAAW,EAAEJ,KAAK,CAACE,KAAN,CAAa,CAAC,QAAD,EAAW,aAAX,CAAb,CAHiB;AAI9BG,EAAAA,YAAY,EAAEL,KAAK,CAACE,KAAN,CAAa,CAAC,QAAD,EAAW,cAAX,CAAb,CAJgB;AAK9BI,EAAAA,IAAI,EAAEN,KAAK,CAACE,KAAN,CAAa,CAAC,QAAD,EAAW,MAAX,CAAb,CALwB;AAM9BK,EAAAA,YAAY,EAAEP,KAAK,CAACE,KAAN,CAAa,CAAC,QAAD,EAAW,cAAX,CAAb,CANgB;AAO9BM,EAAAA,QAAQ,EAAER,KAAK,CAACE,KAAN,CAAa,CAAC,QAAD,EAAW,UAAX,CAAb,CAPoB;AAQ9BO,EAAAA,gBAAgB,EAAET,KAAK,CAACE,KAAN,CAAa,CAAC,QAAD,EAAW,kBAAX,CAAb;AARY,CAAL,CAA7B,C,CAWA;;;AACA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACLC,IAAAA,qBAAqB,CAAEC,IAAF,EAAQ;AAC3BF,MAAAA,QAAQ,CAAErB,kBAAkB,CAAEuB,IAAF,CAApB,CAAR;AACD,KAHI;;AAILC,IAAAA,wBAAwB,CAAED,IAAF,EAAQ;AAC9BF,MAAAA,QAAQ,CAAEf,gBAAgB,CAAEiB,IAAF,CAAlB,CAAR;AACD,KANI;;AAOLE,IAAAA,sBAAsB,CAAEF,IAAF,EAAQ;AAC5BF,MAAAA,QAAQ,CAAEpB,kBAAkB,CAAEsB,IAAF,CAApB,CAAR;AACD,KATI;;AAULG,IAAAA,0BAA0B,CAAEC,KAAF,EAAS;AACjCN,MAAAA,QAAQ,CAAEnB,kBAAkB,CAAEyB,KAAF,CAApB,CAAR;AACD,KAZI;;AAaLC,IAAAA,qBAAqB,CAAEL,IAAF,EAAQ;AAC3BF,MAAAA,QAAQ,CAAElB,iBAAiB,CAAEoB,IAAF,CAAnB,CAAR;AACD,KAfI;;AAgBLM,IAAAA,kBAAkB,CAAEN,IAAF,EAAQ;AACxBF,MAAAA,QAAQ,CAAEhB,cAAc,CAAEkB,IAAF,CAAhB,CAAR;AACD,KAlBI;;AAmBLO,IAAAA,sBAAsB,CAAEP,IAAF,EAAQ;AAC5BF,MAAAA,QAAQ,CAAEjB,cAAc,CAAEmB,IAAF,CAAhB,CAAR;AACD;;AArBI,GAAP;AAuBH,CAxBD,C,CA0BA;;;AACA,eAAexB,OAAO,CAClBU,eADkB,EAElBW,kBAFkB,CAAP,eAGbzB,KAAK,CAACoC,IAAN,CAAWxB,MAAX,CAHa,CAAf","sourcesContent":["import React,{useRef,useState,useEffect} from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    changePlayingState,\r\n    changeShowPlayList,\r\n    changeCurrentIndex,\r\n    changeCurrentSong,\r\n    changePlayList,\r\n    changePlayMode,\r\n    changeFullScreen\r\n} from './store/actionCreators';\r\n\r\nfunction Player(props){\r\n    return (\r\n        <div>Player</div>\r\n    )\r\n}\r\n\r\n//映射 Redux 全局的 state 到组件的 props 上\r\nconst mapStateToProps = state => ({\r\n    fullScreen: state.getIn ([\"player\", \"fullScreen\"]),\r\n    playing: state.getIn ([\"player\", \"playing\"]),\r\n    currentSong: state.getIn ([\"player\", \"currentSong\"]),\r\n    showPlayList: state.getIn ([\"player\", \"showPlayList\"]),\r\n    mode: state.getIn ([\"player\", \"mode\"]),\r\n    currentIndex: state.getIn ([\"player\", \"currentIndex\"]),\r\n    playList: state.getIn ([\"player\", \"playList\"]),\r\n    sequencePlayList: state.getIn ([\"player\", \"sequencePlayList\"])\r\n})\r\n\r\n//映射 dispatch 到 props 上\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      togglePlayingDispatch (data) {\r\n        dispatch (changePlayingState (data));\r\n      },\r\n      toggleFullScreenDispatch (data) {\r\n        dispatch (changeFullScreen (data));\r\n      },\r\n      togglePlayListDispatch (data) {\r\n        dispatch (changeShowPlayList (data));\r\n      },\r\n      changeCurrentIndexDispatch (index) {\r\n        dispatch (changeCurrentIndex (index));\r\n      },\r\n      changeCurrentDispatch (data) {\r\n        dispatch (changeCurrentSong (data));\r\n      },\r\n      changeModeDispatch (data) {\r\n        dispatch (changePlayMode (data));\r\n      },\r\n      changePlayListDispatch (data) {\r\n        dispatch (changePlayList (data));\r\n      }\r\n    };\r\n};\r\n\r\n// 将ui 组件 包装成容器组件\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(React.memo(Player));"]},"metadata":{},"sourceType":"module"}