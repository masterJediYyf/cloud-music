{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Player\\\\play-list\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Scroll from '../../../baseUI/scroll/index';\nimport { PlayListWrapper, ListHeader, ListContent, ScrollWrapper } from './style';\nimport { connect } from \"react-redux\";\nimport { changeShowPlayList, changePlayMode, deleteSong, changeSequecePlayList } from '../store/actionCreators';\nimport { getName, shuffle, findIndex } from '../../../api/utils';\nimport { changeCurrentSong, changeCurrentIndex, changePlayList, changePlayingState } from './../store/actionCreators';\nimport { playMode } from './../../../api/config';\nimport { prefixStyle } from './../../../api/utils';\nimport Confirm from './../../../baseUI/confirm/index';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlayList(props) {\n  _s();\n\n  const [isShow, setIsShow] = useState(false);\n  const [canTouch, setCanTouch] = useState(true);\n  const [startY, setStartY] = useState(0);\n  const [initialed, setInitialed] = useState(0);\n  const [distance, setDistance] = useState(0);\n  const transform = prefixStyle(\"transform\");\n  const listContentRef = useRef();\n  const listWrapperRef = useRef();\n  const playListRef = useRef();\n  const confirmRef = useRef();\n  const {\n    currentIndex,\n    currentSong: immutableCurrentSong,\n    showPlayList,\n    playList: immutablePlayList,\n    mode,\n    sequencePlayList: immutableSequencePlayList\n  } = props;\n  const {\n    clearPreSong\n  } = props; //清空PreSong\n\n  const {\n    togglePlayListDispatch,\n    changeCurrentIndexDispatch,\n    changePlayListDispatch,\n    changeModeDispatch,\n    deleteSongDispatch,\n    clearDispatch\n  } = props;\n  const currentSong = immutableCurrentSong.toJS();\n  const playList = immutablePlayList.toJS();\n  const sequencePlayList = immutableSequencePlayList.toJS();\n\n  const changeMode = e => {\n    let newMode = (mode + 1) % 3;\n\n    if (newMode === 0) {\n      changePlayListDispatch(sequencePlayList);\n      let index = findIndex(currentSong, sequencePlayList);\n      changeCurrentIndexDispatch(index);\n    } else if (newMode === 1) {\n      changePlayListDispatch(sequencePlayList);\n    } else if (newMode === 2) {\n      let newList = shuffle(sequencePlayList);\n      let index = findIndex(currentSong, newList);\n      changePlayListDispatch(newList);\n      changeCurrentIndexDispatch(index);\n    }\n\n    changeModeDispatch(newMode);\n  };\n\n  const handleChangeCurrentIndex = index => {\n    if (currentIndex === index) return;\n    changeCurrentIndexDispatch(index);\n  };\n\n  const handleScroll = pos => {\n    let state = pos.y === 0;\n    setCanTouch(state);\n  };\n\n  const handleTouchStart = e => {\n    if (!canTouch || initialed) return;\n    listWrapperRef.current.style[\"transition\"] = \"\";\n    setDistance(0);\n    setStartY(e.nativeEvent.touches[0].pageY);\n    setInitialed(true);\n  };\n\n  const handleTouchMove = e => {\n    if (!canTouch || !initialed) return;\n    let distance = e.nativeEvent.touches[0].pageY - startY;\n    if (distance < 0) return;\n    setDistance(distance);\n    listWrapperRef.current.style.transform = `translate3d(0, ${distance}px, 0)`;\n  };\n\n  const handleTouchEnd = e => {\n    setInitialed(false);\n\n    if (distance >= 150) {\n      togglePlayListDispatch(false);\n    } else {\n      listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\n      listWrapperRef.current.style[transform] = `translate3d(0px, 0px, 0px)`;\n    }\n  };\n\n  const handleDeleteSong = (e, song) => {\n    e.stopPropagation();\n    deleteSongDispatch(song);\n  };\n\n  const handleShowClear = () => {\n    confirmRef.current.show();\n  };\n\n  const handleConfirmClear = () => {\n    clearDispatch(); // 修复清空播放列表后点击同样的歌曲，播放器不出现的bug\n\n    clearPreSong();\n  };\n\n  const getFavoriteIcon = item => {\n    return /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"iconfont\",\n      children: \"\\uE601\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getCurrentIcon = item => {\n    const current = currentSong.id === item.id;\n    const className = current ? 'icon-play' : '';\n    const content = current ? '&#xe6e3;' : '';\n    return /*#__PURE__*/_jsxDEV(\"i\", {\n      className: `current iconfont ${className}`,\n      dangerouslySetInnerHTML: {\n        __html: content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getPlayMode = () => {\n    let content, text;\n\n    if (mode === playMode.sequence) {\n      content = \"&#xe625;\";\n      text = \"顺序播放\";\n    } else if (mode === playMode.loop) {\n      content = \"&#xe653;\";\n      text = \"单曲循环\";\n    } else {\n      content = \"&#xe61b;\";\n      text = \"随机播放\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"iconfont\",\n        onClick: e => changeMode(e),\n        dangerouslySetInnerHTML: {\n          __html: content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        onClick: e => changeMode(e),\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  };\n\n  const onEnterCB = useCallback(() => {\n    setIsShow(true);\n    listWrapperRef.current.style[transform] = `translate3d(0, 100%, 0)`;\n  }, [transform]);\n  const onEnteringCB = useCallback(() => {\n    listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\n    listWrapperRef.current.style[transform] = `translate3d(0, 0, 0)`;\n  }, [transform]);\n  const onExitCB = useCallback(() => {\n    listWrapperRef.current.style[transform] = `translate3d(0, ${distance}px, 0)`;\n  }, [distance, transform]);\n  const onExitingCB = useCallback(() => {\n    listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\n    listWrapperRef.current.style[transform] = `translate3d(0px, 100%, 0px)`;\n  }, [transform]);\n  const onExitedCB = useCallback(() => {\n    setIsShow(false);\n    listWrapperRef.current.style[transform] = `translate3d(0px, 100%, 0px)`;\n  }, [transform]);\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: showPlayList,\n    timeout: 300,\n    classNames: \"list-fade\",\n    onEnter: onEnterCB,\n    onEntering: onEnteringCB,\n    onExit: onExitCB,\n    onExiting: onExitingCB,\n    onExited: onExitedCB,\n    children: /*#__PURE__*/_jsxDEV(PlayListWrapper, {\n      ref: playListRef,\n      style: isShow === true ? {\n        display: \"block\"\n      } : {\n        display: \"none\"\n      },\n      onClick: () => togglePlayListDispatch(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list_wrapper\",\n        ref: listWrapperRef,\n        onClick: e => e.stopPropagation(),\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        onTouchEnd: handleTouchEnd,\n        children: [/*#__PURE__*/_jsxDEV(ListHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: [getPlayMode(), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"iconfont clear\",\n              onClick: handleShowClear,\n              children: \"\\uE63D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ScrollWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Scroll, {\n            ref: listContentRef,\n            onScroll: pos => handleScroll(pos),\n            bounceTop: false,\n            children: /*#__PURE__*/_jsxDEV(ListContent, {\n              children: playList.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"item\",\n                  onClick: () => handleChangeCurrentIndex(index),\n                  children: [getCurrentIcon(item), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text\",\n                    children: [item.name, \" - \", getName(item.ar)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"like\",\n                    children: getFavoriteIcon(item)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"delete\",\n                    onClick: e => handleDeleteSong(e, item),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"iconfont\",\n                      children: \"\\uE63D\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 25\n                  }, this)]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Confirm, {\n        ref: confirmRef,\n        text: \"是否删除全部?\",\n        cancelBtnText: \"取消\",\n        confirmBtnText: \"确定\",\n        handleConfirm: handleConfirmClear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n} // 映射Redux全局的state到组件的props上\n\n\n_s(PlayList, \"UFUdVzQaFGZNLXvQKEB2Fkl6Uiw=\");\n\n_c = PlayList;\n\nconst mapStateToProps = state => ({\n  currentIndex: state.getIn(['player', 'currentIndex']),\n  currentSong: state.getIn(['player', 'currentSong']),\n  playList: state.getIn(['player', 'playList']),\n  sequencePlayList: state.getIn(['player', 'sequencePlayList']),\n  showPlayList: state.getIn(['player', 'showPlayList']),\n  mode: state.getIn(['player', 'mode'])\n}); // 映射dispatch到props上\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    togglePlayListDispatch(data) {\n      dispatch(changeShowPlayList(data));\n    },\n\n    changeCurrentIndexDispatch(data) {\n      dispatch(changeCurrentIndex(data));\n    },\n\n    changeModeDispatch(data) {\n      dispatch(changePlayMode(data));\n    },\n\n    changePlayListDispatch(data) {\n      dispatch(changePlayList(data));\n    },\n\n    deleteSongDispatch(data) {\n      dispatch(deleteSong(data));\n    },\n\n    clearDispatch() {\n      dispatch(changePlayList([]));\n      dispatch(changeSequecePlayList([]));\n      dispatch(changeCurrentIndex(-1));\n      dispatch(changeShowPlayList(false));\n      dispatch(changeCurrentSong({}));\n      dispatch(changePlayingState(false));\n    }\n\n  };\n}; // 将ui组件包装成容器组件\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/React.memo(PlayList));\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayList\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Player/play-list/index.js"],"names":["React","useRef","useState","CSSTransition","Scroll","PlayListWrapper","ListHeader","ListContent","ScrollWrapper","connect","changeShowPlayList","changePlayMode","deleteSong","changeSequecePlayList","getName","shuffle","findIndex","changeCurrentSong","changeCurrentIndex","changePlayList","changePlayingState","playMode","prefixStyle","Confirm","useCallback","PlayList","props","isShow","setIsShow","canTouch","setCanTouch","startY","setStartY","initialed","setInitialed","distance","setDistance","transform","listContentRef","listWrapperRef","playListRef","confirmRef","currentIndex","currentSong","immutableCurrentSong","showPlayList","playList","immutablePlayList","mode","sequencePlayList","immutableSequencePlayList","clearPreSong","togglePlayListDispatch","changeCurrentIndexDispatch","changePlayListDispatch","changeModeDispatch","deleteSongDispatch","clearDispatch","toJS","changeMode","e","newMode","index","newList","handleChangeCurrentIndex","handleScroll","pos","state","y","handleTouchStart","current","style","nativeEvent","touches","pageY","handleTouchMove","handleTouchEnd","handleDeleteSong","song","stopPropagation","handleShowClear","show","handleConfirmClear","getFavoriteIcon","item","getCurrentIcon","id","className","content","__html","getPlayMode","text","sequence","loop","onEnterCB","onEnteringCB","onExitCB","onExitingCB","onExitedCB","display","map","name","ar","mapStateToProps","getIn","mapDispatchToProps","dispatch","data","memo"],"mappings":"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","sourcesContent":["import React, {useRef, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Scroll from '../../../baseUI/scroll/index'\r\nimport {\r\n  PlayListWrapper,\r\n  ListHeader,\r\n  ListContent,\r\n  ScrollWrapper\r\n} from './style';\r\nimport { connect } from \"react-redux\";\r\nimport { changeShowPlayList, changePlayMode, deleteSong, changeSequecePlayList } from '../store/actionCreators';\r\nimport { getName, shuffle, findIndex } from '../../../api/utils';\r\nimport { changeCurrentSong, changeCurrentIndex, changePlayList, changePlayingState } from './../store/actionCreators';\r\nimport { playMode } from './../../../api/config';\r\nimport { prefixStyle } from './../../../api/utils';\r\nimport Confirm from './../../../baseUI/confirm/index';\r\nimport { useCallback } from 'react';\r\n\r\nfunction PlayList(props) {\r\n\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [canTouch,setCanTouch] = useState(true);\r\n  const [startY, setStartY] = useState(0);\r\n  const [initialed, setInitialed] = useState(0);\r\n  const [distance, setDistance] = useState(0);\r\n\r\n  const transform = prefixStyle(\"transform\");\r\n\r\n  const listContentRef = useRef();\r\n  const listWrapperRef = useRef();\r\n  const playListRef = useRef();\r\n  const confirmRef = useRef();\r\n\r\n  const {\r\n    currentIndex,\r\n    currentSong:immutableCurrentSong,\r\n    showPlayList,\r\n    playList:immutablePlayList,\r\n    mode,\r\n    sequencePlayList:immutableSequencePlayList\r\n  } = props;\r\n\r\n  const { clearPreSong } = props; //清空PreSong\r\n\r\n  const {\r\n    togglePlayListDispatch,\r\n    changeCurrentIndexDispatch,\r\n    changePlayListDispatch,\r\n    changeModeDispatch,\r\n    deleteSongDispatch,\r\n    clearDispatch\r\n  } = props;\r\n\r\n  const currentSong = immutableCurrentSong.toJS();\r\n  const playList = immutablePlayList.toJS();\r\n  const sequencePlayList = immutableSequencePlayList.toJS();\r\n\r\n  const changeMode = (e) => {\r\n    let newMode = (mode + 1)%3;\r\n    if(newMode === 0){\r\n      changePlayListDispatch(sequencePlayList);\r\n      let index = findIndex(currentSong, sequencePlayList);\r\n      changeCurrentIndexDispatch(index);\r\n    }else if(newMode === 1){\r\n      changePlayListDispatch(sequencePlayList);\r\n    } else if(newMode === 2) {\r\n      let newList = shuffle(sequencePlayList);\r\n      let index = findIndex(currentSong, newList);\r\n      changePlayListDispatch(newList);\r\n      changeCurrentIndexDispatch(index);\r\n    }\r\n    changeModeDispatch(newMode);\r\n  }\r\n\r\n  const handleChangeCurrentIndex = (index) => {\r\n    if(currentIndex === index) return;\r\n    changeCurrentIndexDispatch(index);\r\n  }\r\n\r\n  const handleScroll = (pos) => {\r\n    let state = pos.y === 0;\r\n    setCanTouch(state);\r\n  }\r\n\r\n  const handleTouchStart = (e) => {\r\n    if(!canTouch || initialed) return;\r\n    listWrapperRef.current.style[\"transition\"] = \"\";\r\n    setDistance(0);\r\n    setStartY(e.nativeEvent.touches[0].pageY);\r\n    setInitialed(true);\r\n  };\r\n\r\n  const handleTouchMove = (e) => {\r\n    if(!canTouch || !initialed) return;\r\n    let distance = e.nativeEvent.touches[0].pageY - startY;\r\n    if(distance < 0) return;\r\n    setDistance(distance);\r\n    listWrapperRef.current.style.transform = `translate3d(0, ${distance}px, 0)`;\r\n  };\r\n\r\n  const handleTouchEnd = (e) => {\r\n    setInitialed(false);\r\n    if(distance >= 150) {\r\n      togglePlayListDispatch(false);\r\n    } else {\r\n      listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\r\n      listWrapperRef.current.style[transform] = `translate3d(0px, 0px, 0px)`;\r\n    }\r\n  };\r\n\r\n  const handleDeleteSong = (e, song) => {\r\n    e.stopPropagation();\r\n    deleteSongDispatch(song);\r\n  };\r\n\r\n  const handleShowClear = () => {\r\n    confirmRef.current.show();\r\n  } \r\n\r\n  const handleConfirmClear = () => {\r\n    clearDispatch();\r\n    // 修复清空播放列表后点击同样的歌曲，播放器不出现的bug\r\n    clearPreSong();\r\n  }\r\n\r\n  const getFavoriteIcon = (item) => {\r\n    return (\r\n      <i className=\"iconfont\">&#xe601;</i>\r\n    )\r\n  }\r\n\r\n  const getCurrentIcon = (item) => {\r\n    const current = currentSong.id === item.id;\r\n    const className = current ? 'icon-play' : '';\r\n    const content = current ? '&#xe6e3;': '';\r\n    return (\r\n      <i className={`current iconfont ${className}`} dangerouslySetInnerHTML={{__html:content}}></i>\r\n    )\r\n  }\r\n\r\n  const getPlayMode = () => {\r\n    let content, text;\r\n    if(mode === playMode.sequence) {\r\n      content = \"&#xe625;\";\r\n      text = \"顺序播放\";\r\n    } else if(mode === playMode.loop) {\r\n      content = \"&#xe653;\";\r\n      text = \"单曲循环\";\r\n    } else {\r\n      content = \"&#xe61b;\";\r\n      text = \"随机播放\";\r\n    }\r\n    return (\r\n      <div>\r\n        <i className=\"iconfont\" onClick={(e) => changeMode(e)}  dangerouslySetInnerHTML={{__html: content}}></i>\r\n        <span className=\"text\" onClick={(e) => changeMode(e)}>{text}</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const onEnterCB = useCallback(() => {\r\n    setIsShow(true);\r\n    listWrapperRef.current.style[transform] = `translate3d(0, 100%, 0)`;\r\n  }, [transform]);\r\n \r\n  const onEnteringCB = useCallback(() => {\r\n    listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\r\n    listWrapperRef.current.style[transform] = `translate3d(0, 0, 0)`;\r\n  }, [transform]);\r\n\r\n  const onExitCB = useCallback(() => {\r\n    listWrapperRef.current.style[transform] = `translate3d(0, ${distance}px, 0)`;\r\n  }, [distance,transform]);\r\n \r\n  const onExitingCB = useCallback(() => {\r\n    listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\r\n    listWrapperRef.current.style[transform] = `translate3d(0px, 100%, 0px)`;\r\n  }, [transform]);\r\n\r\n  const onExitedCB = useCallback(() => {\r\n    setIsShow(false);\r\n    listWrapperRef.current.style[transform] = `translate3d(0px, 100%, 0px)`;\r\n  }, [transform]);\r\n\r\n  return (\r\n    <CSSTransition \r\n      in={showPlayList} \r\n      timeout={300} \r\n      classNames=\"list-fade\"\r\n      onEnter={onEnterCB}\r\n      onEntering={onEnteringCB}\r\n      onExit={onExitCB}\r\n      onExiting={onExitingCB}\r\n      onExited={onExitedCB}\r\n    >\r\n      <PlayListWrapper \r\n        ref={playListRef} \r\n        style={isShow === true ? { display: \"block\" } : { display: \"none\" }} \r\n        onClick={() => togglePlayListDispatch(false)}\r\n      >\r\n        <div \r\n          className=\"list_wrapper\" \r\n          ref={listWrapperRef} \r\n          onClick={e => e.stopPropagation()}\r\n          onTouchStart={handleTouchStart}\r\n          onTouchMove={handleTouchMove}\r\n          onTouchEnd={handleTouchEnd}\r\n        >\r\n          <ListHeader>\r\n            <h1 className=\"title\">\r\n              { getPlayMode() }\r\n              <span className=\"iconfont clear\" onClick={handleShowClear}>&#xe63d;</span>\r\n            </h1>\r\n          </ListHeader>\r\n          <ScrollWrapper>\r\n            <Scroll \r\n              ref={listContentRef} \r\n              onScroll={pos => handleScroll(pos)}\r\n              bounceTop={false}\r\n            >\r\n              <ListContent>\r\n                {\r\n                  playList.map((item, index) => {\r\n                    return (\r\n                      <li className=\"item\" key={item.id} onClick={() => handleChangeCurrentIndex(index)}>\r\n                        {getCurrentIcon(item)}\r\n                        <span className=\"text\">{item.name} - {getName(item.ar)}</span>\r\n                        <span className=\"like\">\r\n                          {getFavoriteIcon(item)}\r\n                        </span>\r\n                        <span className=\"delete\" onClick={(e) => handleDeleteSong(e, item)}>\r\n                          <i className=\"iconfont\">&#xe63d;</i>\r\n                        </span>\r\n                      </li>\r\n                    )\r\n                  })\r\n                }\r\n              </ListContent>\r\n            </Scroll>\r\n          </ScrollWrapper>\r\n        </div>\r\n        <Confirm ref={confirmRef} text={\"是否删除全部?\"} cancelBtnText={\"取消\"} confirmBtnText={\"确定\"} handleConfirm={handleConfirmClear}></Confirm>\r\n      </PlayListWrapper>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\n// 映射Redux全局的state到组件的props上\r\nconst mapStateToProps = (state) => ({\r\n  currentIndex: state.getIn(['player', 'currentIndex']),\r\n  currentSong: state.getIn(['player', 'currentSong']),\r\n  playList: state.getIn(['player', 'playList']),\r\n  sequencePlayList: state.getIn(['player', 'sequencePlayList']),\r\n  showPlayList: state.getIn(['player', 'showPlayList']),\r\n  mode: state.getIn(['player', 'mode'])\r\n});\r\n// 映射dispatch到props上\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    togglePlayListDispatch(data) {\r\n      dispatch(changeShowPlayList(data));\r\n    },\r\n    changeCurrentIndexDispatch(data) {\r\n      dispatch(changeCurrentIndex(data));\r\n    },\r\n    changeModeDispatch(data) {\r\n      dispatch(changePlayMode(data));\r\n    },\r\n    changePlayListDispatch(data) {\r\n      dispatch(changePlayList(data));\r\n    },\r\n    deleteSongDispatch(data) {\r\n      dispatch(deleteSong(data));\r\n    },\r\n    clearDispatch() {\r\n      dispatch(changePlayList([]));\r\n      dispatch(changeSequecePlayList([]));\r\n      dispatch(changeCurrentIndex(-1));\r\n      dispatch(changeShowPlayList(false));\r\n      dispatch(changeCurrentSong({}));\r\n      dispatch(changePlayingState(false));\r\n    }\r\n  }\r\n};\r\n\r\n// 将ui组件包装成容器组件\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(PlayList));"]},"metadata":{},"sourceType":"module"}