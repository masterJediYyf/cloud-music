{"ast":null,"code":"import React,{useEffect}from'react';import Slider from'../../components/slider/';import{connect}from\"react-redux\";import{forceCheck}from'react-lazyload';import*as actionTypes from'./store/actionCreators';import RecommendList from'../../components/list/';import Scroll from'../../baseUI/scroll/index';import{Content}from'./style';import Loading from'../../baseUI/loading/index';import{renderRoutes}from'react-router-config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Recommend(props){var bannerList=props.bannerList,recommendList=props.recommendList,enterLoading=props.enterLoading;var getBannerDataDispatch=props.getBannerDataDispatch,getRecommendListDataDispatch=props.getRecommendListDataDispatch;useEffect(function(){if(!bannerList.size){getBannerDataDispatch();}if(!recommendList.size){getRecommendListDataDispatch();}// eslint-disable-next-line\n},[]);var bannerListJS=bannerList?bannerList.toJS():[];var recommendListJS=recommendList?recommendList.toJS():[];return/*#__PURE__*/_jsxs(Content,{children:[/*#__PURE__*/_jsx(Scroll,{onScroll:forceCheck,children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Slider,{bannerList:bannerListJS}),/*#__PURE__*/_jsx(RecommendList,{recommendList:recommendListJS})]})}),enterLoading?/*#__PURE__*/_jsx(Loading,{}):null,renderRoutes(props.route.routes)]});}// 映射Redux全局的state到组件的props上\nvar mapStateToProps=function mapStateToProps(state){return{// 不要再这里将数据toJS,不然每次diff比对props的时候都是不一样的引用，还是导致不必要的重渲染, 属于滥用immutable\nbannerList:state.getIn(['recommend','bannerList']),recommendList:state.getIn(['recommend','recommendList']),enterLoading:state.getIn(['recommend','enterLoading'])//简单数据类型不需要调用toJS\n};};// 映射dispatch到props上\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{getBannerDataDispatch:function getBannerDataDispatch(){dispatch(actionTypes.getBannerList());},getRecommendListDataDispatch:function getRecommendListDataDispatch(){dispatch(actionTypes.getRecommendList());}};};// 将ui组件包装成容器组件\nexport default connect(mapStateToProps,mapDispatchToProps)(/*#__PURE__*/React.memo(Recommend));","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Recommend/index.js"],"names":["React","useEffect","Slider","connect","forceCheck","actionTypes","RecommendList","Scroll","Content","Loading","renderRoutes","Recommend","props","bannerList","recommendList","enterLoading","getBannerDataDispatch","getRecommendListDataDispatch","size","bannerListJS","toJS","recommendListJS","route","routes","mapStateToProps","state","getIn","mapDispatchToProps","dispatch","getBannerList","getRecommendList","memo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAAQC,UAAR,KAAyB,gBAAzB,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,wBAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,wBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,2BAAnB,CACA,OAASC,OAAT,KAAwB,SAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,4BAApB,CACA,OAASC,YAAT,KAA6B,qBAA7B,C,wFAEA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAAyB,IACfC,CAAAA,UADe,CAC6BD,KAD7B,CACfC,UADe,CACHC,aADG,CAC6BF,KAD7B,CACHE,aADG,CACYC,YADZ,CAC6BH,KAD7B,CACYG,YADZ,IAGfC,CAAAA,qBAHe,CAGyCJ,KAHzC,CAGfI,qBAHe,CAGQC,4BAHR,CAGyCL,KAHzC,CAGQK,4BAHR,CAKvBhB,SAAS,CAAC,UAAM,CACd,GAAG,CAACY,UAAU,CAACK,IAAf,CAAoB,CAClBF,qBAAqB,GACtB,CACD,GAAG,CAACF,aAAa,CAACI,IAAlB,CAAuB,CACrBD,4BAA4B,GAC7B,CACD;AACD,CARQ,CAQN,EARM,CAAT,CAUA,GAAME,CAAAA,YAAY,CAAGN,UAAU,CAAGA,UAAU,CAACO,IAAX,EAAH,CAAuB,EAAtD,CACA,GAAMC,CAAAA,eAAe,CAAGP,aAAa,CAAGA,aAAa,CAACM,IAAd,EAAH,CAAyB,EAA9D,CAEA,mBACE,MAAC,OAAD,yBACE,KAAC,MAAD,EAAQ,QAAQ,CAAEhB,UAAlB,uBACE,oCACE,KAAC,MAAD,EAAQ,UAAU,CAAEe,YAApB,EADF,cAEE,KAAC,aAAD,EAAe,aAAa,CAAEE,eAA9B,EAFF,GADF,EADF,CAOIN,YAAY,cAAG,KAAC,OAAD,IAAH,CAAyB,IAPzC,CAQIL,YAAY,CAACE,KAAK,CAACU,KAAN,CAAYC,MAAb,CARhB,GADF,CAYD,CAED;AACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClC;AACAZ,UAAU,CAAEY,KAAK,CAACC,KAAN,CAAY,CAAC,WAAD,CAAc,YAAd,CAAZ,CAFsB,CAGlCZ,aAAa,CAAEW,KAAK,CAACC,KAAN,CAAY,CAAC,WAAD,CAAc,eAAd,CAAZ,CAHmB,CAIlCX,YAAY,CAAEU,KAAK,CAACC,KAAN,CAAY,CAAC,WAAD,CAAc,cAAd,CAAZ,CAA0C;AAJtB,CAAZ,EAAxB,CAMA;AACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACLZ,qBADK,iCACmB,CACtBY,QAAQ,CAACvB,WAAW,CAACwB,aAAZ,EAAD,CAAR,CACD,CAHI,CAILZ,4BAJK,wCAI0B,CAC7BW,QAAQ,CAACvB,WAAW,CAACyB,gBAAZ,EAAD,CAAR,CACD,CANI,CAAP,CAQD,CATD,CAWA;AACA,cAAe3B,CAAAA,OAAO,CAACqB,eAAD,CAAkBG,kBAAlB,CAAP,cAA6C3B,KAAK,CAAC+B,IAAN,CAAWpB,SAAX,CAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Slider from '../../components/slider/';\r\nimport { connect } from \"react-redux\";\r\nimport {forceCheck} from 'react-lazyload';\r\nimport * as actionTypes from './store/actionCreators';\r\nimport RecommendList from '../../components/list/';\r\nimport Scroll from '../../baseUI/scroll/index';\r\nimport { Content } from './style';\r\nimport Loading from '../../baseUI/loading/index';\r\nimport { renderRoutes } from 'react-router-config';\r\n\r\nfunction Recommend(props){\r\n  const { bannerList, recommendList, enterLoading } = props;\r\n\r\n  const { getBannerDataDispatch, getRecommendListDataDispatch } = props;\r\n\r\n  useEffect(() => {\r\n    if(!bannerList.size){\r\n      getBannerDataDispatch();\r\n    }\r\n    if(!recommendList.size){\r\n      getRecommendListDataDispatch();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const bannerListJS = bannerList ? bannerList.toJS() : [];\r\n  const recommendListJS = recommendList ? recommendList.toJS() :[];\r\n\r\n  return (\r\n    <Content>\r\n      <Scroll onScroll={forceCheck}>\r\n        <div>\r\n          <Slider bannerList={bannerListJS}></Slider>\r\n          <RecommendList recommendList={recommendListJS}></RecommendList>\r\n        </div>\r\n      </Scroll>\r\n      { enterLoading ? <Loading></Loading> : null }\r\n      { renderRoutes(props.route.routes) }\r\n    </Content> \r\n  );\r\n}\r\n\r\n// 映射Redux全局的state到组件的props上\r\nconst mapStateToProps = (state) => ({\r\n  // 不要再这里将数据toJS,不然每次diff比对props的时候都是不一样的引用，还是导致不必要的重渲染, 属于滥用immutable\r\n  bannerList: state.getIn(['recommend', 'bannerList']),\r\n  recommendList: state.getIn(['recommend', 'recommendList']),\r\n  enterLoading: state.getIn(['recommend', 'enterLoading'])//简单数据类型不需要调用toJS\r\n});\r\n// 映射dispatch到props上\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getBannerDataDispatch() {\r\n      dispatch(actionTypes.getBannerList());\r\n    },\r\n    getRecommendListDataDispatch() {\r\n      dispatch(actionTypes.getRecommendList());\r\n    },\r\n  }\r\n};\r\n\r\n// 将ui组件包装成容器组件\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Recommend));"]},"metadata":{},"sourceType":"module"}