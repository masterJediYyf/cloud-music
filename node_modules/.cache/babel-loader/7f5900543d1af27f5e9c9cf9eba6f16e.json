{"ast":null,"code":"import { getHotSingerListRequest, getSingerListRequest } from \"../../../api/request\";\nimport { CHANGE_SINGER_LIST, CHANGE_CATOGORY, CHANGE_ALPHA, CHANGE_PAGE_COUNT, CHANGE_PULLUP_LOADING, CHANGE_PULLDOWN_LOADING, CHANGE_ENTER_LOADING } from './constants';\nimport { fromJS } from 'immutable';\n\nconst changeSingerList = data => ({\n  type: CHANGE_SINGER_LIST,\n  data: fromJS(data)\n});\n\nexport const changePageCount = data => ({\n  type: CHANGE_PAGE_COUNT,\n  data\n}); //进场loading\n\nexport const changeEnterLoading = data => ({\n  type: CHANGE_ENTER_LOADING,\n  data\n}); //滑动最底部loading\n\nexport const changePullUpLoading = data => ({\n  type: CHANGE_PULLUP_LOADING,\n  data\n}); //顶部下拉刷新loading\n\nexport const changePullDownLoading = data => ({\n  type: CHANGE_PULLDOWN_LOADING,\n  data\n}); //第一次加载热门歌手\n\nexport const getHotSingerList = () => {\n  return dispatch => {\n    getHotSingerListRequest(0).then(res => {\n      const data = res.artists;\n      dispatch(changeSingerList(data));\n      dispatch(changeEnterLoading(false));\n      dispatch(changePullDownLoading(false));\n    }).catch(() => {\n      console.log('热门歌手数据获取失败');\n    });\n  };\n}; //加载更多热门歌手\n\nexport const refreshMoreHotSingerList = () => {\n  return (dispatch, getState) => {\n    const pageCount = getState().getIn(['singers', 'pageCount']);\n    const singerList = getState().getIn(['singers', 'singerList']).toJS();\n    getHotSingerListRequest(pageCount).then(res => {\n      const data = [...singerList, ...res.artists];\n      dispatch(changeSingerList(data));\n      dispatch(changePullUpLoading(false));\n    }).catch(() => {\n      console.log('热门歌手数据获取失败');\n    });\n  };\n}; //第一次加载对应类别的歌手\n\nexport const getSingerList = (category, alpha) => {\n  return (dispatch, getState) => {\n    getSingerListRequest(category, alpha, 0).then(res => {\n      const data = res.artists;\n      dispatch(changeSingerList(data));\n      dispatch(changeEnterLoading(false));\n      dispatch(changePullDownLoading(false));\n    }).catch(() => {\n      console.log('歌手数据获取失败');\n    });\n  };\n}; //加载更多歌手\n\nexport const refreshMoreSingerList = (category, alpha) => {\n  return (dispatch, getState) => {\n    const pageCount = getState().getIn(['singers', 'pageCount']);\n    const singerList = getState().getIn(['singers', 'singerList']).toJS();\n    getSingerListRequest(category, alpha, pageCount).then(res => {\n      const data = [...singerList, ...res.artists];\n      dispatch(changeSingerList(data));\n      dispatch(changePullUpLoading(false));\n    }).catch(() => {\n      console.log('歌手数据获取失败');\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Singers/store/actionCreators.js"],"names":["getHotSingerListRequest","getSingerListRequest","CHANGE_SINGER_LIST","CHANGE_CATOGORY","CHANGE_ALPHA","CHANGE_PAGE_COUNT","CHANGE_PULLUP_LOADING","CHANGE_PULLDOWN_LOADING","CHANGE_ENTER_LOADING","fromJS","changeSingerList","data","type","changePageCount","changeEnterLoading","changePullUpLoading","changePullDownLoading","getHotSingerList","dispatch","then","res","artists","catch","console","log","refreshMoreHotSingerList","getState","pageCount","getIn","singerList","toJS","getSingerList","category","alpha","refreshMoreSingerList"],"mappings":"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","sourcesContent":["import {\r\n    getHotSingerListRequest,\r\n    getSingerListRequest\r\n  } from \"../../../api/request\";\r\n  import {\r\n    CHANGE_SINGER_LIST,\r\n    CHANGE_CATOGORY,\r\n    CHANGE_ALPHA,\r\n    CHANGE_PAGE_COUNT,\r\n    CHANGE_PULLUP_LOADING,\r\n    CHANGE_PULLDOWN_LOADING,\r\n    CHANGE_ENTER_LOADING\r\n  } from './constants';\r\n  import {\r\n    fromJS\r\n  } from 'immutable';\r\n  \r\n  \r\n  const changeSingerList = (data) => ({\r\n    type: CHANGE_SINGER_LIST,\r\n    data: fromJS(data)\r\n  });\r\n  \r\n  export const changePageCount = (data) => ({\r\n    type: CHANGE_PAGE_COUNT,\r\n    data\r\n  });\r\n  \r\n  //进场loading\r\n  export const changeEnterLoading = (data) => ({\r\n    type: CHANGE_ENTER_LOADING,\r\n    data\r\n  });\r\n  \r\n  //滑动最底部loading\r\n  export const changePullUpLoading = (data) => ({\r\n    type: CHANGE_PULLUP_LOADING,\r\n    data\r\n  });\r\n  \r\n  //顶部下拉刷新loading\r\n  export const changePullDownLoading = (data) => ({\r\n    type: CHANGE_PULLDOWN_LOADING,\r\n    data\r\n  });\r\n  \r\n  //第一次加载热门歌手\r\n  export const getHotSingerList = () => {\r\n    return (dispatch) => {\r\n      getHotSingerListRequest(0).then(res => {\r\n        const data = res.artists;\r\n        dispatch(changeSingerList(data));\r\n        dispatch(changeEnterLoading(false));\r\n        dispatch(changePullDownLoading(false));\r\n      }).catch(() => {\r\n        console.log('热门歌手数据获取失败');\r\n      })\r\n    }\r\n  };\r\n  \r\n  //加载更多热门歌手\r\n  export const refreshMoreHotSingerList = () => {\r\n    return (dispatch, getState) => {\r\n      const pageCount = getState().getIn(['singers', 'pageCount']);\r\n      const singerList = getState().getIn(['singers', 'singerList']).toJS();\r\n      getHotSingerListRequest(pageCount).then(res => {\r\n        const data = [...singerList, ...res.artists];\r\n        dispatch(changeSingerList(data));\r\n        dispatch(changePullUpLoading(false));\r\n      }).catch(() => {\r\n        console.log('热门歌手数据获取失败');\r\n      });\r\n    }\r\n  };\r\n  \r\n  //第一次加载对应类别的歌手\r\n  export const getSingerList = (category, alpha) => {\r\n    return (dispatch, getState) => {\r\n      getSingerListRequest(category, alpha, 0).then(res => {\r\n        const data = res.artists;\r\n        dispatch(changeSingerList(data));\r\n        dispatch(changeEnterLoading(false));\r\n        dispatch(changePullDownLoading(false));\r\n      }).catch(() => {\r\n        console.log('歌手数据获取失败');\r\n      });\r\n    }\r\n  };\r\n  \r\n  //加载更多歌手\r\n  export const refreshMoreSingerList = (category, alpha) => {\r\n    return (dispatch, getState) => {\r\n      const pageCount = getState().getIn(['singers', 'pageCount']);\r\n      const singerList = getState().getIn(['singers', 'singerList']).toJS();\r\n      getSingerListRequest(category, alpha, pageCount).then(res => {\r\n        const data = [...singerList, ...res.artists];\r\n        dispatch(changeSingerList(data));\r\n        dispatch(changePullUpLoading(false));\r\n      }).catch(() => {\r\n        console.log('歌手数据获取失败');\r\n      });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}