{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Player\\\\normal-player\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport animations from \"create-keyframe-animation\";\nimport ProgressBar from \"../../../baseUI/progress-bar/index\";\nimport Scroll from \"../../../baseUI/scroll/index\";\nimport { playMode, list } from \"../../../api/config\";\nimport { prefixStyle, formatPlayTime, getName } from \"../../../api/utils\";\nimport { NormalPlayerContainer, Top, Middle, Bottom, ProgressWrapper, Operators, CDWrapper, LyricContainer, LyricWrapper, List, ListItem } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NormalPlayer(props) {\n  _s();\n\n  const {\n    full,\n    song,\n    mode,\n    playing,\n    percent,\n    currentTime,\n    duration,\n    currentLineNum,\n    currentPlayingLyric,\n    currentLyric,\n    speed\n  } = props;\n  const {\n    changeMode,\n    handlePrev,\n    handleNext,\n    onProgressChange,\n    clickPlaying,\n    toggleFullScreenDispatch,\n    togglePlayListDispatch,\n    clickSpeed\n  } = props; //处理transform的浏览器兼容问题\n\n  const transform = prefixStyle(\"transform\");\n  const normalPlayerRef = useRef();\n  const lyricScrollRef = useRef();\n  const lyricLineRefs = useRef([]);\n  const cdWrapperRef = useRef();\n  const [currentState, setCurrentState] = useState(0);\n  useEffect(() => {\n    if (!lyricScrollRef.current) return;\n    let bScroll = lyricScrollRef.current.getBScroll();\n\n    if (currentLineNum > 5) {\n      let lineEl = lyricLineRefs.current[currentLineNum - 5].current;\n      bScroll.scrollToElement(lineEl, 1000);\n    } else {\n      bScroll.scrollTo(0, 0, 1000);\n    }\n  }, [currentLineNum]);\n\n  const getPlayMode = () => {\n    let content;\n\n    if (mode === playMode.sequence) {\n      content = \"&#xe625;\";\n    } else if (mode === playMode.loop) {\n      content = \"&#xe653;\";\n    } else {\n      content = \"&#xe61b;\";\n    }\n\n    return content;\n  };\n\n  const _getPosAndScale = () => {\n    const targetWidth = 40;\n    const paddingLeft = 40;\n    const paddingBottom = 30;\n    const paddingTop = 80;\n    const width = window.innerWidth * 0.8;\n    const scale = targetWidth / width; // 两个圆心的横坐标距离和纵坐标距离\n\n    const x = -(window.innerWidth / 2 - paddingLeft);\n    const y = window.innerHeight - paddingTop - width / 2 - paddingBottom;\n    return {\n      x,\n      y,\n      scale\n    };\n  };\n\n  const enter = () => {\n    normalPlayerRef.current.style.display = \"block\";\n\n    const {\n      x,\n      y,\n      scale\n    } = _getPosAndScale();\n\n    let animation = {\n      0: {\n        transform: `translate3d(${x}px,${y}px,0) scale(${scale})`\n      },\n      60: {\n        transform: `translate3d(0, 0, 0) scale(1.1)`\n      },\n      100: {\n        transform: `translate3d(0, 0, 0) scale(1)`\n      }\n    };\n    animations.registerAnimation({\n      name: \"move\",\n      animation,\n      presets: {\n        duration: 400,\n        easing: \"linear\"\n      }\n    });\n    animations.runAnimation(cdWrapperRef.current, \"move\");\n  };\n\n  const afterEnter = () => {\n    const cdWrapperDom = cdWrapperRef.current;\n    animations.unregisterAnimation(\"move\");\n    cdWrapperDom.style.animation = \"\";\n  };\n\n  const leave = () => {\n    if (!cdWrapperRef.current) return;\n    const cdWrapperDom = cdWrapperRef.current;\n    cdWrapperDom.style.transition = \"all 0.4s\";\n\n    const {\n      x,\n      y,\n      scale\n    } = _getPosAndScale();\n\n    cdWrapperDom.style[transform] = `translate3d(${x}px, ${y}px, 0) scale(${scale})`;\n  };\n\n  const afterLeave = () => {\n    if (!cdWrapperRef.current) return;\n    const cdWrapperDom = cdWrapperRef.current;\n    cdWrapperDom.style.transition = \"\";\n    cdWrapperDom.style[transform] = \"\";\n    normalPlayerRef.current.style.display = \"none\";\n    setCurrentState(\"\");\n  };\n\n  const toggleCurrentState = () => {\n    let nextState = \"\";\n\n    if (currentState !== \"lyric\") {\n      nextState = \"lyric\";\n    } else {\n      nextState = \"\";\n    }\n\n    setCurrentState(nextState);\n  };\n\n  const clickPlayingCB = useCallback(e => {\n    clickPlaying(e, !playing);\n  }, [clickPlaying, playing]);\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    classNames: \"normal\",\n    in: full,\n    timeout: 400,\n    mountOnEnter: true,\n    onEnter: enter,\n    onEntered: afterEnter,\n    onExit: leave,\n    onExited: afterLeave,\n    children: /*#__PURE__*/_jsxDEV(NormalPlayerContainer, {\n      ref: normalPlayerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.al.picUrl + \"?param=300x300\",\n          width: \"100%\",\n          height: \"100%\",\n          alt: \"\\u6B4C\\u66F2\\u56FE\\u7247\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background layer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Top, {\n        className: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"back\",\n          onClick: () => toggleFullScreenDispatch(false),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"iconfont icon-back\",\n            children: \"\\uE662\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"subtitle\",\n            children: getName(song.ar)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Middle, {\n        ref: cdWrapperRef,\n        onClick: toggleCurrentState,\n        children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n          timeout: 400,\n          classNames: \"fade\",\n          in: currentState !== \"lyric\",\n          children: /*#__PURE__*/_jsxDEV(CDWrapper, {\n            style: {\n              visibility: currentState !== \"lyric\" ? \"visible\" : \"hidden\"\n            },\n            playing: playing,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `needle ${playing ? '' : 'pause'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cd\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: `image play ${playing ? '' : 'pause'}`,\n                src: song.al.picUrl + \"?param=400x400\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"playing_lyric\",\n              children: currentPlayingLyric\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n          timeout: 400,\n          classNames: \"fade\",\n          in: currentState === \"lyric\",\n          children: /*#__PURE__*/_jsxDEV(LyricContainer, {\n            children: /*#__PURE__*/_jsxDEV(Scroll, {\n              ref: lyricScrollRef,\n              children: /*#__PURE__*/_jsxDEV(LyricWrapper, {\n                style: {\n                  visibility: currentState === \"lyric\" ? \"visible\" : \"hidden\"\n                },\n                className: \"lyric_wrapper\",\n                children: currentLyric ? currentLyric.lines.map((item, index) => {\n                  lyricLineRefs.current[index] = /*#__PURE__*/React.createRef();\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: `text ${currentLineNum === index ? \"current\" : \"\"}`,\n                    ref: lyricLineRefs.current[index],\n                    children: item.txt\n                  }, item + index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 25\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text pure\",\n                  children: \"\\u7EAF\\u97F3\\u4E50\\uFF0C\\u8BF7\\u6B23\\u8D4F\\u3002\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bottom, {\n        className: \"bottom\",\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u500D\\u901F\\u542C\\u6B4C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), list.map(item => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              className: `${speed === item.key ? 'selected' : ''}`,\n              onClick: () => clickSpeed(item.key),\n              children: item.name\n            }, item.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time time-l\",\n            children: formatPlayTime(currentTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n              percent: percent,\n              percentChange: onProgressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time time-r\",\n            children: formatPlayTime(duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Operators, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-left\",\n            onClick: changeMode,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              dangerouslySetInnerHTML: {\n                __html: getPlayMode()\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-left\",\n            onClick: handlePrev,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              children: \"\\uE6E1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-center\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              onClick: clickPlayingCB,\n              dangerouslySetInnerHTML: {\n                __html: playing ? \"&#xe723;\" : \"&#xe731;\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-right\",\n            onClick: handleNext,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              children: \"\\uE718\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-right\",\n            onClick: () => togglePlayListDispatch(true),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              children: \"\\uE640\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NormalPlayer, \"/ViLAfHDJFkoBqcJXTP87SHUJ0k=\");\n\n_c = NormalPlayer;\nexport default _c2 = /*#__PURE__*/React.memo(NormalPlayer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NormalPlayer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Player/normal-player/index.js"],"names":["React","useState","useRef","useEffect","useCallback","CSSTransition","animations","ProgressBar","Scroll","playMode","list","prefixStyle","formatPlayTime","getName","NormalPlayerContainer","Top","Middle","Bottom","ProgressWrapper","Operators","CDWrapper","LyricContainer","LyricWrapper","List","ListItem","NormalPlayer","props","full","song","mode","playing","percent","currentTime","duration","currentLineNum","currentPlayingLyric","currentLyric","speed","changeMode","handlePrev","handleNext","onProgressChange","clickPlaying","toggleFullScreenDispatch","togglePlayListDispatch","clickSpeed","transform","normalPlayerRef","lyricScrollRef","lyricLineRefs","cdWrapperRef","currentState","setCurrentState","current","bScroll","getBScroll","lineEl","scrollToElement","scrollTo","getPlayMode","content","sequence","loop","_getPosAndScale","targetWidth","paddingLeft","paddingBottom","paddingTop","width","window","innerWidth","scale","x","y","innerHeight","enter","style","display","animation","registerAnimation","name","presets","easing","runAnimation","afterEnter","cdWrapperDom","unregisterAnimation","leave","transition","afterLeave","toggleCurrentState","nextState","clickPlayingCB","e","al","picUrl","ar","visibility","lines","map","item","index","createRef","txt","key","__html","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport animations from \"create-keyframe-animation\";\r\nimport ProgressBar from \"../../../baseUI/progress-bar/index\";\r\nimport Scroll from \"../../../baseUI/scroll/index\";\r\nimport { playMode, list } from \"../../../api/config\";\r\nimport { prefixStyle, formatPlayTime, getName } from \"../../../api/utils\";\r\nimport {\r\n  NormalPlayerContainer,\r\n  Top,\r\n  Middle,\r\n  Bottom,\r\n  ProgressWrapper,\r\n  Operators,\r\n  CDWrapper,\r\n  LyricContainer,\r\n  LyricWrapper,\r\n  List,\r\n  ListItem\r\n} from \"./style\";\r\n\r\nfunction NormalPlayer(props) {\r\n  const {\r\n    full,\r\n    song,\r\n    mode,\r\n    playing,\r\n    percent,\r\n    currentTime,\r\n    duration,\r\n    currentLineNum,\r\n    currentPlayingLyric,\r\n    currentLyric,\r\n    speed\r\n  } = props;\r\n  const {\r\n    changeMode,\r\n    handlePrev,\r\n    handleNext,\r\n    onProgressChange,\r\n    clickPlaying,\r\n    toggleFullScreenDispatch,\r\n    togglePlayListDispatch,\r\n    clickSpeed\r\n  } = props;\r\n  //处理transform的浏览器兼容问题\r\n  const transform = prefixStyle(\"transform\");\r\n\r\n  const normalPlayerRef = useRef();\r\n  const lyricScrollRef = useRef();\r\n\r\n  const lyricLineRefs = useRef([]);\r\n  const cdWrapperRef = useRef();\r\n  const [currentState, setCurrentState] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (!lyricScrollRef.current) return;\r\n    let bScroll = lyricScrollRef.current.getBScroll();\r\n    if (currentLineNum > 5) {\r\n      let lineEl = lyricLineRefs.current[currentLineNum - 5].current;\r\n      bScroll.scrollToElement(lineEl, 1000);\r\n    } else {\r\n      bScroll.scrollTo(0, 0, 1000);\r\n    }\r\n  }, [currentLineNum]);\r\n\r\n  const getPlayMode = () => {\r\n    let content;\r\n    if (mode === playMode.sequence) {\r\n      content = \"&#xe625;\";\r\n    } else if (mode === playMode.loop) {\r\n      content = \"&#xe653;\";\r\n    } else {\r\n      content = \"&#xe61b;\";\r\n    }\r\n    return content;\r\n  };\r\n\r\n  const _getPosAndScale = () => {\r\n    const targetWidth = 40;\r\n    const paddingLeft = 40;\r\n    const paddingBottom = 30;\r\n    const paddingTop = 80;\r\n    const width = window.innerWidth * 0.8;\r\n    const scale = targetWidth / width;\r\n    // 两个圆心的横坐标距离和纵坐标距离\r\n    const x = -(window.innerWidth / 2 - paddingLeft);\r\n    const y = window.innerHeight - paddingTop - width / 2 - paddingBottom;\r\n    return {\r\n      x,\r\n      y,\r\n      scale\r\n    };\r\n  };\r\n\r\n  const enter = () => {\r\n    normalPlayerRef.current.style.display = \"block\";\r\n    const { x, y, scale } = _getPosAndScale();\r\n    let animation = {\r\n      0: {\r\n        transform: `translate3d(${x}px,${y}px,0) scale(${scale})`\r\n      },\r\n      60: {\r\n        transform: `translate3d(0, 0, 0) scale(1.1)`\r\n      },\r\n      100: {\r\n        transform: `translate3d(0, 0, 0) scale(1)`\r\n      }\r\n    };\r\n    animations.registerAnimation({\r\n      name: \"move\",\r\n      animation,\r\n      presets: {\r\n        duration: 400,\r\n        easing: \"linear\"\r\n      }\r\n    });\r\n    animations.runAnimation(cdWrapperRef.current, \"move\");\r\n  };\r\n\r\n  const afterEnter = () => {\r\n    const cdWrapperDom = cdWrapperRef.current;\r\n    animations.unregisterAnimation(\"move\");\r\n    cdWrapperDom.style.animation = \"\";\r\n  };\r\n\r\n  const leave = () => {\r\n    if (!cdWrapperRef.current) return;\r\n    const cdWrapperDom = cdWrapperRef.current;\r\n    cdWrapperDom.style.transition = \"all 0.4s\";\r\n    const { x, y, scale } = _getPosAndScale();\r\n    cdWrapperDom.style[transform] = `translate3d(${x}px, ${y}px, 0) scale(${scale})`;\r\n  };\r\n\r\n  const afterLeave = () => {\r\n    if (!cdWrapperRef.current) return;\r\n    const cdWrapperDom = cdWrapperRef.current;\r\n    cdWrapperDom.style.transition = \"\";\r\n    cdWrapperDom.style[transform] = \"\";\r\n    normalPlayerRef.current.style.display = \"none\";\r\n    setCurrentState(\"\");\r\n  };\r\n\r\n  const toggleCurrentState = () => {\r\n    let nextState = \"\";\r\n    if (currentState !== \"lyric\") {\r\n      nextState = \"lyric\";\r\n    } else {\r\n      nextState = \"\";\r\n    }\r\n    setCurrentState(nextState);\r\n  };\r\n\r\n  const clickPlayingCB = useCallback((e) => {\r\n    clickPlaying(e, !playing);\r\n  }, [clickPlaying, playing]);\r\n\r\n  return (\r\n    <CSSTransition\r\n      classNames=\"normal\"\r\n      in={full}\r\n      timeout={400}\r\n      mountOnEnter\r\n      onEnter={enter}\r\n      onEntered={afterEnter}\r\n      onExit={leave}\r\n      onExited={afterLeave}\r\n    >\r\n      <NormalPlayerContainer ref={normalPlayerRef}>\r\n        <div className=\"background\">\r\n          <img\r\n            src={song.al.picUrl + \"?param=300x300\"}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            alt=\"歌曲图片\"\r\n          />\r\n        </div>\r\n        <div className=\"background layer\"></div>\r\n        <Top className=\"top\">\r\n          <div className=\"back\" onClick={() => toggleFullScreenDispatch(false)}>\r\n            <i className=\"iconfont icon-back\">&#xe662;</i>\r\n          </div>\r\n          <div className=\"text\">\r\n            <h1 className=\"title\">{song.name}</h1>\r\n            <h1 className=\"subtitle\">{getName(song.ar)}</h1>\r\n          </div>\r\n        </Top>\r\n        <Middle ref={cdWrapperRef} onClick={toggleCurrentState}>\r\n          <CSSTransition\r\n            timeout={400}\r\n            classNames=\"fade\"\r\n            in={currentState !== \"lyric\"}\r\n          >\r\n            <CDWrapper\r\n              style={{\r\n                visibility:\r\n                  currentState !== \"lyric\" ? \"visible\" : \"hidden\"\r\n              }}\r\n              playing={playing}\r\n            >\r\n              <div className={`needle ${playing? '' : 'pause'}`}></div>\r\n              <div className=\"cd\">\r\n                <img\r\n                  className={`image play ${playing? '' : 'pause'}`}\r\n                  src={song.al.picUrl + \"?param=400x400\"}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              {/* <CD playing={playing} image={song.al.picUrl + \"?param=300x300\"}></CD> */}\r\n              <p className=\"playing_lyric\">{currentPlayingLyric}</p>\r\n            </CDWrapper>\r\n          </CSSTransition>\r\n          <CSSTransition\r\n            timeout={400}\r\n            classNames=\"fade\"\r\n            in={currentState === \"lyric\"}\r\n          >\r\n            <LyricContainer>\r\n              <Scroll ref={lyricScrollRef}>\r\n                <LyricWrapper\r\n                  style={{\r\n                    visibility:\r\n                      currentState === \"lyric\" ? \"visible\" : \"hidden\"\r\n                  }}\r\n                  className=\"lyric_wrapper\"\r\n                >\r\n                  {\r\n                    currentLyric\r\n                      ? currentLyric.lines.map((item, index) => {\r\n                      lyricLineRefs.current[index] = React.createRef();\r\n                      return (\r\n                        <p\r\n                          className={`text ${\r\n                            currentLineNum === index ? \"current\" : \"\"\r\n                          }`}\r\n                          key={item + index}\r\n                          ref={lyricLineRefs.current[index]}\r\n                        >\r\n                          {item.txt}\r\n                        </p>\r\n                      );\r\n                    })\r\n                  : <p className=\"text pure\">纯音乐，请欣赏。</p>}\r\n                </LyricWrapper>\r\n              </Scroll>\r\n            </LyricContainer>\r\n          </CSSTransition>\r\n        </Middle>\r\n        <Bottom className=\"bottom\">\r\n          <List>\r\n            <span>倍速听歌</span>\r\n            {\r\n              list.map((item) => {\r\n                return (\r\n                  <ListItem \r\n                    key={item.key}\r\n                    className={`${speed === item.key ? 'selected': ''}`} \r\n                    onClick={() => clickSpeed(item.key)}>\r\n                      {item.name}\r\n                  </ListItem>\r\n                )\r\n              })\r\n            }\r\n          </List>\r\n          <ProgressWrapper>\r\n            <span className=\"time time-l\">{formatPlayTime(currentTime)}</span>\r\n            <div className=\"progress-bar-wrapper\">\r\n              <ProgressBar\r\n                percent={percent}\r\n                percentChange={onProgressChange}\r\n              ></ProgressBar>\r\n            </div>\r\n            <div className=\"time time-r\">{formatPlayTime(duration)}</div>\r\n          </ProgressWrapper>\r\n          <Operators>\r\n            <div className=\"icon i-left\" onClick={changeMode}>\r\n              <i\r\n                className=\"iconfont\"\r\n                dangerouslySetInnerHTML={{ __html: getPlayMode() }}\r\n              ></i>\r\n            </div>\r\n            <div className=\"icon i-left\" onClick={handlePrev}>\r\n              <i className=\"iconfont\">&#xe6e1;</i>\r\n            </div>\r\n            <div className=\"icon i-center\">\r\n              <i\r\n                className=\"iconfont\"\r\n                onClick={clickPlayingCB}\r\n                dangerouslySetInnerHTML={{\r\n                  __html: playing ? \"&#xe723;\" : \"&#xe731;\"\r\n                }}\r\n              ></i>\r\n            </div>\r\n            <div className=\"icon i-right\" onClick={handleNext}>\r\n              <i className=\"iconfont\">&#xe718;</i>\r\n            </div>\r\n            <div\r\n              className=\"icon i-right\"\r\n              onClick={() => togglePlayListDispatch(true)}\r\n            >\r\n              <i className=\"iconfont\">&#xe640;</i>\r\n            </div>\r\n          </Operators>\r\n        </Bottom>\r\n      </NormalPlayerContainer>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default React.memo(NormalPlayer);\r\n"]},"metadata":{},"sourceType":"module"}