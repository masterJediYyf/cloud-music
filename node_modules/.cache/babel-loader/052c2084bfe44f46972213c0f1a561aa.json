{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Singer\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { CSSTransition } from 'react-transition-group';\nimport { Container, ImgWrapper, CollectButton, BgLayer, SongListWrapper } from './style';\nimport Header from \"../../baseUI/header\";\nimport Scroll from '../../baseUI/scroll';\nimport SongList from \"../SongList\";\nimport { HEADER_HEIGHT } from '../../api/config';\nimport { connect } from 'react-redux';\nimport { getSingerInfo, chanegeEnterLoading } from './store/actionCreator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst artist = {\n  picUrl: \"https://p2.music.126.net/W__FCWFiyq0JdPtuLJoZVQ==/109951163765026271.jpg\",\n  name: \"薛之谦\",\n  hotSongs: [{\n    name: \"我好像在哪见过你\",\n    ar: [{\n      name: \"薛之谦\"\n    }],\n    al: {\n      name: \"薛之谦专辑\"\n    }\n  }, {\n    name: \"我好像在哪见过你\",\n    ar: [{\n      name: \"薛之谦\"\n    }],\n    al: {\n      name: \"薛之谦专辑\"\n    }\n  }, {\n    name: \"我好像在哪见过你\",\n    ar: [{\n      name: \"薛之谦\"\n    }],\n    al: {\n      name: \"薛之谦专辑\"\n    }\n  }, {\n    name: \"我好像在哪见过你\",\n    ar: [{\n      name: \"薛之谦\"\n    }],\n    al: {\n      name: \"薛之谦专辑\"\n    }\n  }, {\n    name: \"我好像在哪见过你\",\n    ar: [{\n      name: \"薛之谦\"\n    }],\n    al: {\n      name: \"薛之谦专辑\"\n    }\n  }, {\n    name: \"我好像在哪见过你\",\n    ar: [{\n      name: \"薛之谦\"\n    }],\n    al: {\n      name: \"薛之谦专辑\"\n    }\n  }, {\n    name: \"我好像在哪见过你\",\n    ar: [{\n      name: \"薛之谦\"\n    }],\n    al: {\n      name: \"薛之谦专辑\"\n    }\n  }, {\n    name: \"我好像在哪见过你\",\n    ar: [{\n      name: \"薛之谦\"\n    }],\n    al: {\n      name: \"薛之谦专辑\"\n    }\n  }, {\n    name: \"我好像在哪见过你\",\n    ar: [{\n      name: \"薛之谦\"\n    }],\n    al: {\n      name: \"薛之谦专辑\"\n    }\n  }, {\n    name: \"我好像在哪见过你\",\n    ar: [{\n      name: \"薛之谦\"\n    }],\n    al: {\n      name: \"薛之谦专辑\"\n    }\n  }, {\n    name: \"我好像在哪见过你\",\n    ar: [{\n      name: \"薛之谦\"\n    }],\n    al: {\n      name: \"薛之谦专辑\"\n    }\n  }, {\n    name: \"我好像在哪见过你\",\n    ar: [{\n      name: \"薛之谦\"\n    }],\n    al: {\n      name: \"薛之谦专辑\"\n    }\n  } // 省略 20 条\n  ]\n};\n\nfunction Singer(props) {\n  _s();\n\n  const [showStatus, setShowStatus] = useState(true);\n  const collectButton = useRef();\n  const imageWrapper = useRef();\n  const songScrollWrapper = useRef();\n  const songScroll = useRef();\n  const header = useRef();\n  const layer = useRef(); // 图片初始高度\n\n  const initialHeight = useRef(0); // 往上偏移的尺寸，露出圆角\n\n  const OFFSET = 5;\n  useEffect(() => {\n    let h = imageWrapper.current.offsetHeight;\n    songScrollWrapper.current.style.top = `${h - OFFSET}px`;\n    initialHeight.current = h; // 把遮罩先放在下面，以裹住歌曲列表\n\n    layer.current.style.top = `${h - OFFSET}px`;\n    songScroll.current.refresh(); //eslint-disable-next-line\n  }, []);\n  const setShowStatusFalse = useCallback(() => {\n    setShowStatus(false);\n  }, []);\n  const handleScroll = useCallback(pos => {\n    let height = initialHeight.current;\n    const newY = pos.y;\n    const imageDOM = imageWrapper.current;\n    const buttonDOM = collectButton.current;\n    const headerDOM = header.current;\n    const layerDOM = layer.current;\n    const minScrollY = -(height - OFFSET) + HEADER_HEIGHT; //指的是滑动距离占图片高度的百分比\n\n    const percent = Math.abs(newY / height);\n\n    if (newY > 0) {\n      imageDOM.style[\"transform\"] = `scale(${1 + percent})`;\n      buttonDOM.style[\"transform\"] = `translated(0,${newY}px,0)`;\n      layerDOM.style.top = `${height - OFFSET + newY}px`;\n    } else if (newY >= minScrollY) {\n      layerDOM.style.top = `${height - OFFSET - Math.abs(newY)}px`; // 这时候保证遮罩的层叠优先级比图片高，不至于被图片挡住\n\n      layerDOM.style.zIndex = 1;\n      imageDOM.style.paddingTop = \"75%\";\n      imageDOM.style.height = 0;\n      imageDOM.style.zIndex = -1; // 按钮跟着移动且渐渐变透明\n\n      buttonDOM.style[\"transform\"] = `translate3d (0, ${newY}px, 0)`;\n      buttonDOM.style[\"opacity\"] = `${1 - percent * 2}`;\n    } else if (newY < minScrollY) {\n      // 往上滑动，但是超过 Header 部分\n      layerDOM.style.top = `${HEADER_HEIGHT - OFFSET}px`;\n      layerDOM.style.zIndex = 1; // 防止溢出的歌单内容遮住 Header\n\n      headerDOM.style.zIndex = 100; // 此时图片高度与 Header 一致\n\n      imageDOM.style.height = `${HEADER_HEIGHT}px`;\n      imageDOM.style.paddingTop = 0;\n      imageDOM.style.zIndex = 99;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: showStatus,\n    timeout: 300,\n    classNames: \"fly\",\n    appear: true,\n    unmountOnExit: true,\n    onExited: () => props.history.goBack(),\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleClick: setShowStatusFalse,\n        title: artist.name,\n        ref: header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImgWrapper, {\n        ref: imageWrapper,\n        bgUrl: artist.picUrl,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CollectButton, {\n        ref: collectButton,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"iconfont\",\n          children: \"\\uE62D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text\",\n          children: \" \\u6536\\u85CF \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BgLayer, {\n        ref: layer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SongListWrapper, {\n        ref: songScrollWrapper,\n        children: /*#__PURE__*/_jsxDEV(Scroll, {\n          ref: songScroll,\n          onScroll: handleScroll,\n          children: /*#__PURE__*/_jsxDEV(SongList, {\n            songs: artist.hotSongs,\n            showCollect: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 7\n  }, this);\n} //映射 Redux 全局的 state 到组件的 props 上\n\n\n_s(Singer, \"wzZXg0EU4CyqhJgHP2jdznGeSeU=\");\n\n_c = Singer;\n\nconst mapStateToProps = state => ({\n  artist: state.getIn([\"singerInfo\", \"artist\"]),\n  songs: state.getIn([\"singerInfo\", \"songsOfArtist\"]),\n  loading: state.getIn([\"singerInfo\", \"loading\"])\n}); // 将 ui 组件包装成容器组件\n\n\nexport default connect(mapStateToProps)( /*#__PURE__*/React.memo(Singer));\n\nvar _c;\n\n$RefreshReg$(_c, \"Singer\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Singer/index.js"],"names":["React","useState","useRef","useEffect","useCallback","CSSTransition","Container","ImgWrapper","CollectButton","BgLayer","SongListWrapper","Header","Scroll","SongList","HEADER_HEIGHT","connect","getSingerInfo","chanegeEnterLoading","artist","picUrl","name","hotSongs","ar","al","Singer","props","showStatus","setShowStatus","collectButton","imageWrapper","songScrollWrapper","songScroll","header","layer","initialHeight","OFFSET","h","current","offsetHeight","style","top","refresh","setShowStatusFalse","handleScroll","pos","height","newY","y","imageDOM","buttonDOM","headerDOM","layerDOM","minScrollY","percent","Math","abs","zIndex","paddingTop","history","goBack","mapStateToProps","state","getIn","songs","loading","memo"],"mappings":"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","sourcesContent":["import React ,{useState,useRef,useEffect,useCallback}from \"react\";\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport {Container,ImgWrapper,CollectButton,BgLayer,SongListWrapper} from './style';\r\nimport Header from \"../../baseUI/header\";\r\nimport Scroll from '../../baseUI/scroll';\r\nimport SongList from \"../SongList\";\r\nimport {HEADER_HEIGHT} from '../../api/config';\r\nimport { connect } from 'react-redux';\r\nimport { getSingerInfo, chanegeEnterLoading } from './store/actionCreator';\r\n\r\nconst artist = {\r\n    picUrl: \"https://p2.music.126.net/W__FCWFiyq0JdPtuLJoZVQ==/109951163765026271.jpg\",\r\n    name: \"薛之谦\",\r\n    hotSongs: [\r\n      {\r\n        name: \"我好像在哪见过你\",\r\n        ar: [{name: \"薛之谦\"}],\r\n        al: {\r\n          name: \"薛之谦专辑\"\r\n        }\r\n      },\r\n      {\r\n        name: \"我好像在哪见过你\",\r\n        ar: [{name: \"薛之谦\"}],\r\n        al: {\r\n          name: \"薛之谦专辑\"\r\n        }\r\n      },\r\n      {\r\n        name: \"我好像在哪见过你\",\r\n        ar: [{name: \"薛之谦\"}],\r\n        al: {\r\n          name: \"薛之谦专辑\"\r\n        }\r\n      },\r\n      {\r\n        name: \"我好像在哪见过你\",\r\n        ar: [{name: \"薛之谦\"}],\r\n        al: {\r\n          name: \"薛之谦专辑\"\r\n        }\r\n      },\r\n      {\r\n        name: \"我好像在哪见过你\",\r\n        ar: [{name: \"薛之谦\"}],\r\n        al: {\r\n          name: \"薛之谦专辑\"\r\n        }\r\n      },\r\n      {\r\n        name: \"我好像在哪见过你\",\r\n        ar: [{name: \"薛之谦\"}],\r\n        al: {\r\n          name: \"薛之谦专辑\"\r\n        }\r\n      },\r\n      {\r\n        name: \"我好像在哪见过你\",\r\n        ar: [{name: \"薛之谦\"}],\r\n        al: {\r\n          name: \"薛之谦专辑\"\r\n        }\r\n      },\r\n      {\r\n        name: \"我好像在哪见过你\",\r\n        ar: [{name: \"薛之谦\"}],\r\n        al: {\r\n          name: \"薛之谦专辑\"\r\n        }\r\n      },\r\n      {\r\n        name: \"我好像在哪见过你\",\r\n        ar: [{name: \"薛之谦\"}],\r\n        al: {\r\n          name: \"薛之谦专辑\"\r\n        }\r\n      },\r\n      {\r\n        name: \"我好像在哪见过你\",\r\n        ar: [{name: \"薛之谦\"}],\r\n        al: {\r\n          name: \"薛之谦专辑\"\r\n        }\r\n      },\r\n      {\r\n        name: \"我好像在哪见过你\",\r\n        ar: [{name: \"薛之谦\"}],\r\n        al: {\r\n          name: \"薛之谦专辑\"\r\n        }\r\n      },\r\n      {\r\n        name: \"我好像在哪见过你\",\r\n        ar: [{name: \"薛之谦\"}],\r\n        al: {\r\n          name: \"薛之谦专辑\"\r\n        }\r\n      }\r\n      // 省略 20 条\r\n    ]\r\n  }\r\n\r\nfunction Singer(props){\r\n    const [showStatus,setShowStatus] = useState(true);\r\n\r\n    const collectButton = useRef ();\r\n    const imageWrapper = useRef ();\r\n    const songScrollWrapper = useRef ();\r\n    const songScroll = useRef ();\r\n    const header = useRef ();\r\n    const layer = useRef ();\r\n    // 图片初始高度\r\n    const initialHeight = useRef (0);\r\n\r\n    // 往上偏移的尺寸，露出圆角\r\n    const OFFSET = 5;\r\n\r\n    useEffect (() => {\r\n      let h = imageWrapper.current.offsetHeight;\r\n      songScrollWrapper.current.style.top = `${h - OFFSET}px`;\r\n      initialHeight.current = h;\r\n      // 把遮罩先放在下面，以裹住歌曲列表\r\n      layer.current.style.top = `${h - OFFSET}px`;\r\n      songScroll.current.refresh ();\r\n      //eslint-disable-next-line\r\n    }, []);\r\n\r\n    const setShowStatusFalse = useCallback (() => {\r\n      setShowStatus (false);\r\n    }, []);\r\n\r\n    const handleScroll = useCallback(pos =>{\r\n      let height = initialHeight.current;\r\n      const newY = pos.y;\r\n      const imageDOM = imageWrapper.current;\r\n      const buttonDOM = collectButton.current;\r\n      const headerDOM = header.current;\r\n      const layerDOM = layer.current;\r\n      const minScrollY = -(height - OFFSET) + HEADER_HEIGHT;\r\n\r\n      //指的是滑动距离占图片高度的百分比\r\n      const percent = Math.abs(newY/height);\r\n      if(newY > 0){\r\n        imageDOM.style[\"transform\"] = `scale(${1 + percent})`;\r\n        buttonDOM.style[\"transform\"] = `translated(0,${newY}px,0)`;\r\n        layerDOM.style.top = `${height - OFFSET + newY}px`;\r\n      }else if (newY >= minScrollY) {\r\n        layerDOM.style.top = `${height - OFFSET - Math.abs (newY)}px`;\r\n        // 这时候保证遮罩的层叠优先级比图片高，不至于被图片挡住\r\n        layerDOM.style.zIndex = 1;\r\n        imageDOM.style.paddingTop = \"75%\";\r\n        imageDOM.style.height = 0;\r\n        imageDOM.style.zIndex = -1;\r\n        // 按钮跟着移动且渐渐变透明\r\n        buttonDOM.style [\"transform\"] = `translate3d (0, ${newY}px, 0)`;\r\n        buttonDOM.style [\"opacity\"] = `${1 - percent * 2}`;\r\n      }else if (newY < minScrollY) {\r\n        // 往上滑动，但是超过 Header 部分\r\n        layerDOM.style.top = `${HEADER_HEIGHT - OFFSET}px`;\r\n        layerDOM.style.zIndex = 1;\r\n        // 防止溢出的歌单内容遮住 Header\r\n        headerDOM.style.zIndex = 100;\r\n        // 此时图片高度与 Header 一致\r\n        imageDOM.style.height = `${HEADER_HEIGHT}px`;\r\n        imageDOM.style.paddingTop = 0;\r\n        imageDOM.style.zIndex = 99;\r\n      }\r\n\r\n    },[]); \r\n\r\n    return (\r\n      <CSSTransition\r\n        in={showStatus}\r\n        timeout={300}\r\n        classNames=\"fly\"\r\n        appear={true}\r\n        unmountOnExit\r\n        onExited={() => props.history.goBack ()}\r\n      >\r\n        <Container>\r\n          <Header\r\n            handleClick={setShowStatusFalse}\r\n            title={artist.name}\r\n            ref={header}\r\n          ></Header>\r\n          <ImgWrapper ref={imageWrapper} bgUrl={artist.picUrl}>\r\n            <div className=\"filter\"></div>\r\n          </ImgWrapper>\r\n          <CollectButton ref={collectButton}>\r\n            <i className=\"iconfont\">&#xe62d;</i>\r\n            <span className=\"text\"> 收藏 </span>\r\n          </CollectButton>\r\n          <BgLayer ref={layer}></BgLayer>\r\n          <SongListWrapper ref={songScrollWrapper}>\r\n            <Scroll ref={songScroll} onScroll={handleScroll}>\r\n              <SongList\r\n                songs={artist.hotSongs}\r\n                showCollect={false}\r\n              ></SongList>\r\n            </Scroll>\r\n          </SongListWrapper>\r\n        </Container>\r\n      </CSSTransition>\r\n    )\r\n}\r\n\r\n//映射 Redux 全局的 state 到组件的 props 上\r\nconst mapStateToProps = state => ({\r\n  artist: state.getIn([\"singerInfo\",\"artist\"]),\r\n  songs: state.getIn([\"singerInfo\",\"songsOfArtist\"]),\r\n  loading: state.getIn([\"singerInfo\",\"loading\"])\r\n});\r\n\r\n// 将 ui 组件包装成容器组件\r\nexport default connect(mapStateToProps)(React.memo(Singer));"]},"metadata":{},"sourceType":"module"}