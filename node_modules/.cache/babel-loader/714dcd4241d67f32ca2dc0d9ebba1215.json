{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\baseUI\\\\music-note\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useImperativeHandle, useRef, forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { prefixStyle } from '../../api/utils';\nimport style from '../../assets/global-style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  .icon_wrapper{\n    position: fixed;\n    z-index: 1000;\n    margin-top: -10px;\n    margin-left: -10px;\n    color: ${style[\"theme-color\"]};\n    font-size: 14px;\n    display: none;\n    transition: transform 1s cubic-bezier(.62,-0.1,.86,.57);\n    transform: translate3d(0, 0, 0);\n    >div{\n      transition: transform 1s;\n    }\n  }\n`;\n_c = Container;\nconst MusicNote = /*#__PURE__*/forwardRef(_c2 = _s((props, ref) => {\n  _s();\n\n  const iconsRef = useRef();\n  const ICON_NUMBER = 10;\n  const transform = prefixStyle(\"transform\");\n\n  const createNode = txt => {\n    const template = `<div class='icon_wrapper'>${txt}</div>`;\n    let tempNode = document.createElement('div');\n    tempNode.innerHTML = template;\n    return tempNode.firstChild;\n  };\n\n  useEffect(() => {\n    for (let i = 0; i < ICON_NUMBER; i++) {\n      let node = createNode(`<div class=\"iconfont\">&#xe642;</div>`);\n      iconsRef.current.appendChild(node);\n    }\n\n    let domArray = [].slice.call(iconsRef.current.children);\n    domArray.forEach(item => {\n      item.running = false;\n      item.addEventListener('transitionend', function () {\n        this.style['display'] = 'none';\n        this.style[transform] = `translate3d(0, 0, 0)`;\n        this.running = false;\n        let icon = this.querySelector('div');\n        icon.style[transform] = `translate3d(0, 0, 0)`;\n      }, false);\n    }); // eslint-disable-next-line\n  }, []);\n\n  const startAnimation = ({\n    x,\n    y\n  }) => {\n    for (let i = 0; i < ICON_NUMBER; i++) {\n      let domArray = [].slice.call(iconsRef.current.children);\n      let item = domArray[i]; // 选择一个空闲的元素来开始动画\n\n      if (item.running === false) {\n        item.style.left = x + \"px\";\n        item.style.top = y + \"px\";\n        item.style.display = \"inline-block\";\n        setTimeout(() => {\n          item.running = true;\n          item.style[transform] = `translate3d(0, 750px, 0)`;\n          let icon = item.querySelector(\"div\");\n          icon.style[transform] = `translate3d(-40px, 0, 0)`;\n        }, 20);\n        break;\n      }\n    }\n  }; //外界调用的ref方法\n\n\n  useImperativeHandle(ref, () => ({\n    startAnimation\n  }));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ref: iconsRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}, \"xNbzw7JhgipjZd9yY/zp6+B9wRM=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c3 = MusicNote;\nexport default _c4 = /*#__PURE__*/React.memo(MusicNote);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"MusicNote$forwardRef\");\n$RefreshReg$(_c3, \"MusicNote\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/baseUI/music-note/index.js"],"names":["React","useEffect","useImperativeHandle","useRef","forwardRef","styled","prefixStyle","style","Container","div","MusicNote","props","ref","iconsRef","ICON_NUMBER","transform","createNode","txt","template","tempNode","document","createElement","innerHTML","firstChild","i","node","current","appendChild","domArray","slice","call","children","forEach","item","running","addEventListener","icon","querySelector","startAnimation","x","y","left","top","display","setTimeout","memo"],"mappings":"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","sourcesContent":["import React, {useEffect, useImperativeHandle, useRef, forwardRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport { prefixStyle } from '../../api/utils';\r\nimport style from '../../assets/global-style';\r\n\r\nconst Container = styled.div`\r\n  .icon_wrapper{\r\n    position: fixed;\r\n    z-index: 1000;\r\n    margin-top: -10px;\r\n    margin-left: -10px;\r\n    color: ${style[\"theme-color\"]};\r\n    font-size: 14px;\r\n    display: none;\r\n    transition: transform 1s cubic-bezier(.62,-0.1,.86,.57);\r\n    transform: translate3d(0, 0, 0);\r\n    >div{\r\n      transition: transform 1s;\r\n    }\r\n  }\r\n`\r\n\r\nconst MusicNote = forwardRef((props, ref) => {\r\n\r\n  const iconsRef = useRef();\r\n\r\n  const ICON_NUMBER = 10;\r\n\r\n  const transform = prefixStyle(\"transform\");\r\n\r\n  const createNode = (txt) => {\r\n    const template = `<div class='icon_wrapper'>${txt}</div>`;\r\n    let tempNode = document.createElement('div');\r\n    tempNode.innerHTML = template;\r\n    return tempNode.firstChild;\r\n  }\r\n\r\n  useEffect(() => {\r\n    for(let i = 0; i < ICON_NUMBER; i++){\r\n      let node = createNode(`<div class=\"iconfont\">&#xe642;</div>`);\r\n      iconsRef.current.appendChild(node);\r\n    }\r\n    let domArray = [].slice.call(iconsRef.current.children)\r\n    domArray.forEach(item => {\r\n      item.running = false;\r\n      item.addEventListener('transitionend', function() {\r\n        this.style['display'] = 'none';\r\n        this.style[transform] = `translate3d(0, 0, 0)`;\r\n        this.running = false;\r\n\r\n        let icon = this.querySelector('div');\r\n        icon.style[transform] = `translate3d(0, 0, 0)`;\r\n      }, false);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const startAnimation = ({x, y}) => {\r\n    for(let i = 0; i < ICON_NUMBER; i++) {\r\n      let domArray = [].slice.call(iconsRef.current.children)\r\n      let item = domArray[i]\r\n      // 选择一个空闲的元素来开始动画\r\n      if (item.running === false) {\r\n        item.style.left = x + \"px\";\r\n        item.style.top = y + \"px\";\r\n        item.style.display = \"inline-block\";\r\n        setTimeout(() => {\r\n          item.running = true;\r\n          item.style[transform] = `translate3d(0, 750px, 0)`;\r\n          let icon = item.querySelector(\"div\");\r\n          icon.style[transform] = `translate3d(-40px, 0, 0)`;\r\n        }, 20);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  \r\n  //外界调用的ref方法\r\n  useImperativeHandle(ref, () => ({\r\n    startAnimation\r\n  }));\r\n\r\n  return (\r\n    <Container ref={iconsRef}>\r\n    </Container>\r\n  )\r\n})\r\n\r\nexport default React.memo(MusicNote);\r\n"]},"metadata":{},"sourceType":"module"}