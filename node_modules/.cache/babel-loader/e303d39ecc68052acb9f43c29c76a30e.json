{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Album\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Container } from \"./style\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Scroll from '../../baseUI/scroll/index';\nimport style from \"../../assets/global-style\";\nimport { connect } from 'react-redux';\nimport { getAlbumList, changePullUpLoading, changeEnterLoading } from './store/actionCreators';\nimport { EnterLoading } from './../Singers/style';\nimport Loading from './../../baseUI/loading/index';\nimport Header from './../../baseUI/header/index';\nimport AlbumDetail from '../../components/album-detail/index';\nimport { HEADER_HEIGHT } from './../../api/config';\nimport MusicNote from '../../baseUI/music-note/index';\nimport { isEmptyObject } from '../../api/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Album(props) {\n  _s();\n\n  const [showStatus, setShowStatus] = useState(true);\n  const [title, setTitle] = useState(\"歌单\");\n  const [isMarquee, setIsMarquee] = useState(false);\n  const musicNoteRef = useRef();\n  const headerEl = useRef();\n  const id = props.match.params.id;\n  const {\n    currentAlbum,\n    enterLoading,\n    pullUpLoading,\n    songsCount\n  } = props;\n  const {\n    getAlbumDataDispatch,\n    changePullUpLoadingStateDispatch\n  } = props;\n  let currentAlbumJS = currentAlbum.toJS();\n  useEffect(() => {\n    getAlbumDataDispatch(id);\n  }, [getAlbumDataDispatch, id]);\n  const handleScroll = useCallback(pos => {\n    let minScrollY = -HEADER_HEIGHT;\n    let percent = Math.abs(pos.y / minScrollY);\n    let headerDom = headerEl.current;\n\n    if (pos.y < minScrollY) {\n      headerDom.style.backgroundColor = style[\"theme-color\"];\n      headerDom.style.opacity = Math.min(1, (percent - 1) / 2);\n      setTitle(currentAlbumJS && currentAlbumJS.name);\n      setIsMarquee(true);\n    } else {\n      headerDom.style.backgroundColor = \"\";\n      headerDom.style.opacity = 1;\n      setTitle(\"歌单\");\n      setIsMarquee(false);\n    }\n  }, [currentAlbumJS]);\n\n  const handlePullUp = () => {\n    changePullUpLoadingStateDispatch(true);\n    changePullUpLoadingStateDispatch(false);\n  };\n\n  const handleBack = useCallback(() => {\n    setShowStatus(false);\n  }, []);\n\n  const musicAnimation = (x, y) => {\n    musicNoteRef.current.startAnimation({\n      x,\n      y\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: showStatus,\n    timeout: 300,\n    classNames: \"fly\",\n    appear: true,\n    unmountOnExit: true,\n    onExited: props.history.goBack,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      play: songsCount,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        ref: headerEl,\n        title: title,\n        handleClick: handleBack,\n        isMarquee: isMarquee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), !isEmptyObject(currentAlbumJS) ? /*#__PURE__*/_jsxDEV(Scroll, {\n        onScroll: handleScroll,\n        pullUp: handlePullUp,\n        pullUpLoading: pullUpLoading,\n        bounceTop: false,\n        children: /*#__PURE__*/_jsxDEV(AlbumDetail, {\n          currentAlbum: currentAlbumJS,\n          pullUpLoading: pullUpLoading,\n          musicAnimation: musicAnimation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this) : null, enterLoading ? /*#__PURE__*/_jsxDEV(EnterLoading, {\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }, this) : null, /*#__PURE__*/_jsxDEV(MusicNote, {\n        ref: musicNoteRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n} // 映射Redux全局的state到组件的props上\n\n\n_s(Album, \"KH5o9seBy+WiXem8d7SQI8iA2cQ=\");\n\n_c = Album;\n\nconst mapStateToProps = state => ({\n  currentAlbum: state.getIn(['album', 'currentAlbum']),\n  pullUpLoading: state.getIn(['album', 'pullUpLoading']),\n  enterLoading: state.getIn(['album', 'enterLoading']),\n  startIndex: state.getIn(['album', 'startIndex']),\n  totalCount: state.getIn(['album', 'totalCount']),\n  songsCount: state.getIn(['player', 'playList']).size\n}); // 映射dispatch到props上\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAlbumDataDispatch(id) {\n      dispatch(changeEnterLoading(true));\n      dispatch(getAlbumList(id));\n    },\n\n    changePullUpLoadingStateDispatch(state) {\n      dispatch(changePullUpLoading(state));\n    }\n\n  };\n}; // 将ui组件包装成容器组件\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/React.memo(Album));\n\nvar _c;\n\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Album/index.js"],"names":["React","useState","useEffect","useRef","useCallback","Container","CSSTransition","Scroll","style","connect","getAlbumList","changePullUpLoading","changeEnterLoading","EnterLoading","Loading","Header","AlbumDetail","HEADER_HEIGHT","MusicNote","isEmptyObject","Album","props","showStatus","setShowStatus","title","setTitle","isMarquee","setIsMarquee","musicNoteRef","headerEl","id","match","params","currentAlbum","enterLoading","pullUpLoading","songsCount","getAlbumDataDispatch","changePullUpLoadingStateDispatch","currentAlbumJS","toJS","handleScroll","pos","minScrollY","percent","Math","abs","y","headerDom","current","backgroundColor","opacity","min","name","handlePullUp","handleBack","musicAnimation","x","startAnimation","history","goBack","mapStateToProps","state","getIn","startIndex","totalCount","size","mapDispatchToProps","dispatch","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Container } from \"./style\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Scroll from '../../baseUI/scroll/index';\r\nimport style from \"../../assets/global-style\";\r\nimport { connect } from 'react-redux';\r\nimport { getAlbumList, changePullUpLoading, changeEnterLoading } from './store/actionCreators';\r\nimport { EnterLoading } from './../Singers/style';\r\nimport Loading from './../../baseUI/loading/index';\r\nimport  Header  from './../../baseUI/header/index';\r\nimport AlbumDetail from '../../components/album-detail/index';\r\nimport { HEADER_HEIGHT } from './../../api/config';\r\nimport MusicNote from '../../baseUI/music-note/index';\r\nimport { isEmptyObject } from '../../api/utils';\r\n\r\nfunction Album(props) {\r\n\r\n  const [showStatus, setShowStatus] = useState(true);\r\n  const [title, setTitle] = useState(\"歌单\");\r\n  const [isMarquee, setIsMarquee] = useState(false);\r\n\r\n  const musicNoteRef = useRef();\r\n  const headerEl = useRef();\r\n\r\n  const id = props.match.params.id;\r\n\r\n  const { currentAlbum, enterLoading, pullUpLoading, songsCount } = props;\r\n  const { getAlbumDataDispatch, changePullUpLoadingStateDispatch } = props;\r\n  \r\n  let currentAlbumJS = currentAlbum.toJS();\r\n\r\n  useEffect(() => {\r\n    getAlbumDataDispatch(id);\r\n  }, [getAlbumDataDispatch, id]);\r\n\r\n\r\n  const handleScroll = useCallback((pos) => {\r\n    let minScrollY = -HEADER_HEIGHT;\r\n    let percent = Math.abs(pos.y/minScrollY);\r\n    let headerDom = headerEl.current;\r\n    if(pos.y < minScrollY) {\r\n      headerDom.style.backgroundColor = style[\"theme-color\"];\r\n      headerDom.style.opacity = Math.min(1, (percent-1)/2);\r\n      setTitle(currentAlbumJS&&currentAlbumJS.name);\r\n      setIsMarquee(true);\r\n    } else{\r\n      headerDom.style.backgroundColor = \"\";\r\n      headerDom.style.opacity = 1;\r\n      setTitle(\"歌单\");\r\n      setIsMarquee(false);\r\n    }\r\n  }, [currentAlbumJS]);\r\n\r\n  const handlePullUp = () => {\r\n    changePullUpLoadingStateDispatch(true);\r\n    changePullUpLoadingStateDispatch(false);\r\n  };\r\n  \r\n  const handleBack = useCallback(() => {\r\n    setShowStatus(false);\r\n  }, []);\r\n\r\n  const musicAnimation = (x , y) => {\r\n    musicNoteRef.current.startAnimation({x, y});\r\n  }\r\n\r\n  return (\r\n      <CSSTransition \r\n        in={showStatus}  \r\n        timeout={300} \r\n        classNames=\"fly\" \r\n        appear={true} \r\n        unmountOnExit\r\n        onExited={props.history.goBack}\r\n      >\r\n        <Container play={songsCount}>\r\n          <Header ref={headerEl} title={title} handleClick={handleBack} isMarquee={isMarquee}></Header>\r\n          {\r\n            !isEmptyObject(currentAlbumJS) ? (\r\n              <Scroll \r\n                onScroll={handleScroll} \r\n                pullUp={handlePullUp} \r\n                pullUpLoading={pullUpLoading}\r\n                bounceTop={false}\r\n              >\r\n                <AlbumDetail currentAlbum={currentAlbumJS} pullUpLoading={pullUpLoading} musicAnimation={musicAnimation}></AlbumDetail>\r\n              </Scroll>\r\n            ) : null\r\n          }\r\n          { enterLoading ?  <EnterLoading><Loading></Loading></EnterLoading> : null}\r\n          <MusicNote ref={musicNoteRef}></MusicNote>\r\n        </Container>\r\n      </CSSTransition>\r\n  );\r\n}\r\n// 映射Redux全局的state到组件的props上\r\nconst mapStateToProps = (state) => ({\r\n  currentAlbum: state.getIn(['album', 'currentAlbum']),\r\n  pullUpLoading: state.getIn(['album', 'pullUpLoading']),\r\n  enterLoading: state.getIn(['album', 'enterLoading']),\r\n  startIndex: state.getIn(['album', 'startIndex']),\r\n  totalCount: state.getIn(['album', 'totalCount']),\r\n  songsCount: state.getIn(['player', 'playList']).size\r\n});\r\n// 映射dispatch到props上\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAlbumDataDispatch(id) {\r\n      dispatch(changeEnterLoading(true));\r\n      dispatch(getAlbumList(id));\r\n    },\r\n    changePullUpLoadingStateDispatch(state) {\r\n      dispatch(changePullUpLoading(state));\r\n    }\r\n  }\r\n};\r\n\r\n// 将ui组件包装成容器组件\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Album));"]},"metadata":{},"sourceType":"module"}