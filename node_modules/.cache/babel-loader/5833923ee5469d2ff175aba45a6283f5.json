{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Player\\\\miniPlayer\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { getName } from '../../../api/utils';\nimport { MiniPlayerContainer } from './style';\nimport { CSSTransition } from 'react-transition-group';\nimport ProgressCircle from '../../../baseUI/progress-circle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MiniPlayer(props) {\n  _s();\n\n  const {\n    song,\n    fullScreen,\n    playing,\n    percent\n  } = props;\n  const {\n    toggleFullScreen,\n    clickPlaying\n  } = props;\n  const miniPlayerRef = useRef();\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: !fullScreen,\n    timeout: 400,\n    classNames: \"mini\",\n    onEnter: () => {\n      miniPlayerRef.current.style.display = \"flex\";\n    },\n    onExited: () => {\n      miniPlayerRef.current.style.display = \"none\";\n    },\n    children: /*#__PURE__*/_jsxDEV(MiniPlayerContainer, {\n      ref: miniPlayerRef,\n      onClick: () => toggleFullScreen(true),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imgWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `play ${playing ? \"\" : \"pause\"}`,\n            src: song.al.picUrl,\n            width: \"40\",\n            height: \"40\",\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"name\",\n          children: song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"desc\",\n          children: getName(song.ar)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(ProgressCircle, {\n          radius: 32,\n          percent: percent,\n          children: playing ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-mini iconfont icon-pause\",\n            onClick: e => clickPlaying(e, false),\n            children: \"\\uE650\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon-mini iconfont icon-play\",\n            onClick: e => clickPlaying(e, true),\n            children: \"\\uE61E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"iconfont\",\n          children: \"\\uE640\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MiniPlayer, \"vrA1G9aPFv9GxYnhD4wokhzQ9Q4=\");\n\n_c = MiniPlayer;\nexport default _c2 = /*#__PURE__*/React.memo(MiniPlayer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MiniPlayer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Player/miniPlayer/index.js"],"names":["React","useRef","getName","MiniPlayerContainer","CSSTransition","ProgressCircle","MiniPlayer","props","song","fullScreen","playing","percent","toggleFullScreen","clickPlaying","miniPlayerRef","current","style","display","al","picUrl","name","ar","e","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,mBAAT,QAAoC,SAApC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAAyCJ,KAA/C;AAEA,QAAM;AAAEK,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAsCN,KAA5C;AAEA,QAAMO,aAAa,GAAGb,MAAM,EAA5B;AAEA,sBACE,QAAC,aAAD;AACE,IAAA,EAAE,EAAE,CAACQ,UADP;AAEE,IAAA,OAAO,EAAE,GAFX;AAGE,IAAA,UAAU,EAAC,MAHb;AAIE,IAAA,OAAO,EAAE,MAAM;AACbK,MAAAA,aAAa,CAACC,OAAd,CAAsBC,KAAtB,CAA4BC,OAA5B,GAAsC,MAAtC;AACD,KANH;AAOE,IAAA,QAAQ,EAAE,MAAM;AACdH,MAAAA,aAAa,CAACC,OAAd,CAAsBC,KAAtB,CAA4BC,OAA5B,GAAsC,MAAtC;AACD,KATH;AAAA,2BAWE,QAAC,mBAAD;AAAqB,MAAA,GAAG,EAAEH,aAA1B;AAAyC,MAAA,OAAO,EAAE,MAAMF,gBAAgB,CAAC,IAAD,CAAxE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAG,QAAOF,OAAO,GAAG,EAAH,GAAO,OAAQ,EAA9C;AAAiD,YAAA,GAAG,EAAEF,IAAI,CAACU,EAAL,CAAQC,MAA9D;AAAsE,YAAA,KAAK,EAAC,IAA5E;AAAiF,YAAA,MAAM,EAAC,IAAxF;AAA6F,YAAA,GAAG,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,oBAAsBX,IAAI,CAACY;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,oBAAqBlB,OAAO,CAACM,IAAI,CAACa,EAAN;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAUE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACA,QAAC,cAAD;AAAgB,UAAA,MAAM,EAAE,EAAxB;AAA4B,UAAA,OAAO,EAAEV,OAArC;AAAA,oBACID,OAAO,gBACP;AAAG,YAAA,SAAS,EAAC,+BAAb;AAA6C,YAAA,OAAO,EAAEY,CAAC,IAAIT,YAAY,CAACS,CAAD,EAAI,KAAJ,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADO,gBAGP;AAAG,YAAA,SAAS,EAAC,8BAAb;AAA4C,YAAA,OAAO,EAAEA,CAAC,IAAIT,YAAY,CAACS,CAAD,EAAI,IAAJ,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA5CQhB,U;;KAAAA,U;AA8CT,kCAAeN,KAAK,CAACuB,IAAN,CAAWjB,UAAX,CAAf","sourcesContent":["import React, {useRef} from 'react';\r\nimport { getName } from '../../../api/utils';\r\nimport { MiniPlayerContainer } from './style';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ProgressCircle from '../../../baseUI/progress-circle';\r\n\r\nfunction MiniPlayer(props) {\r\n  const { song, fullScreen, playing, percent } = props;\r\n\r\n  const { toggleFullScreen, clickPlaying } =  props;\r\n\r\n  const miniPlayerRef = useRef();\r\n\r\n  return (\r\n    <CSSTransition \r\n      in={!fullScreen} \r\n      timeout={400} \r\n      classNames=\"mini\" \r\n      onEnter={() => {\r\n        miniPlayerRef.current.style.display = \"flex\";\r\n      }}\r\n      onExited={() => {\r\n        miniPlayerRef.current.style.display = \"none\";\r\n      }}\r\n    >\r\n      <MiniPlayerContainer ref={miniPlayerRef} onClick={() => toggleFullScreen(true)}>\r\n        <div className=\"icon\">\r\n          <div className=\"imgWrapper\">\r\n            <img className={`play ${playing ? \"\": \"pause\"}`} src={song.al.picUrl} width=\"40\" height=\"40\" alt=\"img\"/>\r\n          </div>\r\n        </div>\r\n        <div className=\"text\">\r\n          <h2 className=\"name\">{song.name}</h2>\r\n          <p className=\"desc\">{getName(song.ar)}</p>\r\n        </div>\r\n        <div className=\"control\">\r\n        <ProgressCircle radius={32} percent={percent}>\r\n          { playing ? \r\n            <i className=\"icon-mini iconfont icon-pause\" onClick={e => clickPlaying(e, false)}>&#xe650;</i>\r\n            :\r\n            <i className=\"icon-mini iconfont icon-play\" onClick={e => clickPlaying(e, true)}>&#xe61e;</i> \r\n          }\r\n        </ProgressCircle>\r\n        </div>\r\n        <div className=\"control\">\r\n          <i className=\"iconfont\">&#xe640;</i>\r\n        </div>\r\n      </MiniPlayerContainer>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nexport default React.memo(MiniPlayer);"]},"metadata":{},"sourceType":"module"}