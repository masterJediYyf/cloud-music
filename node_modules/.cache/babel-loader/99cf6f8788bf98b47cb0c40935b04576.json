{"ast":null,"code":"import _slicedToArray from\"C:/Users/86136/Desktop/\\u5B66\\u4E60\\u8FDB\\u5EA6/new_html/fullstack_yyf/react/cloud-music/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/86136/Desktop/\\u5B66\\u4E60\\u8FDB\\u5EA6/new_html/fullstack_yyf/react/cloud-music/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useState,useRef,useEffect,memo}from\"react\";import styled from'styled-components';import Scroll from'../scroll/index';import style from'../../assets/global-style';// 由于基础组件样式较少，直接写在 index.js 中\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var List=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  height: 30px;\\n  overflow: hidden;\\n  >span:first-of-type {\\n    display: block;\\n    flex: 0 0 auto;\\n    padding: 5px 0;\\n    margin-right: 5px;\\n    color: grey;\\n    font-size: \",\";\\n    vertical-align: middle;\\n  }\\n\"])),style[\"font-size-m\"]);var ListItem=styled.span(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex: 0 0 auto;\\n  font-size: \",\";\\n  padding: 5px 8px;\\n  border-radius: 10px;\\n  &.selected {\\n    color: \",\";\\n    border: 1px solid \",\";\\n    opacity: 0.8;\\n  }\\n\"])),style[\"font-size-m\"],style[\"theme-color\"],style[\"theme-color\"]);function Horizen(props){var list=props.list,oldVal=props.oldVal,title=props.title;var handleClick=props.handleClick;//加入声明\nvar Category=useRef(null);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),innerWidth=_useState2[0],setInnerWidth=_useState2[1];useEffect(function(){var categoryDOM=Category.current;var tagElems=categoryDOM.querySelectorAll('span');var totalWidth=0;Array.from(tagElems).forEach(function(ele){totalWidth+=ele.offsetWidth;});categoryDOM.style.width=\"\".concat(totalWidth,\"px\");setInnerWidth(totalWidth);},[]);return/*#__PURE__*/_jsx(Scroll,{direction:\"horizontal\",children:/*#__PURE__*/_jsx(\"div\",{ref:Category,children:/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsx(\"span\",{children:title}),list.map(function(item){return/*#__PURE__*/_jsx(ListItem,{className:oldVal===item.key?'selected':'',onClick:function onClick(){return handleClick(item.key);},children:item.name},item.key);})]})})});}// 首先考虑接受的参数\n//list 为接受的列表数据\n//oldVal 为当前的 item 值\n//title 为列表左边的标题\n//handleClick 为点击不同的 item 执行的方法\nHorizen.defaultProps={list:[],oldVal:'',title:'',handleClick:null};export default/*#__PURE__*/memo(Horizen);","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/baseUI/horizen-item/index.js"],"names":["React","useState","useRef","useEffect","memo","styled","Scroll","style","List","div","ListItem","span","Horizen","props","list","oldVal","title","handleClick","Category","innerWidth","setInnerWidth","categoryDOM","current","tagElems","querySelectorAll","totalWidth","Array","from","forEach","ele","offsetWidth","width","map","item","key","name","defaultProps"],"mappings":"mdAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,MAAvB,CAA8BC,SAA9B,CAAwCC,IAAxC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CAEA;wFACA,GAAMC,CAAAA,IAAI,CAAGH,MAAM,CAACI,GAAV,4UAWOF,KAAK,CAAE,aAAF,CAXZ,CAAV,CAeA,GAAMG,CAAAA,QAAQ,CAAGL,MAAM,CAACM,IAAV,6OAECJ,KAAK,CAAE,aAAF,CAFN,CAMDA,KAAK,CAAE,aAAF,CANJ,CAOUA,KAAK,CAAE,aAAF,CAPf,CAAd,CAYA,QAASK,CAAAA,OAAT,CAAiBC,KAAjB,CAAuB,IACZC,CAAAA,IADY,CACSD,KADT,CACZC,IADY,CACPC,MADO,CACSF,KADT,CACPE,MADO,CACAC,KADA,CACSH,KADT,CACAG,KADA,IAEZC,CAAAA,WAFY,CAEGJ,KAFH,CAEZI,WAFY,CAGnB;AACA,GAAMC,CAAAA,QAAQ,CAAGhB,MAAM,CAAC,IAAD,CAAvB,CAJmB,cAMiBD,QAAQ,CAAC,EAAD,CANzB,wCAMZkB,UANY,eAMAC,aANA,eAOnBjB,SAAS,CAAE,UAAM,CACb,GAAIkB,CAAAA,WAAW,CAAGH,QAAQ,CAACI,OAA3B,CACA,GAAIC,CAAAA,QAAQ,CAAGF,WAAW,CAACG,gBAAZ,CAA6B,MAA7B,CAAf,CACA,GAAIC,CAAAA,UAAU,CAAG,CAAjB,CACAC,KAAK,CAACC,IAAN,CAAYJ,QAAZ,EAAsBK,OAAtB,CAA+B,SAAAC,GAAG,CAAI,CAACJ,UAAU,EAAII,GAAG,CAACC,WAAlB,CAA8B,CAArE,EACAT,WAAW,CAACd,KAAZ,CAAkBwB,KAAlB,WAA6BN,UAA7B,OACAL,aAAa,CAACK,UAAD,CAAb,CACH,CAPQ,CAON,EAPM,CAAT,CASA,mBACI,KAAC,MAAD,EAAQ,SAAS,CAAE,YAAnB,uBACI,YAAK,GAAG,CAAEP,QAAV,uBACI,MAAC,IAAD,yBACI,sBAAOF,KAAP,EADJ,CAGQF,IAAI,CAACkB,GAAL,CAAS,SAACC,IAAD,CAAU,CACf,mBACI,KAAC,QAAD,EAEI,SAAS,CAAElB,MAAM,GAAKkB,IAAI,CAACC,GAAhB,CAAsB,UAAtB,CAAkC,EAFjD,CAGI,OAAO,CAAE,yBAAMjB,CAAAA,WAAW,CAAEgB,IAAI,CAACC,GAAP,CAAjB,EAHb,UAISD,IAAI,CAACE,IAJd,EACSF,IAAI,CAACC,GADd,CADJ,CAQH,CATD,CAHR,GADJ,EADJ,EADJ,CAqBH,CAED;AACA;AACA;AACA;AACA;AACAtB,OAAO,CAACwB,YAAR,CAAuB,CACnBtB,IAAI,CAAC,EADc,CAEnBC,MAAM,CAAE,EAFW,CAGnBC,KAAK,CAAE,EAHY,CAInBC,WAAW,CAAE,IAJM,CAAvB,CAeA,2BAAeb,IAAI,CAACQ,OAAD,CAAnB","sourcesContent":["import React,{useState,useRef,useEffect,memo} from \"react\";\r\nimport styled from 'styled-components';\r\nimport Scroll from '../scroll/index';\r\nimport {PropTypes} from 'prop-types';\r\nimport style from '../../assets/global-style';\r\n\r\n// 由于基础组件样式较少，直接写在 index.js 中\r\nconst List = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 30px;\r\n  overflow: hidden;\r\n  >span:first-of-type {\r\n    display: block;\r\n    flex: 0 0 auto;\r\n    padding: 5px 0;\r\n    margin-right: 5px;\r\n    color: grey;\r\n    font-size: ${style [\"font-size-m\"]};\r\n    vertical-align: middle;\r\n  }\r\n`\r\nconst ListItem = styled.span`\r\n  flex: 0 0 auto;\r\n  font-size: ${style [\"font-size-m\"]};\r\n  padding: 5px 8px;\r\n  border-radius: 10px;\r\n  &.selected {\r\n    color: ${style [\"theme-color\"]};\r\n    border: 1px solid ${style [\"theme-color\"]};\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nfunction Horizen(props){\r\n    const {list,oldVal,title} = props;\r\n    const {handleClick} = props;\r\n    //加入声明\r\n    const Category = useRef(null);\r\n\r\n    const [innerWidth, setInnerWidth] = useState(''); \r\n    useEffect (() => { \r\n        let categoryDOM = Category.current; \r\n        let tagElems = categoryDOM.querySelectorAll('span');\r\n        let totalWidth = 0;\r\n        Array.from (tagElems).forEach (ele => {totalWidth += ele.offsetWidth}); \r\n        categoryDOM.style.width = `${totalWidth}px`; \r\n        setInnerWidth(totalWidth); \r\n    }, [])\r\n\r\n    return(\r\n        <Scroll direction={\"horizontal\"}>\r\n            <div ref={Category}>\r\n                <List>\r\n                    <span>{title}</span>\r\n                    {\r\n                        list.map((item) => {\r\n                            return (\r\n                                <ListItem \r\n                                    key={item.key}\r\n                                    className={oldVal === item.key ? 'selected': ''} \r\n                                    onClick={() => handleClick (item.key)}>\r\n                                        {item.name}\r\n                                </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </div>\r\n        </Scroll>\r\n    )\r\n}\r\n\r\n// 首先考虑接受的参数\r\n//list 为接受的列表数据\r\n//oldVal 为当前的 item 值\r\n//title 为列表左边的标题\r\n//handleClick 为点击不同的 item 执行的方法\r\nHorizen.defaultProps = {\r\n    list:[],\r\n    oldVal: '',\r\n    title: '',\r\n    handleClick: null\r\n};\r\n\r\nHorizen.propTypes = {\r\n    list: PropTypes.array,\r\n    oldVal: PropTypes.string,\r\n    title: PropTypes.string,\r\n    handleClick: PropTypes.func\r\n};\r\n\r\n\r\nexport default memo(Horizen);"]},"metadata":{},"sourceType":"module"}