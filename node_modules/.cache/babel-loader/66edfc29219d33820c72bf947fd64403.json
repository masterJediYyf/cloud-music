{"ast":null,"code":"module.exports = function () {\n  'use strict';\n\n  var pfx = [\"webkit\", \"moz\", \"MS\", \"o\", \"\"];\n\n  function assert(pred, msg) {\n    if (!pred) {\n      throw new Error(msg);\n    }\n  }\n\n  function noop() {}\n\n  return {\n    add: function (element, type, callback) {\n      callback = callback || noop;\n      assert(element, 'element is required');\n      assert(type, 'type is required');\n\n      for (var p = 0; p < pfx.length; p++) {\n        if (!pfx[p]) {\n          type = type.toLowerCase();\n        }\n\n        element.addEventListener(pfx[p] + type, callback, false);\n      }\n    },\n    remove: function (element, type, callback) {\n      callback = callback || noop;\n      assert(element, 'element is required');\n      assert(type, 'type is required');\n\n      for (var p = 0; p < pfx.length; p++) {\n        if (!pfx[p]) {\n          type = type.toLowerCase();\n        }\n\n        element.removeEventListener(pfx[p] + type, callback, false);\n      }\n    }\n  };\n}();","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/node_modules/prefixed-event/lib/prefixed-event.js"],"names":["module","exports","pfx","assert","pred","msg","Error","noop","add","element","type","callback","p","length","toLowerCase","addEventListener","remove","removeEventListener"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAkB,YAAU;AAC5B;;AAEA,MAAIC,GAAG,GAAG,CAAC,QAAD,EAAW,KAAX,EAAkB,IAAlB,EAAwB,GAAxB,EAA6B,EAA7B,CAAV;;AACA,WAASC,MAAT,CAAgBC,IAAhB,EAAqBC,GAArB,EAAyB;AACrB,QAAG,CAACD,IAAJ,EAAU;AACN,YAAM,IAAIE,KAAJ,CAAUD,GAAV,CAAN;AACH;AAEJ;;AAED,WAASE,IAAT,GAAe,CAAE;;AACjB,SAAO;AACHC,IAAAA,GAAG,EAAE,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,QAAxB,EAAkC;AACnCA,MAAAA,QAAQ,GAAIA,QAAQ,IAAIJ,IAAxB;AACAJ,MAAAA,MAAM,CAACM,OAAD,EAAS,qBAAT,CAAN;AACAN,MAAAA,MAAM,CAACO,IAAD,EAAM,kBAAN,CAAN;;AAEA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,GAAG,CAACW,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,YAAI,CAACV,GAAG,CAACU,CAAD,CAAR,EAAa;AACTF,UAAAA,IAAI,GAAGA,IAAI,CAACI,WAAL,EAAP;AACH;;AACDL,QAAAA,OAAO,CAACM,gBAAR,CAAyBb,GAAG,CAACU,CAAD,CAAH,GAAOF,IAAhC,EAAsCC,QAAtC,EAAgD,KAAhD;AACH;AACJ,KAZE;AAaFK,IAAAA,MAAM,EAAE,UAASP,OAAT,EAAiBC,IAAjB,EAAsBC,QAAtB,EAA+B;AACpCA,MAAAA,QAAQ,GAAIA,QAAQ,IAAIJ,IAAxB;AACAJ,MAAAA,MAAM,CAACM,OAAD,EAAS,qBAAT,CAAN;AACAN,MAAAA,MAAM,CAACO,IAAD,EAAM,kBAAN,CAAN;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,GAAG,CAACW,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,YAAI,CAACV,GAAG,CAACU,CAAD,CAAR,EAAa;AACTF,UAAAA,IAAI,GAAGA,IAAI,CAACI,WAAL,EAAP;AACH;;AACDL,QAAAA,OAAO,CAACQ,mBAAR,CAA4Bf,GAAG,CAACU,CAAD,CAAH,GAAOF,IAAnC,EAAyCC,QAAzC,EAAmD,KAAnD;AACH;AACJ;AAvBE,GAAP;AA2BC,CAvCgB,EAAjB","sourcesContent":["module.exports = (function(){\n'use strict';\n\nvar pfx = [\"webkit\", \"moz\", \"MS\", \"o\", \"\"];\nfunction assert(pred,msg){\n    if(!pred) {\n        throw new Error(msg)\n    }\n\n}\n\nfunction noop(){}\nreturn {\n    add: function(element, type, callback) {\n        callback = (callback || noop);\n        assert(element,'element is required')\n        assert(type,'type is required')\n\n        for (var p = 0; p < pfx.length; p++) {\n            if (!pfx[p]) {\n                type = type.toLowerCase();\n            }\n            element.addEventListener(pfx[p]+type, callback, false);\n        }\n    }\n    ,remove: function(element,type,callback){\n        callback = (callback || noop);\n        assert(element,'element is required')\n        assert(type,'type is required')\n        for (var p = 0; p < pfx.length; p++) {\n            if (!pfx[p]) {\n                type = type.toLowerCase();\n            }\n            element.removeEventListener(pfx[p]+type, callback, false);\n        }\n    }\n\n}\n\n})();\n\n"]},"metadata":{},"sourceType":"script"}