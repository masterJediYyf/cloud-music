{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Singer\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Container } from \"./style\";\nimport { HEADER_HEIGHT } from \"./../../api/config\";\nimport { ImgWrapper, CollectButton, SongListWrapper, BgLayer } from \"./style\";\nimport Header from \"../../baseUI/header/index\";\nimport Scroll from \"../../baseUI/scroll/index\";\nimport SongsList from \"../SongList\";\nimport { connect } from 'react-redux';\nimport Loading from \"./../../baseUI/loading/index\";\nimport { getSingerInfo, changeEnterLoading } from \"./store/actionCreators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Singer(props) {\n  _s();\n\n  const initialHeight = useRef(0);\n  const [showStatus, setShowStatus] = useState(true);\n  const {\n    artist: immutableArtist,\n    songs: immutableSongs,\n    loading\n  } = props;\n  const {\n    getSingerDataDispatch\n  } = props;\n  const artist = immutableArtist.toJS();\n  const songs = immutableSongs.toJS();\n  const collectButton = useRef();\n  const imageWrapper = useRef();\n  const songScrollWrapper = useRef();\n  const songScroll = useRef();\n  const header = useRef();\n  const layer = useRef(); //往上偏移的尺寸，露出圆角\n\n  const OFFSET = 5;\n  useEffect(() => {\n    const id = props.match.params.id;\n    getSingerDataDispatch(id);\n    let h = imageWrapper.current.offsetHeight;\n    initialHeight.current = h;\n    songScrollWrapper.current.style.top = `${h - OFFSET}px`; //把遮罩先放在下面，以裹住歌曲列表\n\n    layer.current.style.top = `${h - OFFSET}px`;\n    songScroll.current.refresh(); // eslint-disable-next-line\n  }, []);\n  const handleScroll = useCallback(pos => {\n    let height = initialHeight.current;\n    const newY = pos.y;\n    const imageDOM = imageWrapper.current;\n    const buttonDOM = collectButton.current;\n    const headerDOM = header.current;\n    const layerDOM = layer.current;\n    const minScrollY = -(height - OFFSET) + HEADER_HEIGHT; //指的是滑动距离占图片高度的百分比\n\n    const percent = Math.abs(newY / height);\n\n    if (newY > 0) {\n      imageDOM.style[\"transform\"] = `scale(${1 + percent})`;\n      buttonDOM.style[\"transform\"] = `translate3d(0, ${newY}px, 0)`;\n      layerDOM.style.top = `${height - OFFSET + newY}px`;\n    } else if (newY >= minScrollY) {\n      layerDOM.style.top = `${height - OFFSET - Math.abs(newY)}px`; //这时候保证遮罩的层叠优先级比图片高，不至于被图片挡住\n\n      layerDOM.style.zIndex = 1;\n      imageDOM.style.paddingTop = \"75%\";\n      imageDOM.style.height = 0;\n      imageDOM.style.zIndex = -1; //按钮跟着移动且渐渐变透明\n\n      buttonDOM.style[\"transform\"] = `translate3d(0, ${newY}px, 0)`;\n      buttonDOM.style[\"opacity\"] = `${1 - percent * 2}`;\n    } else if (newY < minScrollY) {\n      //往上滑动，但是超过Header部分\n      layerDOM.style.top = `${HEADER_HEIGHT - OFFSET}px`;\n      layerDOM.style.zIndex = 1; //防止溢出的歌单内容遮住Header\n\n      headerDOM.style.zIndex = 100; //此时图片高度与Header一致\n\n      imageDOM.style.height = `${HEADER_HEIGHT}px`;\n      imageDOM.style.paddingTop = 0;\n      imageDOM.style.zIndex = 99;\n    }\n  }, []);\n  const setShowStatusFalse = useCallback(() => {\n    setShowStatus(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: showStatus,\n    timeout: 300,\n    classNames: \"fly\",\n    appear: true,\n    unmountOnExit: true,\n    onExited: () => props.history.goBack(),\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleClick: setShowStatusFalse,\n        title: artist.name,\n        ref: header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImgWrapper, {\n        ref: imageWrapper,\n        bgUrl: artist.picUrl,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CollectButton, {\n        ref: collectButton,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"iconfont\",\n          children: \"\\uE62D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text\",\n          children: \"\\u6536\\u85CF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BgLayer, {\n        ref: layer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SongListWrapper, {\n        ref: songScrollWrapper,\n        children: /*#__PURE__*/_jsxDEV(Scroll, {\n          ref: songScroll,\n          onScroll: handleScroll,\n          children: /*#__PURE__*/_jsxDEV(SongsList, {\n            songs: songs,\n            showCollect: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 22\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n} // 映射Redux全局的state到组件的props上\n\n\n_s(Singer, \"wHjvohovHSqFafzLAI+Ihnm0KQ0=\");\n\n_c = Singer;\n\nconst mapStateToProps = state => ({\n  artist: state.getIn([\"singerInfo\", \"artist\"]),\n  songs: state.getIn([\"singerInfo\", \"songsOfArtist\"]),\n  loading: state.getIn([\"singerInfo\", \"loading\"])\n}); // 映射dispatch到props上\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSingerDataDispatch(id) {\n      dispatch(changeEnterLoading(true));\n      dispatch(getSingerInfo(id));\n    }\n\n  };\n}; // 将ui组件包装成容器组件\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/React.memo(Singer));\n\nvar _c;\n\n$RefreshReg$(_c, \"Singer\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Singer/index.js"],"names":["React","useState","useEffect","useRef","useCallback","CSSTransition","Container","HEADER_HEIGHT","ImgWrapper","CollectButton","SongListWrapper","BgLayer","Header","Scroll","SongsList","connect","Loading","getSingerInfo","changeEnterLoading","Singer","props","initialHeight","showStatus","setShowStatus","artist","immutableArtist","songs","immutableSongs","loading","getSingerDataDispatch","toJS","collectButton","imageWrapper","songScrollWrapper","songScroll","header","layer","OFFSET","id","match","params","h","current","offsetHeight","style","top","refresh","handleScroll","pos","height","newY","y","imageDOM","buttonDOM","headerDOM","layerDOM","minScrollY","percent","Math","abs","zIndex","paddingTop","setShowStatusFalse","history","goBack","name","picUrl","mapStateToProps","state","getIn","mapDispatchToProps","dispatch","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { Container } from \"./style\";\r\nimport { HEADER_HEIGHT } from \"./../../api/config\";\r\nimport { ImgWrapper, CollectButton, SongListWrapper, BgLayer } from \"./style\";\r\nimport Header from \"../../baseUI/header/index\";\r\nimport Scroll from \"../../baseUI/scroll/index\";\r\nimport SongsList from \"../SongList\";\r\nimport { connect } from 'react-redux';\r\nimport Loading from \"./../../baseUI/loading/index\";\r\nimport { getSingerInfo, changeEnterLoading } from \"./store/actionCreators\";\r\n\r\nfunction Singer(props) {\r\n  const initialHeight = useRef(0);\r\n  const [showStatus, setShowStatus] = useState(true);\r\n\r\n  const { \r\n    artist: immutableArtist, \r\n    songs: immutableSongs, \r\n    loading,\r\n  } = props;\r\n  \r\n  const { getSingerDataDispatch } = props;\r\n  \r\n  const artist = immutableArtist.toJS();\r\n  const songs = immutableSongs.toJS();\r\n\r\n  const collectButton = useRef();\r\n  const imageWrapper = useRef();\r\n  const songScrollWrapper = useRef();\r\n  const songScroll = useRef();\r\n  const header = useRef();\r\n  const layer = useRef();\r\n\r\n  //往上偏移的尺寸，露出圆角\r\n  const OFFSET = 5;\r\n\r\n  useEffect(() => {\r\n    const id = props.match.params.id;\r\n    getSingerDataDispatch(id);\r\n    let h = imageWrapper.current.offsetHeight;\r\n    initialHeight.current = h;\r\n    songScrollWrapper.current.style.top = `${h - OFFSET}px`;\r\n    //把遮罩先放在下面，以裹住歌曲列表\r\n    layer.current.style.top = `${h - OFFSET}px`;\r\n    songScroll.current.refresh();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleScroll = useCallback(pos => {\r\n    let height = initialHeight.current;\r\n    const newY = pos.y;\r\n    const imageDOM = imageWrapper.current;\r\n    const buttonDOM = collectButton.current;\r\n    const headerDOM = header.current;\r\n    const layerDOM = layer.current;\r\n    const minScrollY = -(height - OFFSET) + HEADER_HEIGHT;\r\n\r\n    //指的是滑动距离占图片高度的百分比\r\n    const percent = Math.abs(newY / height);\r\n\r\n    if (newY > 0) {\r\n      imageDOM.style[\"transform\"] = `scale(${1 + percent})`;\r\n      buttonDOM.style[\"transform\"] = `translate3d(0, ${newY}px, 0)`;\r\n      layerDOM.style.top = `${height - OFFSET + newY}px`;\r\n    } else if (newY >= minScrollY) {\r\n      layerDOM.style.top = `${height - OFFSET - Math.abs(newY)}px`;\r\n      //这时候保证遮罩的层叠优先级比图片高，不至于被图片挡住\r\n      layerDOM.style.zIndex = 1;\r\n      imageDOM.style.paddingTop = \"75%\";\r\n      imageDOM.style.height = 0;\r\n      imageDOM.style.zIndex = -1;\r\n      //按钮跟着移动且渐渐变透明\r\n      buttonDOM.style[\"transform\"] = `translate3d(0, ${newY}px, 0)`;\r\n      buttonDOM.style[\"opacity\"] = `${1 - percent * 2}`;\r\n    } else if (newY < minScrollY) {\r\n      //往上滑动，但是超过Header部分\r\n      layerDOM.style.top = `${HEADER_HEIGHT - OFFSET}px`;\r\n      layerDOM.style.zIndex = 1;\r\n      //防止溢出的歌单内容遮住Header\r\n      headerDOM.style.zIndex = 100;\r\n      //此时图片高度与Header一致\r\n      imageDOM.style.height = `${HEADER_HEIGHT}px`;\r\n      imageDOM.style.paddingTop = 0;\r\n      imageDOM.style.zIndex = 99;\r\n    }\r\n  }, [])\r\n\r\n  const setShowStatusFalse = useCallback(() => {\r\n    setShowStatus(false);\r\n  }, []);\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={showStatus}\r\n      timeout={300}\r\n      classNames=\"fly\"\r\n      appear={true}\r\n      unmountOnExit\r\n      onExited={() => props.history.goBack()}\r\n    >\r\n      <Container>\r\n        <Header\r\n          handleClick={setShowStatusFalse}\r\n          title={artist.name}\r\n          ref={header}\r\n        ></Header>\r\n        <ImgWrapper ref={imageWrapper} bgUrl={artist.picUrl}>\r\n          <div className=\"filter\"></div>\r\n        </ImgWrapper>\r\n        <CollectButton ref={collectButton}>\r\n          <i className=\"iconfont\">&#xe62d;</i>\r\n          <span className=\"text\">收藏</span>\r\n        </CollectButton>\r\n        <BgLayer ref={layer}></BgLayer>\r\n        <SongListWrapper ref={songScrollWrapper}>\r\n          <Scroll ref={songScroll} onScroll={handleScroll}>\r\n            <SongsList\r\n              songs={songs}\r\n              showCollect={false}\r\n            ></SongsList>\r\n          </Scroll>\r\n        </SongListWrapper>\r\n        { loading ? (<Loading></Loading>) : null}\r\n      </Container>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\n// 映射Redux全局的state到组件的props上\r\nconst mapStateToProps = state => ({\r\n  artist: state.getIn([\"singerInfo\", \"artist\"]),\r\n  songs: state.getIn([\"singerInfo\", \"songsOfArtist\"]),\r\n  loading: state.getIn([\"singerInfo\", \"loading\"]),\r\n});\r\n// 映射dispatch到props上\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getSingerDataDispatch(id) {\r\n      dispatch(changeEnterLoading(true));\r\n      dispatch(getSingerInfo(id));\r\n    }\r\n  };\r\n};\r\n\r\n// 将ui组件包装成容器组件\r\nexport default connect(mapStateToProps,mapDispatchToProps)(React.memo(Singer));"]},"metadata":{},"sourceType":"module"}