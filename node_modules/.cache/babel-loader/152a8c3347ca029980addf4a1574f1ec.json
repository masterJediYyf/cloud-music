{"ast":null,"code":"export const getCount = count => {\n  if (count < 0) return;\n\n  if (count < 10000) {\n    return count;\n  } else if (Math.floor(count / 10000) < 10000) {\n    return Math.floor(count / 10000) + \"万\";\n  } else {\n    return Math.floor(count / 10000000) / 10 + \"亿\";\n  }\n};\nexport const debounce = (func, delay) => {\n  let timer;\n  return function (...args) {\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      func.apply(this, args);\n      clearTimeout(timer);\n    }, delay);\n  };\n}; //处理数据，找出第一个没有歌名的排行榜的索引\n\nexport const filterIndex = rankList => {\n  for (let i = 0; i < rankList.length - 1; i++) {\n    if (rankList[i].tracks.length && !rankList[i + 1].tracks.length) {\n      return i + 1;\n    }\n  }\n}; //处理歌手列表拼接歌手名字\n\nexport const getName = list => {\n  let str = \"\";\n  list.map((item, index) => {\n    str += index === 0 ? item.name : \"/\" + item.name;\n    return item;\n  });\n  return str;\n}; //判断一个对象是否为空\n\nexport const isEmptyObject = obj => !obj || Object.keys(obj).length === 0;","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/api/utils.js"],"names":["getCount","count","Math","floor","debounce","func","delay","timer","args","clearTimeout","setTimeout","apply","filterIndex","rankList","i","length","tracks","getName","list","str","map","item","index","name","isEmptyObject","obj","Object","keys"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,KAAD,IAAW;AACjC,MAAGA,KAAK,GAAG,CAAX,EAAc;;AACd,MAAGA,KAAK,GAAG,KAAX,EAAkB;AAChB,WAAOA,KAAP;AACD,GAFD,MAEO,IAAGC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAG,KAAnB,IAA4B,KAA/B,EAAsC;AAC3C,WAAOC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAC,KAAjB,IAA0B,GAAjC;AACD,GAFM,MAEC;AACN,WAAOC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAG,QAAnB,IAA8B,EAA9B,GAAmC,GAA1C;AACD;AACF,CATM;AAWP,OAAO,MAAMG,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,MAAIC,KAAJ;AACA,SAAO,UAAU,GAAGC,IAAb,EAAmB;AACxB,QAAGD,KAAH,EAAU;AACRE,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACD;;AACDA,IAAAA,KAAK,GAAGG,UAAU,CAAC,MAAM;AACvBL,MAAAA,IAAI,CAACM,KAAL,CAAW,IAAX,EAAiBH,IAAjB;AACAC,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACD,KAHiB,EAGfD,KAHe,CAAlB;AAID,GARD;AASD,CAXM,C,CAaP;;AACA,OAAO,MAAMM,WAAW,GAAGC,QAAQ,IAAI;AACrC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAAT,GAAkB,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,QAAID,QAAQ,CAACC,CAAD,CAAR,CAAYE,MAAZ,CAAmBD,MAAnB,IAA6B,CAACF,QAAQ,CAACC,CAAC,GAAG,CAAL,CAAR,CAAgBE,MAAhB,CAAuBD,MAAzD,EAAiE;AAC/D,aAAOD,CAAC,GAAG,CAAX;AACD;AACF;AACF,CANM,C,CAQP;;AACA,OAAO,MAAMG,OAAO,GAAGC,IAAI,IAAI;AAC7B,MAAIC,GAAG,GAAG,EAAV;AACAD,EAAAA,IAAI,CAACE,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxBH,IAAAA,GAAG,IAAIG,KAAK,KAAK,CAAV,GAAcD,IAAI,CAACE,IAAnB,GAA0B,MAAMF,IAAI,CAACE,IAA5C;AACA,WAAOF,IAAP;AACD,GAHD;AAIA,SAAOF,GAAP;AACD,CAPM,C,CASP;;AACA,OAAO,MAAMK,aAAa,GAAGC,GAAG,IAAI,CAACA,GAAD,IAAQC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBV,MAAjB,KAA4B,CAAjE","sourcesContent":["export const getCount = (count) => {\r\n  if(count < 0) return;\r\n  if(count < 10000) {\r\n    return count;\r\n  } else if(Math.floor(count / 10000) < 10000) {\r\n    return Math.floor(count/10000) + \"万\";\r\n  } else  {\r\n    return Math.floor(count / 10000000)/ 10 + \"亿\";\r\n  }\r\n}\r\n\r\nexport const debounce = (func, delay) => {\r\n  let timer;\r\n  return function (...args) {\r\n    if(timer) {\r\n      clearTimeout(timer);\r\n    }\r\n    timer = setTimeout(() => {\r\n      func.apply(this, args);\r\n      clearTimeout(timer);\r\n    }, delay);\r\n  }\r\n}\r\n\r\n//处理数据，找出第一个没有歌名的排行榜的索引\r\nexport const filterIndex = rankList => {\r\n  for (let i = 0; i < rankList.length - 1; i++) {\r\n    if (rankList[i].tracks.length && !rankList[i + 1].tracks.length) {\r\n      return i + 1;\r\n    }\r\n  }\r\n};\r\n\r\n//处理歌手列表拼接歌手名字\r\nexport const getName = list => {\r\n  let str = \"\";\r\n  list.map((item, index) => {\r\n    str += index === 0 ? item.name : \"/\" + item.name;\r\n    return item;\r\n  });\r\n  return str;\r\n};\r\n\r\n//判断一个对象是否为空\r\nexport const isEmptyObject = obj => !obj || Object.keys(obj).length === 0;"]},"metadata":{},"sourceType":"module"}