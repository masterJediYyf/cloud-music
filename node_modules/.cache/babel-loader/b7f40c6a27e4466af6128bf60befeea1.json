{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\baseUI\\\\scroll\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useState, useEffect, useRef, useImperativeHandle } from \"react\";\nimport PropTypes from 'prop-types';\nimport BScroll from 'better-scroll';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n`;\n_c = ScrollContainer;\nconst Scroll = /*#__PURE__*/forwardRef(_c2 = _s((props, ref) => {\n  _s();\n\n  // better-scroll 实例对象\n  const [bScroll, setBSroll] = useState(); // current 指向初始化 bs 实例需要的 DOM 元素\n\n  const scrollContainerRef = useRef(); // 从外面接受 props, 解构赋值拿到这些参数\n\n  const {\n    direction,\n    click,\n    refresh,\n    bounceTop,\n    bounceBottom\n  } = props;\n  const {\n    pullUp,\n    pullDown,\n    onScroll\n  } = props;\n  useEffect(() => {\n    const scroll = new BScroll(scrollContainerRef.current, {\n      scrollX: direction === 'horizontal',\n      scrollY: direction === 'vertical',\n      probeType: 3,\n      click: click,\n      bounce: {\n        top: bounceTop,\n        bottom: bounceBottom\n      }\n    });\n    setBSroll(scroll);\n    return () => {\n      setBSroll(null);\n    };\n  }, []); //给实例绑定 scroll 事件 \n\n  useEffect(() => {\n    if (!bScroll || !onScroll) return;\n    bScroll.on('scroll', scroll => {\n      onScroll(scroll);\n    });\n    return () => {\n      bScroll.off('scroll');\n    };\n  }, [onScroll, bScroll]); //进行上拉到底的判断，调用上拉刷新的函数\n\n  useEffect(() => {\n    if (!bScroll || !pullUp) return;\n    bScroll.on('scrollEnd', () => {\n      //判断是否滑动到了底部\n      if (bScroll.y <= bScroll.maxScrollY + 100) {\n        pullUp();\n      }\n    });\n    return () => {\n      bScroll.off('scrollEnd');\n    };\n  }, [pullUp, bScroll]); //进行下拉的判断，调用下拉刷新的函数\n\n  useEffect(() => {\n    if (!bScroll || !pullDown) return;\n    bScroll.on('touchEnd', pos => {\n      //判断用户的下拉动作\n      if (pos.y > 50) {\n        pullDown();\n      }\n    });\n    return () => {\n      bScroll.off('touchEnd');\n    };\n  }, [pullDown, bScroll]); //每次重新渲染都要刷新实例,防止无法滑动\n\n  useEffect(() => {\n    if (refresh && bScroll) {\n      bScroll.refresh();\n    }\n  }); // 一般和 forwardRef 一起使用，ref 已经在 forWardRef 中默认传入\n\n  useImperativeHandle(ref, () => ({\n    // 给外界暴露 refresh 方法\n    refresh() {\n      if (bScroll) {\n        bScroll.refresh();\n        bScroll.scrollTo(0, 0);\n      }\n    },\n\n    // 给外界暴露 getBScroll 方法，提供 bs 实例\n    getBScroll() {\n      if (bScroll) {\n        return bScroll;\n      }\n    }\n\n  }));\n  return /*#__PURE__*/_jsxDEV(ScrollContainer, {\n    ref: scrollContainerRef,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}, \"H7c5s70tdk3h/NYzGjIPP5jWVIc=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c3 = Scroll;\nScroll.defaultProps = {\n  direction: \"vertical\",\n  click: true,\n  refresh: true,\n  onScroll: null,\n  pullUpLoading: false,\n  pullDownLoading: false,\n  pullUp: null,\n  pullDown: null,\n  bounceTop: true,\n  bounceBottom: true\n};\nScroll.propTypes = {\n  direction: PropTypes.oneOf(['vertical', 'horizontal']),\n  // 滚动的方向\n  refresh: PropTypes.bool,\n  // 是否刷新\n  onScroll: PropTypes.func,\n  // 滑动触发的回调函数\n  pullUp: PropTypes.func,\n  // 上拉加载逻辑\n  pullDown: PropTypes.func,\n  //下拉加载逻辑\n  pullUpLoading: PropTypes.bool,\n  //是否显示上拉 loading 动画\n  pullDownLoading: PropTypes.bool,\n  //是否显示下拉 loading 动画\n  bounceTop: PropTypes.bool,\n  // 是否支持向上吸顶\n  bounceBottom: PropTypes.bool // 是否支持向上吸顶\n\n};\nexport default Scroll;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ScrollContainer\");\n$RefreshReg$(_c2, \"Scroll$forwardRef\");\n$RefreshReg$(_c3, \"Scroll\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/baseUI/scroll/index.js"],"names":["React","forwardRef","useState","useEffect","useRef","useImperativeHandle","PropTypes","BScroll","styled","ScrollContainer","div","Scroll","props","ref","bScroll","setBSroll","scrollContainerRef","direction","click","refresh","bounceTop","bounceBottom","pullUp","pullDown","onScroll","scroll","current","scrollX","scrollY","probeType","bounce","top","bottom","on","off","y","maxScrollY","pos","scrollTo","getBScroll","children","defaultProps","pullUpLoading","pullDownLoading","propTypes","oneOf","bool","func"],"mappings":"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","sourcesContent":["import React,{forwardRef,useState,useEffect,useRef,useImperativeHandle} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport BScroll from 'better-scroll';\r\nimport styled from \"styled-components\";\r\n\r\nconst ScrollContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`\r\n\r\nconst Scroll = forwardRef((props,ref) => {\r\n    // better-scroll 实例对象\r\n    const [bScroll,setBSroll] = useState();\r\n    // current 指向初始化 bs 实例需要的 DOM 元素\r\n    const scrollContainerRef = useRef();\r\n\r\n    // 从外面接受 props, 解构赋值拿到这些参数\r\n    const {direction,click,refresh,bounceTop,bounceBottom} = props;\r\n    const {pullUp,pullDown,onScroll} = props;\r\n\r\n    useEffect(() => {\r\n        const scroll = new BScroll(scrollContainerRef.current,{\r\n            scrollX:direction === 'horizontal',\r\n            scrollY:direction === 'vertical',\r\n            probeType: 3,\r\n            click: click,\r\n            bounce: {\r\n                top: bounceTop,\r\n                bottom: bounceBottom\r\n            }\r\n        });\r\n        setBSroll(scroll);\r\n        return () => {\r\n            setBSroll(null);\r\n        }\r\n    },[]);\r\n\r\n    //给实例绑定 scroll 事件 \r\n    useEffect(() => {\r\n        if(!bScroll || !onScroll) return;\r\n        bScroll.on('scroll',(scroll) => {\r\n            onScroll(scroll);\r\n        })\r\n        return () => {\r\n            bScroll.off('scroll');\r\n        }\r\n    },[onScroll,bScroll])\r\n\r\n\r\n    //进行上拉到底的判断，调用上拉刷新的函数\r\n    useEffect(() => {\r\n        if(!bScroll || !pullUp) return;\r\n        bScroll.on('scrollEnd',() => {\r\n            //判断是否滑动到了底部\r\n            if(bScroll.y <= bScroll.maxScrollY + 100){\r\n                pullUp();\r\n            }\r\n        });\r\n        return () => {\r\n            bScroll.off('scrollEnd');\r\n        }\r\n    },[pullUp,bScroll]);\r\n\r\n\r\n    //进行下拉的判断，调用下拉刷新的函数\r\n    useEffect(() => {\r\n        if(!bScroll || !pullDown) return;\r\n        bScroll.on('touchEnd',(pos) => {\r\n            //判断用户的下拉动作\r\n            if(pos.y > 50){\r\n                pullDown();\r\n            }\r\n        });\r\n        return () => {\r\n            bScroll.off('touchEnd')\r\n        }\r\n    },[pullDown,bScroll]);\r\n\r\n    //每次重新渲染都要刷新实例,防止无法滑动\r\n    useEffect(() => {\r\n        if(refresh && bScroll){\r\n            bScroll.refresh();\r\n        }\r\n    });\r\n\r\n\r\n    // 一般和 forwardRef 一起使用，ref 已经在 forWardRef 中默认传入\r\n    useImperativeHandle(ref,() => ({\r\n        // 给外界暴露 refresh 方法\r\n        refresh(){\r\n            if(bScroll){\r\n                bScroll.refresh();\r\n                bScroll.scrollTo(0,0);\r\n            }\r\n        },\r\n        // 给外界暴露 getBScroll 方法，提供 bs 实例\r\n        getBScroll(){\r\n            if(bScroll){\r\n                return bScroll;\r\n            }\r\n        }\r\n    }))\r\n\r\n    return(\r\n        <ScrollContainer ref={scrollContainerRef}>\r\n            {props.children}\r\n        </ScrollContainer>\r\n    )\r\n});\r\n\r\nScroll.defaultProps = {\r\n    direction: \"vertical\",\r\n    click: true,\r\n    refresh: true,\r\n    onScroll:null,\r\n    pullUpLoading: false,\r\n    pullDownLoading: false,\r\n    pullUp: null,\r\n    pullDown: null,\r\n    bounceTop: true,\r\n    bounceBottom: true\r\n}\r\n\r\nScroll.propTypes = {\r\n    direction: PropTypes.oneOf (['vertical', 'horizontal']),// 滚动的方向\r\n    refresh: PropTypes.bool, // 是否刷新\r\n    onScroll: PropTypes.func, // 滑动触发的回调函数\r\n    pullUp: PropTypes.func, // 上拉加载逻辑\r\n    pullDown: PropTypes.func,//下拉加载逻辑\r\n    pullUpLoading: PropTypes.bool,//是否显示上拉 loading 动画\r\n    pullDownLoading: PropTypes.bool,//是否显示下拉 loading 动画\r\n    bounceTop: PropTypes.bool,// 是否支持向上吸顶\r\n    bounceBottom: PropTypes.bool// 是否支持向上吸顶\r\n}\r\n\r\nexport default Scroll;\r\n"]},"metadata":{},"sourceType":"module"}