{"ast":null,"code":"import _slicedToArray from\"C:/Users/86136/Desktop/\\u5B66\\u4E60\\u8FDB\\u5EA6/new_html/fullstack_yyf/react/cloud-music/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef,useCallback}from\"react\";import{CSSTransition}from\"react-transition-group\";import{Container}from\"./style\";import{HEADER_HEIGHT}from\"./../../api/config\";import{ImgWrapper,CollectButton,SongListWrapper,BgLayer}from\"./style\";import Header from\"../../baseUI/header/index\";import Scroll from\"../../baseUI/scroll/index\";import SongsList from\"../SongList\";import{connect}from'react-redux';import Loading from\"./../../baseUI/loading/index\";import{getSingerInfo,changeEnterLoading}from\"./store/actionCreator\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Singer(props){var initialHeight=useRef(0);var _useState=useState(true),_useState2=_slicedToArray(_useState,2),showStatus=_useState2[0],setShowStatus=_useState2[1];var immutableArtist=props.artist,immutableSongs=props.songs,loading=props.loading;var getSingerDataDispatch=props.getSingerDataDispatch;var artist=immutableArtist.toJS();var songs=immutableSongs.toJS();var collectButton=useRef();var imageWrapper=useRef();var songScrollWrapper=useRef();var songScroll=useRef();var header=useRef();var layer=useRef();//往上偏移的尺寸，露出圆角\nvar OFFSET=5;useEffect(function(){var id=props.match.params.id;getSingerDataDispatch(id);var h=imageWrapper.current.offsetHeight;initialHeight.current=h;songScrollWrapper.current.style.top=\"\".concat(h-OFFSET,\"px\");//把遮罩先放在下面，以裹住歌曲列表\nlayer.current.style.top=\"\".concat(h-OFFSET,\"px\");songScroll.current.refresh();// eslint-disable-next-line\n},[]);var handleScroll=useCallback(function(pos){var height=initialHeight.current;var newY=pos.y;var imageDOM=imageWrapper.current;var buttonDOM=collectButton.current;var headerDOM=header.current;var layerDOM=layer.current;var minScrollY=-(height-OFFSET)+HEADER_HEIGHT;//指的是滑动距离占图片高度的百分比\nvar percent=Math.abs(newY/height);if(newY>0){imageDOM.style[\"transform\"]=\"scale(\".concat(1+percent,\")\");buttonDOM.style[\"transform\"]=\"translate3d(0, \".concat(newY,\"px, 0)\");layerDOM.style.top=\"\".concat(height-OFFSET+newY,\"px\");}else if(newY>=minScrollY){layerDOM.style.top=\"\".concat(height-OFFSET-Math.abs(newY),\"px\");//这时候保证遮罩的层叠优先级比图片高，不至于被图片挡住\nlayerDOM.style.zIndex=1;imageDOM.style.paddingTop=\"75%\";imageDOM.style.height=0;imageDOM.style.zIndex=-1;//按钮跟着移动且渐渐变透明\nbuttonDOM.style[\"transform\"]=\"translate3d(0, \".concat(newY,\"px, 0)\");buttonDOM.style[\"opacity\"]=\"\".concat(1-percent*2);}else if(newY<minScrollY){//往上滑动，但是超过Header部分\nlayerDOM.style.top=\"\".concat(HEADER_HEIGHT-OFFSET,\"px\");layerDOM.style.zIndex=1;//防止溢出的歌单内容遮住Header\nheaderDOM.style.zIndex=100;//此时图片高度与Header一致\nimageDOM.style.height=\"\".concat(HEADER_HEIGHT,\"px\");imageDOM.style.paddingTop=0;imageDOM.style.zIndex=99;}},[]);var setShowStatusFalse=useCallback(function(){setShowStatus(false);},[]);return/*#__PURE__*/_jsx(CSSTransition,{in:showStatus,timeout:300,classNames:\"fly\",appear:true,unmountOnExit:true,onExited:function onExited(){return props.history.goBack();},children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Header,{handleClick:setShowStatusFalse,title:artist.name,ref:header}),/*#__PURE__*/_jsx(ImgWrapper,{ref:imageWrapper,bgUrl:artist.picUrl,children:/*#__PURE__*/_jsx(\"div\",{className:\"filter\"})}),/*#__PURE__*/_jsxs(CollectButton,{ref:collectButton,children:[/*#__PURE__*/_jsx(\"i\",{className:\"iconfont\",children:\"\\uE62D\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text\",children:\"\\u6536\\u85CF\"})]}),/*#__PURE__*/_jsx(BgLayer,{ref:layer}),/*#__PURE__*/_jsx(SongListWrapper,{ref:songScrollWrapper,children:/*#__PURE__*/_jsx(Scroll,{ref:songScroll,onScroll:handleScroll,children:/*#__PURE__*/_jsx(SongsList,{songs:songs,showCollect:false})})}),loading?/*#__PURE__*/_jsx(Loading,{}):null]})});}// 映射Redux全局的state到组件的props上\nvar mapStateToProps=function mapStateToProps(state){return{artist:state.getIn([\"singerInfo\",\"artist\"]),songs:state.getIn([\"singerInfo\",\"songsOfArtist\"]),loading:state.getIn([\"singerInfo\",\"loading\"])};};// 映射dispatch到props上\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{getSingerDataDispatch:function getSingerDataDispatch(id){dispatch(changeEnterLoading(true));dispatch(getSingerInfo(id));}};};// 将ui组件包装成容器组件\nexport default connect(mapStateToProps,mapDispatchToProps)(/*#__PURE__*/React.memo(Singer));","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Singer/index.js"],"names":["React","useState","useEffect","useRef","useCallback","CSSTransition","Container","HEADER_HEIGHT","ImgWrapper","CollectButton","SongListWrapper","BgLayer","Header","Scroll","SongsList","connect","Loading","getSingerInfo","changeEnterLoading","Singer","props","initialHeight","showStatus","setShowStatus","immutableArtist","artist","immutableSongs","songs","loading","getSingerDataDispatch","toJS","collectButton","imageWrapper","songScrollWrapper","songScroll","header","layer","OFFSET","id","match","params","h","current","offsetHeight","style","top","refresh","handleScroll","pos","height","newY","y","imageDOM","buttonDOM","headerDOM","layerDOM","minScrollY","percent","Math","abs","zIndex","paddingTop","setShowStatusFalse","history","goBack","name","picUrl","mapStateToProps","state","getIn","mapDispatchToProps","dispatch","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { Container } from \"./style\";\r\nimport { HEADER_HEIGHT } from \"./../../api/config\";\r\nimport { ImgWrapper, CollectButton, SongListWrapper, BgLayer } from \"./style\";\r\nimport Header from \"../../baseUI/header/index\";\r\nimport Scroll from \"../../baseUI/scroll/index\";\r\nimport SongsList from \"../SongList\";\r\nimport { connect } from 'react-redux';\r\nimport Loading from \"./../../baseUI/loading/index\";\r\nimport { getSingerInfo, changeEnterLoading } from \"./store/actionCreator\";\r\n\r\nfunction Singer(props) {\r\n  const initialHeight = useRef(0);\r\n  const [showStatus, setShowStatus] = useState(true);\r\n\r\n  const { \r\n    artist: immutableArtist, \r\n    songs: immutableSongs, \r\n    loading,\r\n  } = props;\r\n  \r\n  const { getSingerDataDispatch } = props;\r\n  \r\n  const artist = immutableArtist.toJS();\r\n  const songs = immutableSongs.toJS();\r\n\r\n  const collectButton = useRef();\r\n  const imageWrapper = useRef();\r\n  const songScrollWrapper = useRef();\r\n  const songScroll = useRef();\r\n  const header = useRef();\r\n  const layer = useRef();\r\n\r\n  //往上偏移的尺寸，露出圆角\r\n  const OFFSET = 5;\r\n\r\n  useEffect(() => {\r\n    const id = props.match.params.id;\r\n    getSingerDataDispatch(id);\r\n    let h = imageWrapper.current.offsetHeight;\r\n    initialHeight.current = h;\r\n    songScrollWrapper.current.style.top = `${h - OFFSET}px`;\r\n    //把遮罩先放在下面，以裹住歌曲列表\r\n    layer.current.style.top = `${h - OFFSET}px`;\r\n    songScroll.current.refresh();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleScroll = useCallback(pos => {\r\n    let height = initialHeight.current;\r\n    const newY = pos.y;\r\n    const imageDOM = imageWrapper.current;\r\n    const buttonDOM = collectButton.current;\r\n    const headerDOM = header.current;\r\n    const layerDOM = layer.current;\r\n    const minScrollY = -(height - OFFSET) + HEADER_HEIGHT;\r\n\r\n    //指的是滑动距离占图片高度的百分比\r\n    const percent = Math.abs(newY / height);\r\n\r\n    if (newY > 0) {\r\n      imageDOM.style[\"transform\"] = `scale(${1 + percent})`;\r\n      buttonDOM.style[\"transform\"] = `translate3d(0, ${newY}px, 0)`;\r\n      layerDOM.style.top = `${height - OFFSET + newY}px`;\r\n    } else if (newY >= minScrollY) {\r\n      layerDOM.style.top = `${height - OFFSET - Math.abs(newY)}px`;\r\n      //这时候保证遮罩的层叠优先级比图片高，不至于被图片挡住\r\n      layerDOM.style.zIndex = 1;\r\n      imageDOM.style.paddingTop = \"75%\";\r\n      imageDOM.style.height = 0;\r\n      imageDOM.style.zIndex = -1;\r\n      //按钮跟着移动且渐渐变透明\r\n      buttonDOM.style[\"transform\"] = `translate3d(0, ${newY}px, 0)`;\r\n      buttonDOM.style[\"opacity\"] = `${1 - percent * 2}`;\r\n    } else if (newY < minScrollY) {\r\n      //往上滑动，但是超过Header部分\r\n      layerDOM.style.top = `${HEADER_HEIGHT - OFFSET}px`;\r\n      layerDOM.style.zIndex = 1;\r\n      //防止溢出的歌单内容遮住Header\r\n      headerDOM.style.zIndex = 100;\r\n      //此时图片高度与Header一致\r\n      imageDOM.style.height = `${HEADER_HEIGHT}px`;\r\n      imageDOM.style.paddingTop = 0;\r\n      imageDOM.style.zIndex = 99;\r\n    }\r\n  }, [])\r\n\r\n  const setShowStatusFalse = useCallback(() => {\r\n    setShowStatus(false);\r\n  }, []);\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={showStatus}\r\n      timeout={300}\r\n      classNames=\"fly\"\r\n      appear={true}\r\n      unmountOnExit\r\n      onExited={() => props.history.goBack()}\r\n    >\r\n      <Container>\r\n        <Header\r\n          handleClick={setShowStatusFalse}\r\n          title={artist.name}\r\n          ref={header}\r\n        ></Header>\r\n        <ImgWrapper ref={imageWrapper} bgUrl={artist.picUrl}>\r\n          <div className=\"filter\"></div>\r\n        </ImgWrapper>\r\n        <CollectButton ref={collectButton}>\r\n          <i className=\"iconfont\">&#xe62d;</i>\r\n          <span className=\"text\">收藏</span>\r\n        </CollectButton>\r\n        <BgLayer ref={layer}></BgLayer>\r\n        <SongListWrapper ref={songScrollWrapper}>\r\n          <Scroll ref={songScroll} onScroll={handleScroll}>\r\n            <SongsList\r\n              songs={songs}\r\n              showCollect={false}\r\n            ></SongsList>\r\n          </Scroll>\r\n        </SongListWrapper>\r\n        { loading ? (<Loading></Loading>) : null}\r\n      </Container>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\n// 映射Redux全局的state到组件的props上\r\nconst mapStateToProps = state => ({\r\n  artist: state.getIn([\"singerInfo\", \"artist\"]),\r\n  songs: state.getIn([\"singerInfo\", \"songsOfArtist\"]),\r\n  loading: state.getIn([\"singerInfo\", \"loading\"]),\r\n});\r\n// 映射dispatch到props上\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getSingerDataDispatch(id) {\r\n      dispatch(changeEnterLoading(true));\r\n      dispatch(getSingerInfo(id));\r\n    }\r\n  };\r\n};\r\n\r\n// 将ui组件包装成容器组件\r\nexport default connect(mapStateToProps,mapDispatchToProps)(React.memo(Singer));"]},"metadata":{},"sourceType":"module"}