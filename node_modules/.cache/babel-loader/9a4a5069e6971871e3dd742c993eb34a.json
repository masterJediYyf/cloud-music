{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\baseUI\\\\scroll\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useState, useEffect, useRef, useImperativeHandle } from \"react\";\nimport PropTypes from 'prop-types';\nimport BScroll from 'better-scroll';\nimport styled from \"styled-components\";\nimport Loading from '../loading/index';\nimport Loading2 from '../loading-v2/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n`;\n_c = ScrollContainer;\nconst Scroll = /*#__PURE__*/forwardRef(_c2 = _s((props, ref) => {\n  _s();\n\n  // better-scroll 实例对象\n  const [bScroll, setBSroll] = useState(); // current 指向初始化 bs 实例需要的 DOM 元素\n\n  const scrollContainerRef = useRef(); // 从外面接受 props, 解构赋值拿到这些参数\n\n  const {\n    direction,\n    click,\n    refresh,\n    bounceTop,\n    bounceBottom\n  } = props;\n  const {\n    pullUp,\n    pullDown,\n    onScroll\n  } = props;\n  const PullUpdisplayStyle = pullUpLoading ? {\n    display: \"\"\n  } : {\n    display: \"none\"\n  };\n  const PullDowndisplayStyle = pullDownLoading ? {\n    display: \"\"\n  } : {\n    display: \"none\"\n  };\n  useEffect(() => {\n    const scroll = new BScroll(scrollContainerRef.current, {\n      scrollX: direction === 'horizontal',\n      scrollY: direction === 'vertical',\n      probeType: 3,\n      click: click,\n      bounce: {\n        top: bounceTop,\n        bottom: bounceBottom\n      }\n    });\n    setBSroll(scroll);\n    return () => {\n      setBSroll(null);\n    };\n  }, []); //给实例绑定 scroll 事件 \n\n  useEffect(() => {\n    if (!bScroll || !onScroll) return;\n    bScroll.on('scroll', scroll => {\n      onScroll(scroll);\n    });\n    return () => {\n      bScroll.off('scroll');\n    };\n  }, [onScroll, bScroll]); //进行上拉到底的判断，调用上拉刷新的函数\n\n  useEffect(() => {\n    if (!bScroll || !pullUp) return;\n    bScroll.on('scrollEnd', () => {\n      //判断是否滑动到了底部\n      if (bScroll.y <= bScroll.maxScrollY + 100) {\n        pullUp();\n      }\n    });\n    return () => {\n      bScroll.off('scrollEnd');\n    };\n  }, [pullUp, bScroll]); //进行下拉的判断，调用下拉刷新的函数\n\n  useEffect(() => {\n    if (!bScroll || !pullDown) return;\n    bScroll.on('touchEnd', pos => {\n      //判断用户的下拉动作\n      if (pos.y > 50) {\n        pullDown();\n      }\n    });\n    return () => {\n      bScroll.off('touchEnd');\n    };\n  }, [pullDown, bScroll]); //每次重新渲染都要刷新实例,防止无法滑动\n\n  useEffect(() => {\n    if (refresh && bScroll) {\n      bScroll.refresh();\n    }\n  }); // 一般和 forwardRef 一起使用，ref 已经在 forWardRef 中默认传入\n\n  useImperativeHandle(ref, () => ({\n    // 给外界暴露 refresh 方法\n    refresh() {\n      if (bScroll) {\n        bScroll.refresh();\n        bScroll.scrollTo(0, 0);\n      }\n    },\n\n    // 给外界暴露 getBScroll 方法，提供 bs 实例\n    getBScroll() {\n      if (bScroll) {\n        return bScroll;\n      }\n    }\n\n  }));\n  return /*#__PURE__*/_jsxDEV(ScrollContainer, {\n    ref: scrollContainerRef,\n    children: [props.children, /*#__PURE__*/_jsxDEV(PullUpLoading, {\n      styled: PullUpdisplayStyle,\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PullDownLoading, {\n      style: PullDowndisplayStyle,\n      children: /*#__PURE__*/_jsxDEV(LoadingV2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}, \"H7c5s70tdk3h/NYzGjIPP5jWVIc=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c3 = Scroll;\nScroll.defaultProps = {\n  direction: \"vertical\",\n  click: true,\n  refresh: true,\n  onScroll: null,\n  pullUpLoading: false,\n  pullDownLoading: false,\n  pullUp: null,\n  pullDown: null,\n  bounceTop: true,\n  bounceBottom: true\n};\nScroll.propTypes = {\n  direction: PropTypes.oneOf(['vertical', 'horizontal']),\n  // 滚动的方向\n  refresh: PropTypes.bool,\n  // 是否刷新\n  onScroll: PropTypes.func,\n  // 滑动触发的回调函数\n  pullUp: PropTypes.func,\n  // 上拉加载逻辑\n  pullDown: PropTypes.func,\n  //下拉加载逻辑\n  pullUpLoading: PropTypes.bool,\n  //是否显示上拉 loading 动画\n  pullDownLoading: PropTypes.bool,\n  //是否显示下拉 loading 动画\n  bounceTop: PropTypes.bool,\n  // 是否支持向上吸顶\n  bounceBottom: PropTypes.bool // 是否支持向上吸顶\n\n};\nexport default Scroll;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ScrollContainer\");\n$RefreshReg$(_c2, \"Scroll$forwardRef\");\n$RefreshReg$(_c3, \"Scroll\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/baseUI/scroll/index.js"],"names":["React","forwardRef","useState","useEffect","useRef","useImperativeHandle","PropTypes","BScroll","styled","Loading","Loading2","ScrollContainer","div","Scroll","props","ref","bScroll","setBSroll","scrollContainerRef","direction","click","refresh","bounceTop","bounceBottom","pullUp","pullDown","onScroll","PullUpdisplayStyle","pullUpLoading","display","PullDowndisplayStyle","pullDownLoading","scroll","current","scrollX","scrollY","probeType","bounce","top","bottom","on","off","y","maxScrollY","pos","scrollTo","getBScroll","children","defaultProps","propTypes","oneOf","bool","func"],"mappings":"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","sourcesContent":["import React,{forwardRef,useState,useEffect,useRef,useImperativeHandle} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport BScroll from 'better-scroll';\r\nimport styled from \"styled-components\";\r\nimport Loading from '../loading/index';\r\nimport Loading2  from '../loading-v2/index'\r\n\r\nconst ScrollContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n`\r\n\r\nconst Scroll = forwardRef((props,ref) => {\r\n    // better-scroll 实例对象\r\n    const [bScroll,setBSroll] = useState();\r\n    // current 指向初始化 bs 实例需要的 DOM 元素\r\n    const scrollContainerRef = useRef();\r\n\r\n    // 从外面接受 props, 解构赋值拿到这些参数\r\n    const {direction,click,refresh,bounceTop,bounceBottom} = props;\r\n    const {pullUp,pullDown,onScroll} = props;\r\n\r\n    const PullUpdisplayStyle = pullUpLoading ? {display: \"\"} : { display:\"none\" };\r\n    const PullDowndisplayStyle = pullDownLoading ? { display: \"\"} : { display:\"none\" };\r\n\r\n    useEffect(() => {\r\n        const scroll = new BScroll(scrollContainerRef.current,{\r\n            scrollX:direction === 'horizontal',\r\n            scrollY:direction === 'vertical',\r\n            probeType: 3,\r\n            click: click,\r\n            bounce: {\r\n                top: bounceTop,\r\n                bottom: bounceBottom\r\n            }\r\n        });\r\n        setBSroll(scroll);\r\n        return () => {\r\n            setBSroll(null);\r\n        }\r\n    },[]);\r\n\r\n    //给实例绑定 scroll 事件 \r\n    useEffect(() => {\r\n        if(!bScroll || !onScroll) return;\r\n        bScroll.on('scroll',(scroll) => {\r\n            onScroll(scroll);\r\n        })\r\n        return () => {\r\n            bScroll.off('scroll');\r\n        }\r\n    },[onScroll,bScroll])\r\n\r\n\r\n    //进行上拉到底的判断，调用上拉刷新的函数\r\n    useEffect(() => {\r\n        if(!bScroll || !pullUp) return;\r\n        bScroll.on('scrollEnd',() => {\r\n            //判断是否滑动到了底部\r\n            if(bScroll.y <= bScroll.maxScrollY + 100){\r\n                pullUp();\r\n            }\r\n        });\r\n        return () => {\r\n            bScroll.off('scrollEnd');\r\n        }\r\n    },[pullUp,bScroll]);\r\n\r\n\r\n    //进行下拉的判断，调用下拉刷新的函数\r\n    useEffect(() => {\r\n        if(!bScroll || !pullDown) return;\r\n        bScroll.on('touchEnd',(pos) => {\r\n            //判断用户的下拉动作\r\n            if(pos.y > 50){\r\n                pullDown();\r\n            }\r\n        });\r\n        return () => {\r\n            bScroll.off('touchEnd')\r\n        }\r\n    },[pullDown,bScroll]);\r\n\r\n    //每次重新渲染都要刷新实例,防止无法滑动\r\n    useEffect(() => {\r\n        if(refresh && bScroll){\r\n            bScroll.refresh();\r\n        }\r\n    });\r\n\r\n\r\n    // 一般和 forwardRef 一起使用，ref 已经在 forWardRef 中默认传入\r\n    useImperativeHandle(ref,() => ({\r\n        // 给外界暴露 refresh 方法\r\n        refresh(){\r\n            if(bScroll){\r\n                bScroll.refresh();\r\n                bScroll.scrollTo(0,0);\r\n            }\r\n        },\r\n        // 给外界暴露 getBScroll 方法，提供 bs 实例\r\n        getBScroll(){\r\n            if(bScroll){\r\n                return bScroll;\r\n            }\r\n        }\r\n    }))\r\n\r\n    return(\r\n        <ScrollContainer ref={scrollContainerRef}>\r\n            {props.children}\r\n            {/* 滑倒底部加载动画 */}\r\n            <PullUpLoading styled={PullUpdisplayStyle }><Loading></Loading></PullUpLoading>\r\n            {/* 顶部下拉刷新动画 */}\r\n            <PullDownLoading style={ PullDowndisplayStyle }><LoadingV2></LoadingV2></PullDownLoading>\r\n        </ScrollContainer>\r\n    )\r\n});\r\n\r\nScroll.defaultProps = {\r\n    direction: \"vertical\",\r\n    click: true,\r\n    refresh: true,\r\n    onScroll:null,\r\n    pullUpLoading: false,\r\n    pullDownLoading: false,\r\n    pullUp: null,\r\n    pullDown: null,\r\n    bounceTop: true,\r\n    bounceBottom: true\r\n}\r\n\r\nScroll.propTypes = {\r\n    direction: PropTypes.oneOf (['vertical', 'horizontal']),// 滚动的方向\r\n    refresh: PropTypes.bool, // 是否刷新\r\n    onScroll: PropTypes.func, // 滑动触发的回调函数\r\n    pullUp: PropTypes.func, // 上拉加载逻辑\r\n    pullDown: PropTypes.func,//下拉加载逻辑\r\n    pullUpLoading: PropTypes.bool,//是否显示上拉 loading 动画\r\n    pullDownLoading: PropTypes.bool,//是否显示下拉 loading 动画\r\n    bounceTop: PropTypes.bool,// 是否支持向上吸顶\r\n    bounceBottom: PropTypes.bool// 是否支持向上吸顶\r\n}\r\n\r\nexport default Scroll;\r\n"]},"metadata":{},"sourceType":"module"}