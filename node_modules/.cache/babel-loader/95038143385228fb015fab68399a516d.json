{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Player\\\\miniPlayer\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { getName } from '../../../api/utils';\nimport { MiniPlayerContainer } from './style';\nimport { CSSTransition } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MiniPlayer(props) {\n  _s();\n\n  const {\n    song,\n    fullScreen\n  } = props;\n  const {\n    toggleFullScreen\n  } = props;\n  const miniPlayerRef = useRef();\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: !fullScreen,\n    timeout: 400,\n    classNames: \"mini\",\n    onEnter: () => {\n      miniPlayerRef.current.style.display = \"flex\";\n    },\n    onExited: () => {\n      miniPlayerRef.current.style.display = \"none\";\n    },\n    children: /*#__PURE__*/_jsxDEV(MiniPlayerContainer, {\n      ref: miniPlayerRef,\n      onClick: () => toggleFullScreen(true),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imgWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"play\",\n            src: song.al.picUrl,\n            width: \"40\",\n            height: \"40\",\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"name\",\n          children: song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"desc\",\n          children: getName(song.ar)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"iconfont\",\n          children: \"\\uE650\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"iconfont\",\n          children: \"\\uE640\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MiniPlayer, \"vrA1G9aPFv9GxYnhD4wokhzQ9Q4=\");\n\n_c = MiniPlayer;\nexport default _c2 = /*#__PURE__*/React.memo(MiniPlayer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MiniPlayer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Player/miniPlayer/index.js"],"names":["React","useRef","getName","MiniPlayerContainer","CSSTransition","MiniPlayer","props","song","fullScreen","toggleFullScreen","miniPlayerRef","current","style","display","al","picUrl","name","ar","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,MAAd,QAA2B,OAA3B;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,mBAAR,QAAkC,SAAlC;AACA,SAAQC,aAAR,QAA4B,wBAA5B;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBF,KAA7B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAwBH,KAA9B;AAEA,QAAMI,aAAa,GAAGT,MAAM,EAA5B;AAEA,sBACI,QAAC,aAAD;AACI,IAAA,EAAE,EAAE,CAACO,UADT;AAEI,IAAA,OAAO,EAAE,GAFb;AAGI,IAAA,UAAU,EAAC,MAHf;AAII,IAAA,OAAO,EAAE,MAAM;AACfE,MAAAA,aAAa,CAACC,OAAd,CAAsBC,KAAtB,CAA4BC,OAA5B,GAAsC,MAAtC;AACC,KANL;AAOI,IAAA,QAAQ,EAAE,MAAM;AAChBH,MAAAA,aAAa,CAACC,OAAd,CAAsBC,KAAtB,CAA4BC,OAA5B,GAAsC,MAAtC;AACC,KATL;AAAA,2BAWI,QAAC,mBAAD;AAAqB,MAAA,GAAG,EAAEH,aAA1B;AAAyC,MAAA,OAAO,EAAE,MAAMD,gBAAgB,CAAC,IAAD,CAAxE;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAsB,YAAA,GAAG,EAAEF,IAAI,CAACO,EAAL,CAAQC,MAAnC;AAA2C,YAAA,KAAK,EAAC,IAAjD;AAAsD,YAAA,MAAM,EAAC,IAA7D;AAAkE,YAAA,GAAG,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,oBAAsBR,IAAI,CAACS;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,oBAAqBd,OAAO,CAAEK,IAAI,CAACU,EAAP;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ,eAaI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GArCQZ,U;;KAAAA,U;AAuCT,kCAAeL,KAAK,CAACkB,IAAN,CAAWb,UAAX,CAAf","sourcesContent":["import React,{useRef} from 'react';\r\nimport {getName} from '../../../api/utils';\r\nimport {MiniPlayerContainer} from './style';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\nfunction MiniPlayer(props) {\r\n    const { song, fullScreen } = props;\r\n    const { toggleFullScreen } =  props;\r\n\r\n    const miniPlayerRef = useRef();\r\n\r\n    return (\r\n        <CSSTransition \r\n            in={!fullScreen} \r\n            timeout={400} \r\n            classNames=\"mini\" \r\n            onEnter={() => {\r\n            miniPlayerRef.current.style.display = \"flex\";\r\n            }}\r\n            onExited={() => {\r\n            miniPlayerRef.current.style.display = \"none\";\r\n            }}\r\n        >\r\n            <MiniPlayerContainer ref={miniPlayerRef} onClick={() => toggleFullScreen(true)}>\r\n                <div className='icon'>\r\n                    <div className='imgWrapper'>\r\n                        <img className=\"play\" src={song.al.picUrl} width=\"40\" height=\"40\" alt=\"img\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"text\">\r\n                    <h2 className=\"name\">{song.name}</h2>\r\n                    <p className=\"desc\">{getName (song.ar)}</p>\r\n                </div>\r\n                <div className=\"control\">\r\n                    <i className=\"iconfont\">&#xe650;</i>\r\n                </div>\r\n                <div className=\"control\">\r\n                    <i className=\"iconfont\">&#xe640;</i>\r\n                </div>\r\n            </MiniPlayerContainer>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nexport default React.memo(MiniPlayer)"]},"metadata":{},"sourceType":"module"}