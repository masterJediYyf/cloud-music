{"ast":null,"code":"import { getHotSingerListRequest, getSingerListRequest } from \"../../../api/request\";\nimport { CHANGE_SINGER_LIST, CHANGE_CATOGORY, CHANGE_ALPHA, CHANGE_LIST_OFFSET, CHANGE_PULLUP_LOADING, CHANGE_PULLDOWN_LOADING, CHANGE_ENTER_LOADING } from './constants';\nimport { fromJS } from 'immutable';\nexport const changeCategory = data => ({\n  type: CHANGE_CATOGORY,\n  data\n});\nexport const changeAlpha = data => ({\n  type: CHANGE_ALPHA,\n  data\n});\n\nconst changeSingerList = data => ({\n  type: CHANGE_SINGER_LIST,\n  data: fromJS(data)\n});\n\nexport const changeListOffset = data => ({\n  type: CHANGE_LIST_OFFSET,\n  data\n}); //进场loading\n\nexport const changeEnterLoading = data => ({\n  type: CHANGE_ENTER_LOADING,\n  data\n}); //滑动最底部loading\n\nexport const changePullUpLoading = data => ({\n  type: CHANGE_PULLUP_LOADING,\n  data\n}); //顶部下拉刷新loading\n\nexport const changePullDownLoading = data => ({\n  type: CHANGE_PULLDOWN_LOADING,\n  data\n});\nexport const getHotSingerList = () => {\n  return dispatch => {\n    getHotSingerListRequest(0).then(res => {\n      const data = res.artists;\n      dispatch(changeSingerList(data));\n      dispatch(changeEnterLoading(false));\n      dispatch(changePullDownLoading(false));\n      dispatch(changeListOffset(data.length));\n    }).catch(() => {\n      console.log('热门歌手数据获取失败');\n    });\n  };\n};\nexport const refreshMoreHotSingerList = () => {\n  return (dispatch, getState) => {\n    const offset = getState().getIn(['singers', 'listOffset']);\n    const singerList = getState().getIn(['singers', 'singerList']).toJS();\n    getHotSingerListRequest(offset).then(res => {\n      const data = [...singerList, ...res.artists];\n      dispatch(changeSingerList(data));\n      dispatch(changePullUpLoading(false));\n      dispatch(changeListOffset(data.length));\n    }).catch(() => {\n      console.log('热门歌手数据获取失败');\n    });\n  };\n};\nexport const getSingerList = () => {\n  return (dispatch, getState) => {\n    const offset = getState().getIn(['singers', 'listOffset']);\n    const category = getState().getIn(['singers', 'category']);\n    const alpha = getState().getIn(['singers', 'alpha']);\n    getSingerListRequest(category, alpha, offset).then(res => {\n      const data = res.artists;\n      dispatch(changeSingerList(data));\n      dispatch(changeEnterLoading(false));\n      dispatch(changePullDownLoading(false));\n      dispatch(changeListOffset(data.length));\n    }).catch(() => {\n      console.log('歌手数据获取失败');\n    });\n  };\n};\nexport const refreshMoreSingerList = () => {\n  return (dispatch, getState) => {\n    const category = getState().getIn(['singers', 'category']);\n    const alpha = getState().getIn(['singers', 'alpha']);\n    const offset = getState().getIn(['singers', 'listOffset']);\n    const singerList = getState().getIn(['singers', 'singerList']).toJS();\n    getSingerListRequest(category, alpha, offset).then(res => {\n      const data = [...singerList, ...res.artists];\n      dispatch(changeSingerList(data));\n      dispatch(changePullUpLoading(false));\n      dispatch(changeListOffset(data.length));\n    }).catch(() => {\n      console.log('歌手数据获取失败');\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Singers/store/actionCreators.js"],"names":["getHotSingerListRequest","getSingerListRequest","CHANGE_SINGER_LIST","CHANGE_CATOGORY","CHANGE_ALPHA","CHANGE_LIST_OFFSET","CHANGE_PULLUP_LOADING","CHANGE_PULLDOWN_LOADING","CHANGE_ENTER_LOADING","fromJS","changeCategory","data","type","changeAlpha","changeSingerList","changeListOffset","changeEnterLoading","changePullUpLoading","changePullDownLoading","getHotSingerList","dispatch","then","res","artists","length","catch","console","log","refreshMoreHotSingerList","getState","offset","getIn","singerList","toJS","getSingerList","category","alpha","refreshMoreSingerList"],"mappings":"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","sourcesContent":["import {\r\n  getHotSingerListRequest,\r\n  getSingerListRequest\r\n} from \"../../../api/request\";\r\nimport {\r\n  CHANGE_SINGER_LIST,\r\n  CHANGE_CATOGORY,\r\n  CHANGE_ALPHA,\r\n  CHANGE_LIST_OFFSET,\r\n  CHANGE_PULLUP_LOADING,\r\n  CHANGE_PULLDOWN_LOADING,\r\n  CHANGE_ENTER_LOADING\r\n} from './constants';\r\nimport {\r\n  fromJS\r\n} from 'immutable';\r\n\r\nexport const changeCategory = (data) => ({\r\n  type: CHANGE_CATOGORY,\r\n  data\r\n});\r\n\r\nexport const changeAlpha = (data) => ({\r\n  type: CHANGE_ALPHA,\r\n  data\r\n});\r\n\r\nconst changeSingerList = (data) => ({\r\n  type: CHANGE_SINGER_LIST,\r\n  data: fromJS(data)\r\n});\r\n\r\nexport const changeListOffset = (data) => ({\r\n  type: CHANGE_LIST_OFFSET,\r\n  data\r\n});\r\n\r\n//进场loading\r\nexport const changeEnterLoading = (data) => ({\r\n  type: CHANGE_ENTER_LOADING,\r\n  data\r\n});\r\n\r\n//滑动最底部loading\r\nexport const changePullUpLoading = (data) => ({\r\n  type: CHANGE_PULLUP_LOADING,\r\n  data\r\n});\r\n\r\n//顶部下拉刷新loading\r\nexport const changePullDownLoading = (data) => ({\r\n  type: CHANGE_PULLDOWN_LOADING,\r\n  data\r\n});\r\n\r\n\r\nexport const getHotSingerList = () => {\r\n  return (dispatch) => {\r\n    getHotSingerListRequest(0).then(res => {\r\n      const data = res.artists;\r\n      dispatch(changeSingerList(data));\r\n      dispatch(changeEnterLoading(false));\r\n      dispatch(changePullDownLoading(false));\r\n      dispatch(changeListOffset(data.length));\r\n    }).catch(() => {\r\n      console.log('热门歌手数据获取失败');\r\n    })\r\n  }\r\n};\r\nexport const refreshMoreHotSingerList = () => {\r\n  return (dispatch, getState) => {\r\n    const offset = getState().getIn(['singers', 'listOffset']);\r\n    const singerList = getState().getIn(['singers', 'singerList']).toJS();\r\n    getHotSingerListRequest(offset).then(res => {\r\n      const data = [...singerList, ...res.artists];\r\n      dispatch(changeSingerList(data));\r\n      dispatch(changePullUpLoading(false));\r\n      dispatch(changeListOffset(data.length));\r\n    }).catch(() => {\r\n      console.log('热门歌手数据获取失败');\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const getSingerList = () => {\r\n  return (dispatch, getState) => {\r\n    const offset = getState().getIn(['singers', 'listOffset']);\r\n    const category = getState().getIn(['singers', 'category']);\r\n    const alpha = getState().getIn(['singers', 'alpha']);\r\n    getSingerListRequest(category, alpha, offset).then(res => {\r\n      const data = res.artists;\r\n      dispatch(changeSingerList(data));\r\n      dispatch(changeEnterLoading(false));\r\n      dispatch(changePullDownLoading(false));\r\n      dispatch(changeListOffset(data.length));\r\n    }).catch(() => {\r\n      console.log('歌手数据获取失败');\r\n    });\r\n  }\r\n};\r\n\r\nexport const refreshMoreSingerList = () => {\r\n  return (dispatch, getState) => {\r\n    const category = getState().getIn(['singers', 'category']);\r\n    const alpha = getState().getIn(['singers', 'alpha']);\r\n    const offset = getState().getIn(['singers', 'listOffset']);\r\n    const singerList = getState().getIn(['singers', 'singerList']).toJS();\r\n    getSingerListRequest(category, alpha, offset).then(res => {\r\n      const data = [...singerList, ...res.artists];\r\n      dispatch(changeSingerList(data));\r\n      dispatch(changePullUpLoading(false));\r\n      dispatch(changeListOffset(data.length));\r\n    }).catch(() => {\r\n      console.log('歌手数据获取失败');\r\n    });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}