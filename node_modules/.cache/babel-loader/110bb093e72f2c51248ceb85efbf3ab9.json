{"ast":null,"code":"import axios from \"axios\";\nexport const baseUrl = \"https://music-api-five.vercel.app/\"; // axios的实例及拦截器配置\n\nconst axiosInstance = axios.create({\n  baseURL: baseUrl\n});\naxiosInstance.interceptors.response.use(res => res.data, err => {\n  console.log(err, \"网络错误\");\n});\nexport { axiosInstance }; //歌手种类\n\nexport const categoryTypes = [{\n  name: \"华语男\",\n  key: \"1001\"\n}, {\n  name: \"华语女\",\n  key: \"1002\"\n}, {\n  name: \"华语组合\",\n  key: \"1003\"\n}, {\n  name: \"欧美男\",\n  key: \"2001\"\n}, {\n  name: \"欧美女\",\n  key: \"2002\"\n}, {\n  name: \"欧美组合\",\n  key: \"2003\"\n}, {\n  name: \"日本男\",\n  key: \"6001\"\n}, {\n  name: \"日本女\",\n  key: \"6002\"\n}, {\n  name: \"日本组合\",\n  key: \"6003\"\n}, {\n  name: \"韩国男\",\n  key: \"7001\"\n}, {\n  name: \"韩国女\",\n  key: \"7002\"\n}, {\n  name: \"韩国组合\",\n  key: \"7003\"\n}, {\n  name: \"其他男歌手\",\n  key: \"4001\"\n}, {\n  name: \"其他女歌手\",\n  key: \"4002\"\n}, {\n  name: \"其他组合\",\n  key: \"4003\"\n}];\nexport const categoryMap = new Map([['1001', {\n  type: 1,\n  area: 7\n}], ['1002', {\n  type: 2,\n  area: 7\n}], ['1003', {\n  type: 3,\n  area: 7\n}], ['2001', {\n  type: 1,\n  area: 96\n}], ['2002', {\n  type: 2,\n  area: 96\n}], ['2003', {\n  type: 3,\n  area: 96\n}], ['6001', {\n  type: 1,\n  area: 8\n}], ['6002', {\n  type: 2,\n  area: 8\n}], ['6003', {\n  type: 3,\n  area: 8\n}], ['7001', {\n  type: 1,\n  area: 16\n}], ['7002', {\n  type: 2,\n  area: 16\n}], ['7003', {\n  type: 3,\n  area: 16\n}], ['4001', {\n  type: 1,\n  area: 0\n}], ['4002', {\n  type: 2,\n  area: 0\n}], ['4003', {\n  type: 3,\n  area: 0\n}]]); //歌手首字母\n\nexport const alphaTypes = [{\n  key: \"A\",\n  name: \"A\"\n}, {\n  key: \"B\",\n  name: \"B\"\n}, {\n  key: \"C\",\n  name: \"C\"\n}, {\n  key: \"D\",\n  name: \"D\"\n}, {\n  key: \"E\",\n  name: \"E\"\n}, {\n  key: \"F\",\n  name: \"F\"\n}, {\n  key: \"G\",\n  name: \"G\"\n}, {\n  key: \"H\",\n  name: \"H\"\n}, {\n  key: \"I\",\n  name: \"I\"\n}, {\n  key: \"J\",\n  name: \"J\"\n}, {\n  key: \"K\",\n  name: \"K\"\n}, {\n  key: \"L\",\n  name: \"L\"\n}, {\n  key: \"M\",\n  name: \"M\"\n}, {\n  key: \"N\",\n  name: \"N\"\n}, {\n  key: \"O\",\n  name: \"O\"\n}, {\n  key: \"P\",\n  name: \"P\"\n}, {\n  key: \"Q\",\n  name: \"Q\"\n}, {\n  key: \"R\",\n  name: \"R\"\n}, {\n  key: \"S\",\n  name: \"S\"\n}, {\n  key: \"T\",\n  name: \"T\"\n}, {\n  key: \"U\",\n  name: \"U\"\n}, {\n  key: \"V\",\n  name: \"V\"\n}, {\n  key: \"W\",\n  name: \"W\"\n}, {\n  key: \"X\",\n  name: \"X\"\n}, {\n  key: \"Y\",\n  name: \"Y\"\n}, {\n  key: \"Z\",\n  name: \"Z\"\n}]; //排行榜编号\n\nexport const RankTypes = {\n  \"0\": \"云音乐新歌榜\",\n  \"1\": \"云音乐热歌榜\",\n  \"2\": \"网易原创歌曲榜\",\n  \"3\": \"云音乐飙升榜\",\n  \"4\": \"云音乐国电榜\",\n  \"5\": \"UK排行榜周榜\",\n  \"6\": \"美国Billboard周榜\",\n  \"7\": \"KTV唛榜\",\n  \"8\": \"iTunes榜\",\n  \"9\": \"Hit FM Top榜\",\n  \"10\": \"日本Oricon周榜\",\n  \"11\": \"韩国Melon排行榜周榜\",\n  \"12\": \"韩国Mnet排行榜周榜\",\n  \"13\": \"韩国Melon原声周榜\",\n  \"14\": \"中国TOP排行榜（港台榜）\",\n  \"15\": \"中国TOP排行榜（内地榜）\",\n  \"16\": \"香港电台中文歌曲龙虎榜\",\n  \"17\": \"华语金曲榜\",\n  \"18\": \"中国嘻哈榜\",\n  \"19\": \"法国 NRJ Vos Hits 周榜\",\n  \"20\": \"台湾Hito排行榜\",\n  \"21\": \"Beatport全球电子舞曲榜\",\n  \"22\": \"云音乐ACG音乐榜\",\n  \"23\": \"江小白YOLO云音乐说唱榜\"\n}; //歌单一页限定歌曲数量\n\nexport const ONE_PAGE_COUNT = 50; //顶部的高度\n\nexport const HEADER_HEIGHT = 45; //播放模式\n\nexport const playMode = {\n  sequence: 0,\n  loop: 1,\n  random: 2\n}; // 倍速播放配置\n\nexport const list = [{\n  key: 0.75,\n  name: \"x0.75\"\n}, {\n  key: 1,\n  name: \"x1\"\n}, {\n  key: 1.25,\n  name: \"x1.25\"\n}, {\n  key: 1.5,\n  name: \"x1.5\"\n}, {\n  key: 2,\n  name: \"x2\"\n}];","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/api/config.js"],"names":["axios","baseUrl","axiosInstance","create","baseURL","interceptors","response","use","res","data","err","console","log","categoryTypes","name","key","categoryMap","Map","type","area","alphaTypes","RankTypes","ONE_PAGE_COUNT","HEADER_HEIGHT","playMode","sequence","loop","random","list"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const baseUrl = \"https://music-api-five.vercel.app/\";\r\n\r\n// axios的实例及拦截器配置\r\nconst axiosInstance = axios.create({\r\n  baseURL: baseUrl\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  res => res.data,\r\n  err => {\r\n    console.log(err, \"网络错误\");\r\n  }\r\n);\r\n\r\nexport { axiosInstance };\r\n\r\n//歌手种类\r\nexport const categoryTypes = [\r\n  {\r\n    name: \"华语男\",\r\n    key: \"1001\"\r\n  },\r\n  {\r\n    name: \"华语女\",\r\n    key: \"1002\"\r\n  },\r\n  {\r\n    name: \"华语组合\",\r\n    key: \"1003\"\r\n  },\r\n  {\r\n    name: \"欧美男\",\r\n    key: \"2001\"\r\n  },\r\n  {\r\n    name: \"欧美女\",\r\n    key: \"2002\"\r\n  },\r\n  {\r\n    name: \"欧美组合\",\r\n    key: \"2003\"\r\n  },\r\n  {\r\n    name: \"日本男\",\r\n    key: \"6001\"\r\n  },\r\n  {\r\n    name: \"日本女\",\r\n    key: \"6002\"\r\n  },\r\n  {\r\n    name: \"日本组合\",\r\n    key: \"6003\"\r\n  },\r\n  {\r\n    name: \"韩国男\",\r\n    key: \"7001\"\r\n  },\r\n  {\r\n    name: \"韩国女\",\r\n    key: \"7002\"\r\n  },\r\n  {\r\n    name: \"韩国组合\",\r\n    key: \"7003\"\r\n  },\r\n  {\r\n    name: \"其他男歌手\",\r\n    key: \"4001\"\r\n  },\r\n  {\r\n    name: \"其他女歌手\",\r\n    key: \"4002\"\r\n  },\r\n  {\r\n    name: \"其他组合\",\r\n    key: \"4003\"\r\n  }\r\n];\r\nexport const categoryMap = new Map([ ['1001', { type: 1, area: 7 }], ['1002', { type: 2, area: 7 }], ['1003', { type: 3, area: 7 }], ['2001', { type: 1, area: 96 }], ['2002', { type: 2, area: 96 }], ['2003', { type: 3, area: 96 }], ['6001', { type: 1, area: 8 }], ['6002', { type: 2, area: 8 }], ['6003', { type: 3, area: 8 }], ['7001', { type: 1, area: 16 }], ['7002', { type: 2, area: 16 }], ['7003', { type: 3, area: 16 }], ['4001', { type: 1, area: 0 }], ['4002', { type: 2, area: 0 }], ['4003', { type: 3, area: 0 }], ]);\r\n\r\n//歌手首字母\r\nexport const alphaTypes = [\r\n  {\r\n    key: \"A\",\r\n    name: \"A\"\r\n  },\r\n  {\r\n    key: \"B\",\r\n    name: \"B\"\r\n  },\r\n  {\r\n    key: \"C\",\r\n    name: \"C\"\r\n  },\r\n  {\r\n    key: \"D\",\r\n    name: \"D\"\r\n  },\r\n  {\r\n    key: \"E\",\r\n    name: \"E\"\r\n  },\r\n  {\r\n    key: \"F\",\r\n    name: \"F\"\r\n  },\r\n  {\r\n    key: \"G\",\r\n    name: \"G\"\r\n  },\r\n  {\r\n    key: \"H\",\r\n    name: \"H\"\r\n  },\r\n  {\r\n    key: \"I\",\r\n    name: \"I\"\r\n  },\r\n  {\r\n    key: \"J\",\r\n    name: \"J\"\r\n  },\r\n  {\r\n    key: \"K\",\r\n    name: \"K\"\r\n  },\r\n  {\r\n    key: \"L\",\r\n    name: \"L\"\r\n  },\r\n  {\r\n    key: \"M\",\r\n    name: \"M\"\r\n  },\r\n  {\r\n    key: \"N\",\r\n    name: \"N\"\r\n  },\r\n  {\r\n    key: \"O\",\r\n    name: \"O\"\r\n  },\r\n  {\r\n    key: \"P\",\r\n    name: \"P\"\r\n  },\r\n  {\r\n    key: \"Q\",\r\n    name: \"Q\"\r\n  },\r\n  {\r\n    key: \"R\",\r\n    name: \"R\"\r\n  },\r\n  {\r\n    key: \"S\",\r\n    name: \"S\"\r\n  },\r\n  {\r\n    key: \"T\",\r\n    name: \"T\"\r\n  },\r\n  {\r\n    key: \"U\",\r\n    name: \"U\"\r\n  },\r\n  {\r\n    key: \"V\",\r\n    name: \"V\"\r\n  },\r\n  {\r\n    key: \"W\",\r\n    name: \"W\"\r\n  },\r\n  {\r\n    key: \"X\",\r\n    name: \"X\"\r\n  },\r\n  {\r\n    key: \"Y\",\r\n    name: \"Y\"\r\n  },\r\n  {\r\n    key: \"Z\",\r\n    name: \"Z\"\r\n  }\r\n];\r\n\r\n//排行榜编号\r\nexport const RankTypes = {\r\n  \"0\": \"云音乐新歌榜\",\r\n  \"1\": \"云音乐热歌榜\",\r\n  \"2\": \"网易原创歌曲榜\",\r\n  \"3\": \"云音乐飙升榜\",\r\n  \"4\": \"云音乐国电榜\",\r\n  \"5\": \"UK排行榜周榜\",\r\n  \"6\": \"美国Billboard周榜\",\r\n  \"7\": \"KTV唛榜\",\r\n  \"8\": \"iTunes榜\",\r\n  \"9\": \"Hit FM Top榜\",\r\n  \"10\": \"日本Oricon周榜\",\r\n  \"11\": \"韩国Melon排行榜周榜\",\r\n  \"12\": \"韩国Mnet排行榜周榜\",\r\n  \"13\": \"韩国Melon原声周榜\",\r\n  \"14\": \"中国TOP排行榜（港台榜）\",\r\n  \"15\": \"中国TOP排行榜（内地榜）\",\r\n  \"16\": \"香港电台中文歌曲龙虎榜\",\r\n  \"17\": \"华语金曲榜\",\r\n  \"18\": \"中国嘻哈榜\",\r\n  \"19\": \"法国 NRJ Vos Hits 周榜\",\r\n  \"20\": \"台湾Hito排行榜\",\r\n  \"21\": \"Beatport全球电子舞曲榜\",\r\n  \"22\": \"云音乐ACG音乐榜\",\r\n  \"23\": \"江小白YOLO云音乐说唱榜\"\r\n};\r\n\r\n//歌单一页限定歌曲数量\r\nexport const ONE_PAGE_COUNT = 50;\r\n\r\n//顶部的高度\r\nexport const HEADER_HEIGHT = 45;\r\n\r\n//播放模式\r\nexport const playMode = {\r\n  sequence: 0,\r\n  loop: 1,\r\n  random: 2\r\n};\r\n\r\n// 倍速播放配置\r\nexport const list = [\r\n  {\r\n    key: 0.75,\r\n    name: \"x0.75\"\r\n  },\r\n  {\r\n    key: 1,\r\n    name:\"x1\"\r\n  }, \r\n  {\r\n    key: 1.25,\r\n    name:\"x1.25\"\r\n  }, \r\n  {\r\n    key: 1.5,\r\n    name:\"x1.5\"\r\n  }, \r\n  {\r\n    key: 2,\r\n    name:\"x2\"\r\n  }\r\n]"]},"metadata":{},"sourceType":"module"}