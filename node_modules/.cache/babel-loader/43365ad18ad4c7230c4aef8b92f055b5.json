{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Singers\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Horizen from '../../baseUI/horizen-item';\nimport { categoryTypes, alphaTypes } from '../../api/config';\nimport { NavContainer, ListContainer, List, ListItem } from './style';\nimport Scroll from \"../../baseUI/scroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst singerList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(item => {\n  return {\n    picUrl: \"https://p2.music.126.net/uTwOm8AEFFX_BYHvfvFcmQ==/109951164232057952.jpg\",\n    name: \"隔壁老樊\",\n    accountId: 277313426\n  };\n}); // 渲染函数 返回歌手列表\n\nconst renderSingerList = () => {\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: singerList.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${item.picUrl}?param=300x300`,\n            width: \"100%\",\n            height: \"100%\",\n            alt: \"music\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, item.accountId + \"\" + index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\nfunction Singers(props) {\n  _s();\n\n  let [category, setCategory] = useState('');\n  let [alpha, setAlpha] = useState('');\n\n  let handleUpdateAlpha = val => {\n    setAlpha(val);\n  };\n\n  let handleUpdateCatetory = val => {\n    setCategory(val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Horizen, {\n        list: categoryTypes,\n        title: \"分类 (默认热门):\",\n        handleClick: val => handleUpdateCatetory(val),\n        oldVal: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Horizen, {\n        list: alphaTypes,\n        title: \"首字母:\",\n        handleClick: val => handleUpdateAlpha(val),\n        oldVal: alpha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListContainer, {\n      children: /*#__PURE__*/_jsxDEV(Scroll, {\n        children: renderSingerList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Singers, \"35gW0cPWhyqkyAFx+whytA3q79Q=\");\n\n_c = Singers;\nexport default _c2 = /*#__PURE__*/React.memo(Singers);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Singers\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Singers/index.js"],"names":["React","useState","useEffect","Horizen","categoryTypes","alphaTypes","NavContainer","ListContainer","List","ListItem","Scroll","singerList","map","item","picUrl","name","accountId","renderSingerList","index","Singers","props","category","setCategory","alpha","setAlpha","handleUpdateAlpha","val","handleUpdateCatetory","memo"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport Horizen from '../../baseUI/horizen-item';\r\nimport { categoryTypes ,alphaTypes  } from '../../api/config';\r\nimport {  NavContainer,\r\n        ListContainer,\r\n        List,\r\n        ListItem\r\n    } from './style'\r\nimport Scroll from \"../../baseUI/scroll\";\r\n\r\nconst singerList = [1,2,3,4,5,6,7,8,9,10,11,12].map(item => {\r\n    return {\r\n        picUrl: \"https://p2.music.126.net/uTwOm8AEFFX_BYHvfvFcmQ==/109951164232057952.jpg\",\r\n        name: \"隔壁老樊\",\r\n        accountId: 277313426,\r\n    }\r\n});\r\n\r\n// 渲染函数 返回歌手列表\r\nconst renderSingerList = () => {\r\n    return (\r\n        <List>\r\n            {\r\n                singerList.map((item,index) => {\r\n                    return (\r\n                        <ListItem key={item.accountId+\"\"+index}>\r\n                        <div className=\"img_wrapper\">\r\n                          <img src={`${item.picUrl}?param=300x300`} width=\"100%\" height=\"100%\" alt=\"music\"/>\r\n                        </div>\r\n                        <span className=\"name\">{item.name}</span>\r\n                      </ListItem>\r\n                    )\r\n                })\r\n            }\r\n        </List>\r\n    )\r\n} \r\n\r\nfunction Singers(props){\r\n    let [category, setCategory] = useState ('');\r\n    let [alpha, setAlpha] = useState ('');\r\n\r\n    let handleUpdateAlpha = (val) => {\r\n        setAlpha (val);\r\n      }\r\n    \r\n      let handleUpdateCatetory = (val) => {\r\n        setCategory (val);\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <NavContainer>\r\n            <Horizen \r\n                list={categoryTypes} \r\n                title={\"分类 (默认热门):\"} \r\n                handleClick={(val) =>handleUpdateCatetory(val)} \r\n                oldVal={category}></Horizen>\r\n            <Horizen \r\n                list={alphaTypes} \r\n                title={\"首字母:\"} \r\n                handleClick={val => handleUpdateAlpha (val)} \r\n                oldVal={alpha}></Horizen>\r\n            </NavContainer>\r\n            <ListContainer>\r\n                <Scroll>\r\n                    {renderSingerList()}\r\n                </Scroll>\r\n            </ListContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Singers);"]},"metadata":{},"sourceType":"module"}