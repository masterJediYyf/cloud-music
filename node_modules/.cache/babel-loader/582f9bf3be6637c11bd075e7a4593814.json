{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Rank\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getRankList } from './store/index';\nimport Loading from '../../baseUI/loading';\nimport { List, ListItem, SongList, Container } from './style';\nimport Scroll from '../../baseUI/scroll/index';\nimport { EnterLoading } from './../Singers/style';\nimport { filterIndex } from '../../api/utils';\nimport { renderRoutes } from 'react-router-config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Rank(props) {\n  _s();\n\n  const {\n    rankList: list,\n    loading,\n    songsCount\n  } = props;\n  const {\n    getRankListDataDispatch\n  } = props;\n  let rankList = list ? list.toJS() : [];\n  useEffect(() => {\n    if (!rankList.length) {\n      getRankListDataDispatch();\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const enterDetail = detail => {\n    props.history.push(`/rank/${detail.id}`);\n  };\n\n  const renderSongList = list => {\n    return list.length ? /*#__PURE__*/_jsxDEV(SongList, {\n      children: list.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [index + 1, \". \", item.first, \" - \", item.second]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  const renderRankList = (list, global) => {\n    return /*#__PURE__*/_jsxDEV(List, {\n      globalRank: global,\n      children: list.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          tracks: item.tracks,\n          onClick: () => enterDetail(item),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img_wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.coverImgUrl,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"decorate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"update_frequecy\",\n              children: item.updateFrequency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), renderSongList(item.tracks)]\n        }, `${item.coverImgId}${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  };\n\n  let globalStartIndex = filterIndex(rankList);\n  let officialList = rankList.slice(0, globalStartIndex);\n  let globalList = rankList.slice(globalStartIndex);\n  let displayStyle = loading ? {\n    \"display\": \"none\"\n  } : {\n    \"display\": \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    play: songsCount,\n    children: [/*#__PURE__*/_jsxDEV(Scroll, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"offical\",\n          style: displayStyle,\n          children: \"\\u5B98\\u65B9\\u699C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), renderRankList(officialList), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"global\",\n          style: displayStyle,\n          children: \"\\u5168\\u7403\\u699C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), renderRankList(globalList, true), loading ? /*#__PURE__*/_jsxDEV(EnterLoading, {\n          children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 23\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), renderRoutes(props.route.routes)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n} // 映射Redux全局的state到组件的props上\n\n\n_s(Rank, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Rank;\n\nconst mapStateToProps = state => ({\n  rankList: state.getIn(['rank', 'rankList']),\n  loading: state.getIn(['rank', 'loading']),\n  songsCount: state.getIn(['player', 'playList']).size\n}); // 映射dispatch到props上\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getRankListDataDispatch() {\n      dispatch(getRankList());\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/React.memo(Rank));\n\nvar _c;\n\n$RefreshReg$(_c, \"Rank\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Rank/index.js"],"names":["React","useEffect","connect","getRankList","Loading","List","ListItem","SongList","Container","Scroll","EnterLoading","filterIndex","renderRoutes","Rank","props","rankList","list","loading","songsCount","getRankListDataDispatch","toJS","length","enterDetail","detail","history","push","id","renderSongList","map","item","index","first","second","renderRankList","global","tracks","coverImgUrl","updateFrequency","coverImgId","globalStartIndex","officialList","slice","globalList","displayStyle","route","routes","mapStateToProps","state","getIn","size","mapDispatchToProps","dispatch","memo"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getRankList } from './store/index'\r\nimport Loading from '../../baseUI/loading';\r\nimport {\r\n  List, \r\n  ListItem,\r\n  SongList,\r\n  Container\r\n} from './style';\r\nimport Scroll from '../../baseUI/scroll/index';\r\nimport { EnterLoading } from './../Singers/style';\r\nimport { filterIndex } from '../../api/utils';\r\nimport { renderRoutes } from 'react-router-config';\r\n\r\nfunction Rank(props) {\r\n  const { rankList:list, loading, songsCount } = props;\r\n  const { getRankListDataDispatch } = props;\r\n\r\n  let rankList = list ? list.toJS() : [];\r\n\r\n  useEffect(() => {\r\n    if(!rankList.length){\r\n      getRankListDataDispatch();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const enterDetail = (detail) => {\r\n    props.history.push(`/rank/${detail.id}`)\r\n  }\r\n  const renderSongList = (list) => {\r\n    return list.length ? (\r\n      <SongList>\r\n        {\r\n          list.map((item, index) => {\r\n            return <li key={index}>{index+1}. {item.first} - {item.second}</li>\r\n          })\r\n        }\r\n      </SongList>\r\n    ) : null;\r\n  }\r\n  const renderRankList = (list, global) => {\r\n    return (\r\n      <List globalRank={global}>\r\n       {\r\n        list.map((item, index) => {\r\n          return (\r\n            <ListItem key={`${item.coverImgId}${index}`} tracks={item.tracks} onClick={() => enterDetail(item)}>\r\n              <div className=\"img_wrapper\">\r\n                <img src={item.coverImgUrl} alt=\"\"/>\r\n                <div className=\"decorate\"></div>\r\n                <span className=\"update_frequecy\">{item.updateFrequency}</span>\r\n              </div>\r\n              { renderSongList(item.tracks)  }\r\n            </ListItem>\r\n          )\r\n       })\r\n      } \r\n      </List>\r\n    )\r\n  }\r\n\r\n  let globalStartIndex = filterIndex(rankList);\r\n  let officialList = rankList.slice(0, globalStartIndex);\r\n  let globalList = rankList.slice(globalStartIndex);\r\n  let displayStyle = loading ? {\"display\":\"none\"}:  {\"display\": \"\"};\r\n  return (\r\n    <Container play={songsCount}>\r\n      <Scroll>\r\n        <div>\r\n          <h1 className=\"offical\" style={displayStyle}>官方榜</h1>\r\n            { renderRankList(officialList) }\r\n          <h1 className=\"global\" style={displayStyle}>全球榜</h1>\r\n            { renderRankList(globalList, true) }\r\n          { loading ? <EnterLoading><Loading></Loading></EnterLoading> : null }\r\n        </div>\r\n      </Scroll> \r\n      {renderRoutes(props.route.routes)}\r\n    </Container>\r\n    );\r\n}\r\n\r\n// 映射Redux全局的state到组件的props上\r\nconst mapStateToProps = (state) => ({\r\n  rankList: state.getIn(['rank', 'rankList']),\r\n  loading: state.getIn(['rank', 'loading']),\r\n  songsCount: state.getIn(['player', 'playList']).size\r\n});\r\n// 映射dispatch到props上\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getRankListDataDispatch() {\r\n      dispatch(getRankList());\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Rank));"]},"metadata":{},"sourceType":"module"}