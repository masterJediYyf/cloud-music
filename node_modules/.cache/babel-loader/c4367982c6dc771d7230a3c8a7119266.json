{"ast":null,"code":"import _slicedToArray from\"C:/Users/86136/Desktop/\\u5B66\\u4E60\\u8FDB\\u5EA6/new_html/fullstack_yyf/react/cloud-music/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/86136/Desktop/\\u5B66\\u4E60\\u8FDB\\u5EA6/new_html/fullstack_yyf/react/cloud-music/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useEffect,useRef,useState}from'react';import styled from'styled-components';import style from'../../assets/global-style';import{prefixStyle}from'./../../api/utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProgressBarWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  height: 30px;\\n  .bar-inner{\\n    position: relative;\\n    top: 13px;\\n    height: 4px;\\n    background: rgba(0, 0, 0, .3);\\n    .progress{\\n      position: absolute;\\n      height: 100%;\\n      background: \",\";\\n    }\\n    .progress-btn-wrapper{\\n      position: absolute;\\n      left: -8px;\\n      top: -13px;\\n      width: 30px;\\n      height: 30px;\\n      .progress-btn{\\n        position: relative;\\n        top: 7px;\\n        left: 7px;\\n        box-sizing: border-box;\\n        width: 16px;\\n        height: 16px;\\n        border: 3px solid \",\";\\n        border-radius: 50%;\\n        background: \",\";\\n      }\\n    }\\n  }\\n\"])),style[\"theme-color\"],style[\"border-color\"],style[\"theme-color\"]);function ProgressBar(props){var progressBar=useRef();var progress=useRef();var progressBtn=useRef();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),touch=_useState2[0],setTouch=_useState2[1];var transform=prefixStyle('transform');var percent=props.percent;// 取出回调函数\nvar percentChange=props.percentChange;var progressBtnWidth=16;//监听 percent\nuseEffect(function(){if(percent>=0&&percent<=1&&!touch.initiated){var barWidth=progressBar.current.clientWidth-progressBtnWidth;var offsetWidth=percent*barWidth;progress.current.style.width=\"\".concat(offsetWidth,\"px\");progressBtn.current.style[transform]=\"translate3d(\".concat(offsetWidth,\"px, 0, 0)\");}// eslint-disable-next-line\n},[percent]);var _changePercent=function _changePercent(){var barWidth=progressBar.current.clientWidth-progressBtnWidth;var curPercent=progress.current.clientWidth/barWidth;// 新的进度计算\npercentChange(curPercent);// 把新的进度传给回调函数并执行\n};// 处理进度条的偏移\nvar _offset=function _offset(offsetWidth){progress.current.style.width=\"\".concat(offsetWidth,\"px\");progressBtn.current.style.transform=\"translate3d(\".concat(offsetWidth,\"px, 0, 0)\");};var progressTouchStart=function progressTouchStart(e){var startTouch={};startTouch.initiated=true;//initial 为 true 表示滑动动作开始了\nstartTouch.startX=e.touches[0].pageX;// 滑动开始时横向坐标\nstartTouch.left=progress.current.clientWidth;// 当前 progress 长度\nsetTouch(startTouch);};var progressTouchMove=function progressTouchMove(e){if(!touch.initiated)return;// 滑动距离   \nvar deltaX=e.touches[0].pageX-touch.startX;var barWidth=progressBar.current.clientWidth-progressBtnWidth;var offsetWidth=Math.min(Math.max(0,touch.left+deltaX),barWidth);_offset(offsetWidth);};var progressTouchEnd=function progressTouchEnd(e){var endTouch=JSON.parse(JSON.stringify(touch));endTouch.initiated=false;setTouch(endTouch);_changePercent();};var progressClick=function progressClick(e){var rect=progressBar.current.getBoundingClientRect();var offsetWidth=e.pageX-rect.left;_offset(offsetWidth);_changePercent();};return/*#__PURE__*/_jsx(ProgressBarWrapper,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"bar-inner\",ref:progressBar,onClick:progressClick,children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress\",ref:progress}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-btn-wrapper\",ref:progressBtn,onTouchStart:progressTouchStart,onTouchMove:progressTouchMove,onTouchEnd:progressTouchEnd,children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-btn\"})})]})});}export default ProgressBar;","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/baseUI/progressBar/index.js"],"names":["React","useEffect","useRef","useState","styled","style","prefixStyle","ProgressBarWrapper","div","ProgressBar","props","progressBar","progress","progressBtn","touch","setTouch","transform","percent","percentChange","progressBtnWidth","initiated","barWidth","current","clientWidth","offsetWidth","width","_changePercent","curPercent","_offset","progressTouchStart","e","startTouch","startX","touches","pageX","left","progressTouchMove","deltaX","Math","min","max","progressTouchEnd","endTouch","JSON","parse","stringify","progressClick","rect","getBoundingClientRect"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport style from '../../assets/global-style';\r\nimport { prefixStyle } from './../../api/utils';\r\n\r\nconst ProgressBarWrapper = styled.div`\r\n  height: 30px;\r\n  .bar-inner{\r\n    position: relative;\r\n    top: 13px;\r\n    height: 4px;\r\n    background: rgba(0, 0, 0, .3);\r\n    .progress{\r\n      position: absolute;\r\n      height: 100%;\r\n      background: ${style[\"theme-color\"]};\r\n    }\r\n    .progress-btn-wrapper{\r\n      position: absolute;\r\n      left: -8px;\r\n      top: -13px;\r\n      width: 30px;\r\n      height: 30px;\r\n      .progress-btn{\r\n        position: relative;\r\n        top: 7px;\r\n        left: 7px;\r\n        box-sizing: border-box;\r\n        width: 16px;\r\n        height: 16px;\r\n        border: 3px solid ${style[\"border-color\"]};\r\n        border-radius: 50%;\r\n        background: ${style[\"theme-color\"]};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction ProgressBar(props) {\r\n  const progressBar = useRef();\r\n  const progress = useRef();\r\n  const progressBtn = useRef();\r\n  const [touch, setTouch] = useState({});\r\n\r\n  const transform = prefixStyle('transform');\r\n  const { percent  } = props;\r\n  // 取出回调函数\r\n  const { percentChange } = props;\r\n\r\n  const progressBtnWidth = 16;  \r\n\r\n  //监听 percent\r\n  useEffect(() => {\r\n    if(percent >= 0 && percent <= 1 && !touch.initiated) {\r\n      const barWidth = progressBar.current.clientWidth - progressBtnWidth;\r\n      const offsetWidth = percent * barWidth;\r\n      progress.current.style.width = `${offsetWidth}px`;\r\n      progressBtn.current.style[transform] = `translate3d(${offsetWidth}px, 0, 0)`;\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [percent]);\r\n\r\n  const _changePercent = () => {\r\n    const barWidth = progressBar.current.clientWidth - progressBtnWidth;\r\n    const curPercent = progress.current.clientWidth/barWidth;// 新的进度计算\r\n    percentChange (curPercent);// 把新的进度传给回调函数并执行\r\n  }\r\n  \r\n    // 处理进度条的偏移\r\n  const _offset = (offsetWidth) => {\r\n    progress.current.style.width = `${offsetWidth}px`;\r\n    progressBtn.current.style.transform = `translate3d(${offsetWidth}px, 0, 0)`;\r\n  }\r\n\r\n  const progressTouchStart = (e) => {\r\n    const startTouch = {};\r\n    startTouch.initiated = true;//initial 为 true 表示滑动动作开始了\r\n    startTouch.startX = e.touches [0].pageX;// 滑动开始时横向坐标\r\n    startTouch.left = progress.current.clientWidth;// 当前 progress 长度\r\n    setTouch (startTouch);\r\n  }\r\n\r\n  const progressTouchMove = (e) => {\r\n    if (!touch.initiated) return;\r\n    // 滑动距离   \r\n    const deltaX = e.touches [0].pageX - touch.startX;\r\n    const barWidth = progressBar.current.clientWidth - progressBtnWidth; \r\n    const offsetWidth = Math.min (Math.max (0, touch.left + deltaX), barWidth);\r\n    _offset (offsetWidth);\r\n  }\r\n\r\n  const progressTouchEnd = (e) => {\r\n    const endTouch = JSON.parse (JSON.stringify (touch));\r\n    endTouch.initiated = false;\r\n    setTouch (endTouch);\r\n    _changePercent ();\r\n  }\r\n\r\n  const progressClick = (e) => {\r\n    const rect = progressBar.current.getBoundingClientRect ();\r\n    const offsetWidth = e.pageX - rect.left;\r\n    _offset (offsetWidth);\r\n    _changePercent ();\r\n  };\r\n\r\n  return (\r\n    <ProgressBarWrapper>\r\n      <div className=\"bar-inner\" ref={progressBar} onClick={progressClick} >\r\n        <div className=\"progress\" ref={progress}></div>\r\n        <div className=\"progress-btn-wrapper\" ref={progressBtn}\r\n            onTouchStart={progressTouchStart}\r\n            onTouchMove={progressTouchMove}\r\n            onTouchEnd={progressTouchEnd}\r\n        >\r\n          <div className=\"progress-btn\"></div>\r\n        </div>\r\n      </div>\r\n    </ProgressBarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}