{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Singers\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport Horizen from '../../baseUI/horizen-item/index';\nimport { categoryTypes, alphaTypes } from '../../api/config';\nimport { NavContainer, ListContainer, List, ListItem, EnterLoading } from \"./style\";\nimport { connect } from 'react-redux';\nimport { getSingerList, changeCategory, changeAlpha, getHotSingerList, changeListOffset, refreshMoreSingerList, changePullUpLoading, changePullDownLoading, refreshMoreHotSingerList } from './store/actionCreators';\nimport Scroll from \"../../baseUI/scroll/index\";\nimport LazyLoad, { forceCheck } from 'react-lazyload';\nimport Loading from '../../baseUI/loading/index';\nimport { renderRoutes } from 'react-router-config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Singers(props) {\n  _s();\n\n  const scrollRef = useRef(null);\n  const {\n    singerList,\n    category,\n    alpha,\n    pageCount,\n    songsCount,\n    pullUpLoading,\n    pullDownLoading,\n    enterLoading\n  } = props;\n  const {\n    getHotSinger,\n    updateCategory,\n    updateAlpha,\n    pullUpRefresh,\n    pullDownRefresh\n  } = props;\n  useEffect(() => {\n    if (!singerList.length && !category && !alpha) {\n      getHotSinger();\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const enterDetail = id => {\n    props.history.push(`/singers/${id}`);\n  };\n\n  const handlePullUp = () => {\n    pullUpRefresh(category === '', pageCount);\n  };\n\n  const handlePullDown = () => {\n    pullDownRefresh(category, pageCount);\n  };\n\n  const handleUpdateCategory = newVal => {\n    if (category === newVal) return;\n    updateCategory(newVal);\n    scrollRef.current.refresh();\n  };\n\n  const handleUpdateAlpha = newVal => {\n    if (alpha === newVal) return;\n    updateAlpha(newVal);\n    scrollRef.current.refresh();\n  };\n\n  const renderSingerList = () => {\n    const {\n      singerList\n    } = props;\n    return /*#__PURE__*/_jsxDEV(List, {\n      children: singerList.toJS().map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: () => enterDetail(item.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img_wrapper\",\n            children: /*#__PURE__*/_jsxDEV(LazyLoad, {\n              placeholder: /*#__PURE__*/_jsxDEV(\"img\", {\n                width: \"100%\",\n                height: \"100%\",\n                src: require('./singer.png'),\n                alt: \"music\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 42\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${item.picUrl}?param=300x300`,\n                width: \"100%\",\n                height: \"100%\",\n                alt: \"music\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, item.accountId + \"\" + index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Horizen, {\n        title: \"分类(默认热门):\",\n        list: categoryTypes,\n        handleClick: v => handleUpdateCategory(v),\n        oldVal: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Horizen, {\n        title: \"首字母:\",\n        list: alphaTypes,\n        handleClick: v => handleUpdateAlpha(v),\n        oldVal: alpha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListContainer, {\n      play: songsCount,\n      children: /*#__PURE__*/_jsxDEV(Scroll, {\n        onScroll: forceCheck,\n        pullUp: handlePullUp,\n        pullDown: handlePullDown,\n        ref: scrollRef,\n        pullUpLoading: pullUpLoading,\n        pullDownLoading: pullDownLoading,\n        children: renderSingerList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), enterLoading ? /*#__PURE__*/_jsxDEV(EnterLoading, {\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 24\n    }, this) : null, renderRoutes(props.route.routes)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Singers, \"P14GFulhWAl/Oec4Pk4QeBwKyr0=\");\n\n_c = Singers;\n\nconst mapStateToProps = state => ({\n  alpha: state.getIn(['singers', 'alpha']),\n  category: state.getIn(['singers', 'category']),\n  singerList: state.getIn(['singers', 'singerList']),\n  enterLoading: state.getIn(['singers', 'enterLoading']),\n  pullUpLoading: state.getIn(['singers', 'pullUpLoading']),\n  pullDownLoading: state.getIn(['singers', 'pullDownLoading']),\n  pageCount: state.getIn(['singers', 'pageCount']),\n  songsCount: state.getIn(['player', 'playList']).size\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getHotSinger() {\n      dispatch(getHotSingerList());\n    },\n\n    updateCategory(newVal) {\n      dispatch(changeCategory(newVal));\n      dispatch(getSingerList());\n    },\n\n    updateAlpha(newVal) {\n      dispatch(changeAlpha(newVal));\n      dispatch(getSingerList());\n    },\n\n    // 滑到最底部刷新部分的处理\n    pullUpRefresh(hot, count) {\n      dispatch(changePullUpLoading(true));\n\n      if (hot) {\n        dispatch(refreshMoreHotSingerList());\n      } else {\n        dispatch(refreshMoreSingerList());\n      }\n    },\n\n    //顶部下拉刷新\n    pullDownRefresh(category, alpha) {\n      dispatch(changePullDownLoading(true));\n      dispatch(changeListOffset(0));\n\n      if (category === '' && alpha === '') {\n        dispatch(getHotSingerList());\n      } else {\n        dispatch(getSingerList());\n      }\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/React.memo(Singers));\n\nvar _c;\n\n$RefreshReg$(_c, \"Singers\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Singers/index.js"],"names":["React","useRef","useEffect","Horizen","categoryTypes","alphaTypes","NavContainer","ListContainer","List","ListItem","EnterLoading","connect","getSingerList","changeCategory","changeAlpha","getHotSingerList","changeListOffset","refreshMoreSingerList","changePullUpLoading","changePullDownLoading","refreshMoreHotSingerList","Scroll","LazyLoad","forceCheck","Loading","renderRoutes","Singers","props","scrollRef","singerList","category","alpha","pageCount","songsCount","pullUpLoading","pullDownLoading","enterLoading","getHotSinger","updateCategory","updateAlpha","pullUpRefresh","pullDownRefresh","length","enterDetail","id","history","push","handlePullUp","handlePullDown","handleUpdateCategory","newVal","current","refresh","handleUpdateAlpha","renderSingerList","toJS","map","item","index","require","picUrl","name","accountId","v","route","routes","mapStateToProps","state","getIn","size","mapDispatchToProps","dispatch","hot","count","memo"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport Horizen from '../../baseUI/horizen-item/index';\r\nimport { categoryTypes, alphaTypes } from '../../api/config';\r\nimport { \r\n  NavContainer,\r\n  ListContainer,\r\n  List,\r\n  ListItem,\r\n  EnterLoading\r\n} from \"./style\";\r\nimport { connect } from 'react-redux';\r\nimport { getSingerList, changeCategory, changeAlpha, getHotSingerList, changeListOffset, refreshMoreSingerList, changePullUpLoading,changePullDownLoading, refreshMoreHotSingerList } from './store/actionCreators';\r\nimport Scroll from \"../../baseUI/scroll/index\";\r\nimport  LazyLoad, {forceCheck} from 'react-lazyload';\r\nimport Loading from '../../baseUI/loading/index';\r\nimport { renderRoutes } from 'react-router-config';\r\n\r\nfunction Singers(props){\r\n  const scrollRef = useRef(null);\r\n\r\n  const { singerList, category, alpha, pageCount, songsCount, pullUpLoading, pullDownLoading, enterLoading } = props;\r\n\r\n  const { getHotSinger, updateCategory, updateAlpha, pullUpRefresh, pullDownRefresh } = props;\r\n\r\n  useEffect(() => {\r\n    if(!singerList.length && !category && !alpha) {\r\n      getHotSinger();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const enterDetail = (id)  => {\r\n    props.history.push(`/singers/${id}`);\r\n  };\r\n\r\n  const handlePullUp = () => {\r\n    pullUpRefresh(category === '', pageCount);\r\n  };\r\n\r\n  const handlePullDown = () => {\r\n    pullDownRefresh(category, pageCount);\r\n  };\r\n\r\n  const handleUpdateCategory = (newVal) => {\r\n    if(category === newVal) return;\r\n    updateCategory(newVal);\r\n    scrollRef.current.refresh();\r\n  };\r\n\r\n  const handleUpdateAlpha = (newVal) => {\r\n    if(alpha === newVal) return;\r\n    updateAlpha(newVal);\r\n    scrollRef.current.refresh();\r\n  };\r\n\r\n  const renderSingerList = () => {\r\n    const {singerList} = props;\r\n\r\n    return (\r\n      <List>\r\n        {\r\n          singerList.toJS().map((item, index) => {\r\n            return (\r\n              <ListItem key={item.accountId+\"\"+index} onClick={() => enterDetail(item.id)}>\r\n                <div className=\"img_wrapper\">\r\n                  <LazyLoad placeholder={<img width=\"100%\" height=\"100%\" src={require('./singer.png')} alt=\"music\"/>}>\r\n                    <img src={`${item.picUrl}?param=300x300`} width=\"100%\" height=\"100%\" alt=\"music\"/>\r\n                  </LazyLoad>\r\n                </div>\r\n                <span className=\"name\">{item.name}</span>\r\n              </ListItem>\r\n            )\r\n          })\r\n        }\r\n      </List>\r\n    )\r\n  };\r\n  return (\r\n    <div>\r\n      {/* 对于better-scroll来讲，其作用的元素外面必须要有一个尺寸确定的容器包裹，因此设置xxxContainer */}\r\n      <NavContainer>\r\n        <Horizen title={\"分类(默认热门):\"} list={ categoryTypes } handleClick={(v) => handleUpdateCategory(v)} oldVal={category}></Horizen>\r\n        <Horizen title={\"首字母:\"} list={ alphaTypes } handleClick={(v) => handleUpdateAlpha(v)} oldVal={alpha}></Horizen>\r\n      </NavContainer>\r\n      <ListContainer play={songsCount}>\r\n        <Scroll \r\n          onScroll = {forceCheck} \r\n          pullUp={ handlePullUp }\r\n          pullDown = { handlePullDown }\r\n          ref={ scrollRef }\r\n          pullUpLoading = { pullUpLoading }\r\n          pullDownLoading = { pullDownLoading }\r\n          >\r\n          { renderSingerList() }\r\n        </Scroll>\r\n      </ListContainer>\r\n      {/* 入场加载动画 */}\r\n      { enterLoading ? <EnterLoading><Loading></Loading></EnterLoading> : null}\r\n      { renderRoutes(props.route.routes) }\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  alpha: state.getIn(['singers', 'alpha']),\r\n  category: state.getIn(['singers', 'category']),\r\n  singerList: state.getIn(['singers', 'singerList']),\r\n  enterLoading: state.getIn(['singers', 'enterLoading']),\r\n  pullUpLoading: state.getIn(['singers', 'pullUpLoading']),\r\n  pullDownLoading: state.getIn(['singers', 'pullDownLoading']),\r\n  pageCount: state.getIn(['singers', 'pageCount']),\r\n  songsCount: state.getIn(['player', 'playList']).size\r\n});\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getHotSinger() {\r\n      dispatch(getHotSingerList());\r\n    },\r\n    updateCategory(newVal) {\r\n      dispatch(changeCategory(newVal));\r\n      dispatch(getSingerList());\r\n    },\r\n    updateAlpha(newVal) {\r\n      dispatch(changeAlpha(newVal));\r\n      dispatch(getSingerList());\r\n    },\r\n    // 滑到最底部刷新部分的处理\r\n    pullUpRefresh(hot, count) {\r\n      dispatch(changePullUpLoading(true));\r\n      if(hot){\r\n        dispatch(refreshMoreHotSingerList());\r\n      } else {\r\n        dispatch(refreshMoreSingerList());\r\n      }\r\n    },\r\n    //顶部下拉刷新\r\n    pullDownRefresh(category, alpha) {\r\n      dispatch(changePullDownLoading(true));\r\n      dispatch(changeListOffset(0));\r\n      if(category === '' && alpha === ''){\r\n        dispatch(getHotSingerList());\r\n      } else {\r\n        dispatch(getSingerList());\r\n      }\r\n    }\r\n  }\r\n};   \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Singers));"]},"metadata":{},"sourceType":"module"}