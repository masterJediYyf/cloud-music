{"ast":null,"code":"/**\n * Swiper 7.0.8\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2021 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: October 4, 2021\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());\n})(this, function () {\n  'use strict';\n  /**\n   * SSR Window 4.0.0\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2021, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: August 25, 2021\n   */\n\n  /* eslint-disable no-param-reassign */\n\n  function isObject$1(obj) {\n    return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n  }\n\n  function extend$1(target = {}, src = {}) {\n    Object.keys(src).forEach(key => {\n      if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\n        extend$1(target[key], src[key]);\n      }\n    });\n  }\n\n  const ssrDocument = {\n    body: {},\n\n    addEventListener() {},\n\n    removeEventListener() {},\n\n    activeElement: {\n      blur() {},\n\n      nodeName: ''\n    },\n\n    querySelector() {\n      return null;\n    },\n\n    querySelectorAll() {\n      return [];\n    },\n\n    getElementById() {\n      return null;\n    },\n\n    createEvent() {\n      return {\n        initEvent() {}\n\n      };\n    },\n\n    createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n\n        setAttribute() {},\n\n        getElementsByTagName() {\n          return [];\n        }\n\n      };\n    },\n\n    createElementNS() {\n      return {};\n    },\n\n    importNode() {\n      return null;\n    },\n\n    location: {\n      hash: '',\n      host: '',\n      hostname: '',\n      href: '',\n      origin: '',\n      pathname: '',\n      protocol: '',\n      search: ''\n    }\n  };\n\n  function getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend$1(doc, ssrDocument);\n    return doc;\n  }\n\n  const ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n      userAgent: ''\n    },\n    location: {\n      hash: '',\n      host: '',\n      hostname: '',\n      href: '',\n      origin: '',\n      pathname: '',\n      protocol: '',\n      search: ''\n    },\n    history: {\n      replaceState() {},\n\n      pushState() {},\n\n      go() {},\n\n      back() {}\n\n    },\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n\n    addEventListener() {},\n\n    removeEventListener() {},\n\n    getComputedStyle() {\n      return {\n        getPropertyValue() {\n          return '';\n        }\n\n      };\n    },\n\n    Image() {},\n\n    Date() {},\n\n    screen: {},\n\n    setTimeout() {},\n\n    clearTimeout() {},\n\n    matchMedia() {\n      return {};\n    },\n\n    requestAnimationFrame(callback) {\n      if (typeof setTimeout === 'undefined') {\n        callback();\n        return null;\n      }\n\n      return setTimeout(callback, 0);\n    },\n\n    cancelAnimationFrame(id) {\n      if (typeof setTimeout === 'undefined') {\n        return;\n      }\n\n      clearTimeout(id);\n    }\n\n  };\n\n  function getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend$1(win, ssrWindow);\n    return win;\n  }\n  /**\n   * Dom7 4.0.0\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * https://framework7.io/docs/dom7.html\n   *\n   * Copyright 2021, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: August 25, 2021\n   */\n\n  /* eslint-disable no-proto */\n\n\n  function makeReactive(obj) {\n    const proto = obj.__proto__;\n    Object.defineProperty(obj, '__proto__', {\n      get() {\n        return proto;\n      },\n\n      set(value) {\n        proto.__proto__ = value;\n      }\n\n    });\n  }\n\n  class Dom7 extends Array {\n    constructor(items) {\n      super(...(items || []));\n      makeReactive(this);\n    }\n\n  }\n\n  function arrayFlat(arr = []) {\n    const res = [];\n    arr.forEach(el => {\n      if (Array.isArray(el)) {\n        res.push(...arrayFlat(el));\n      } else {\n        res.push(el);\n      }\n    });\n    return res;\n  }\n\n  function arrayFilter(arr, callback) {\n    return Array.prototype.filter.call(arr, callback);\n  }\n\n  function arrayUnique(arr) {\n    const uniqueArray = [];\n\n    for (let i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n    }\n\n    return uniqueArray;\n  }\n\n  function qsa(selector, context) {\n    if (typeof selector !== 'string') {\n      return [selector];\n    }\n\n    const a = [];\n    const res = context.querySelectorAll(selector);\n\n    for (let i = 0; i < res.length; i += 1) {\n      a.push(res[i]);\n    }\n\n    return a;\n  }\n\n  function $(selector, context) {\n    const window = getWindow();\n    const document = getDocument();\n    let arr = [];\n\n    if (!context && selector instanceof Dom7) {\n      return selector;\n    }\n\n    if (!selector) {\n      return new Dom7(arr);\n    }\n\n    if (typeof selector === 'string') {\n      const html = selector.trim();\n\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        const tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n\n        for (let i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        arr = qsa(selector.trim(), context || document);\n      } // arr = qsa(selector, document);\n\n    } else if (selector.nodeType || selector === window || selector === document) {\n      arr.push(selector);\n    } else if (Array.isArray(selector)) {\n      if (selector instanceof Dom7) return selector;\n      arr = selector;\n    }\n\n    return new Dom7(arrayUnique(arr));\n  }\n\n  $.fn = Dom7.prototype; // eslint-disable-next-line\n\n  function addClass(...classes) {\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\n    this.forEach(el => {\n      el.classList.add(...classNames);\n    });\n    return this;\n  }\n\n  function removeClass(...classes) {\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\n    this.forEach(el => {\n      el.classList.remove(...classNames);\n    });\n    return this;\n  }\n\n  function toggleClass(...classes) {\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\n    this.forEach(el => {\n      classNames.forEach(className => {\n        el.classList.toggle(className);\n      });\n    });\n  }\n\n  function hasClass(...classes) {\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\n    return arrayFilter(this, el => {\n      return classNames.filter(className => el.classList.contains(className)).length > 0;\n    }).length > 0;\n  }\n\n  function attr(attrs, value) {\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) return this[0].getAttribute(attrs);\n      return undefined;\n    } // Set attrs\n\n\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        for (const attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function removeAttr(attr) {\n    for (let i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n\n    return this;\n  }\n\n  function transform(transform) {\n    for (let i = 0; i < this.length; i += 1) {\n      this[i].style.transform = transform;\n    }\n\n    return this;\n  }\n\n  function transition$1(duration) {\n    for (let i = 0; i < this.length; i += 1) {\n      this[i].style.transitionDuration = typeof duration !== 'string' ? `${duration}ms` : duration;\n    }\n\n    return this;\n  }\n\n  function on(...args) {\n    let [eventType, targetSelector, listener, capture] = args;\n\n    if (typeof args[1] === 'function') {\n      [eventType, listener, capture] = args;\n      targetSelector = undefined;\n    }\n\n    if (!capture) capture = false;\n\n    function handleLiveEvent(e) {\n      const target = e.target;\n      if (!target) return;\n      const eventData = e.target.dom7EventData || [];\n\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n\n      if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n        const parents = $(target).parents(); // eslint-disable-line\n\n        for (let k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n        }\n      }\n    }\n\n    function handleEvent(e) {\n      const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n\n      listener.apply(this, eventData);\n    }\n\n    const events = eventType.split(' ');\n    let j;\n\n    for (let i = 0; i < this.length; i += 1) {\n      const el = this[i];\n\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          const event = events[j];\n          if (!el.dom7Listeners) el.dom7Listeners = {};\n          if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n          el.dom7Listeners[event].push({\n            listener,\n            proxyListener: handleEvent\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          const event = events[j];\n          if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n          if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n          el.dom7LiveListeners[event].push({\n            listener,\n            proxyListener: handleLiveEvent\n          });\n          el.addEventListener(event, handleLiveEvent, capture);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function off(...args) {\n    let [eventType, targetSelector, listener, capture] = args;\n\n    if (typeof args[1] === 'function') {\n      [eventType, listener, capture] = args;\n      targetSelector = undefined;\n    }\n\n    if (!capture) capture = false;\n    const events = eventType.split(' ');\n\n    for (let i = 0; i < events.length; i += 1) {\n      const event = events[i];\n\n      for (let j = 0; j < this.length; j += 1) {\n        const el = this[j];\n        let handlers;\n\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n\n        if (handlers && handlers.length) {\n          for (let k = handlers.length - 1; k >= 0; k -= 1) {\n            const handler = handlers[k];\n\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function trigger(...args) {\n    const window = getWindow();\n    const events = args[0].split(' ');\n    const eventData = args[1];\n\n    for (let i = 0; i < events.length; i += 1) {\n      const event = events[i];\n\n      for (let j = 0; j < this.length; j += 1) {\n        const el = this[j];\n\n        if (window.CustomEvent) {\n          const evt = new window.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true\n          });\n          el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n          el.dispatchEvent(evt);\n          el.dom7EventData = [];\n          delete el.dom7EventData;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function transitionEnd$1(callback) {\n    const dom = this;\n\n    function fireCallBack(e) {\n      if (e.target !== this) return;\n      callback.call(this, e);\n      dom.off('transitionend', fireCallBack);\n    }\n\n    if (callback) {\n      dom.on('transitionend', fireCallBack);\n    }\n\n    return this;\n  }\n\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        const styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n\n      return this[0].offsetWidth;\n    }\n\n    return null;\n  }\n\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        const styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n\n      return this[0].offsetHeight;\n    }\n\n    return null;\n  }\n\n  function offset() {\n    if (this.length > 0) {\n      const window = getWindow();\n      const document = getDocument();\n      const el = this[0];\n      const box = el.getBoundingClientRect();\n      const body = document.body;\n      const clientTop = el.clientTop || body.clientTop || 0;\n      const clientLeft = el.clientLeft || body.clientLeft || 0;\n      const scrollTop = el === window ? window.scrollY : el.scrollTop;\n      const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n      return {\n        top: box.top + scrollTop - clientTop,\n        left: box.left + scrollLeft - clientLeft\n      };\n    }\n\n    return null;\n  }\n\n  function styles() {\n    const window = getWindow();\n    if (this[0]) return window.getComputedStyle(this[0], null);\n    return {};\n  }\n\n  function css(props, value) {\n    const window = getWindow();\n    let i;\n\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        // .css('width')\n        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n      } else {\n        // .css({ width: '100px' })\n        for (i = 0; i < this.length; i += 1) {\n          for (const prop in props) {\n            this[i].style[prop] = props[prop];\n          }\n        }\n\n        return this;\n      }\n    }\n\n    if (arguments.length === 2 && typeof props === 'string') {\n      // .css('width', '100px')\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n\n      return this;\n    }\n\n    return this;\n  }\n\n  function each(callback) {\n    if (!callback) return this;\n    this.forEach((el, index) => {\n      callback.apply(el, [el, index]);\n    });\n    return this;\n  }\n\n  function filter(callback) {\n    const result = arrayFilter(this, callback);\n    return $(result);\n  }\n\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : null;\n    }\n\n    for (let i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n\n    return this;\n  }\n\n  function text(text) {\n    if (typeof text === 'undefined') {\n      return this[0] ? this[0].textContent.trim() : null;\n    }\n\n    for (let i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n\n    return this;\n  }\n\n  function is(selector) {\n    const window = getWindow();\n    const document = getDocument();\n    const el = this[0];\n    let compareWith;\n    let i;\n    if (!el || typeof selector === 'undefined') return false;\n\n    if (typeof selector === 'string') {\n      if (el.matches) return el.matches(selector);\n      if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n      if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n      compareWith = $(selector);\n\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) return true;\n      }\n\n      return false;\n    }\n\n    if (selector === document) {\n      return el === document;\n    }\n\n    if (selector === window) {\n      return el === window;\n    }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  function index() {\n    let child = this[0];\n    let i;\n\n    if (child) {\n      i = 0; // eslint-disable-next-line\n\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) i += 1;\n      }\n\n      return i;\n    }\n\n    return undefined;\n  }\n\n  function eq(index) {\n    if (typeof index === 'undefined') return this;\n    const length = this.length;\n\n    if (index > length - 1) {\n      return $([]);\n    }\n\n    if (index < 0) {\n      const returnIndex = length + index;\n      if (returnIndex < 0) return $([]);\n      return $([this[returnIndex]]);\n    }\n\n    return $([this[index]]);\n  }\n\n  function append(...els) {\n    let newChild;\n    const document = getDocument();\n\n    for (let k = 0; k < els.length; k += 1) {\n      newChild = els[k];\n\n      for (let i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          const tempDiv = document.createElement('div');\n          tempDiv.innerHTML = newChild;\n\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (let j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function prepend(newChild) {\n    const document = getDocument();\n    let i;\n    let j;\n\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n\n    return this;\n  }\n\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return $([this[0].nextElementSibling]);\n        }\n\n        return $([]);\n      }\n\n      if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n      return $([]);\n    }\n\n    return $([]);\n  }\n\n  function nextAll(selector) {\n    const nextEls = [];\n    let el = this[0];\n    if (!el) return $([]);\n\n    while (el.nextElementSibling) {\n      const next = el.nextElementSibling; // eslint-disable-line\n\n      if (selector) {\n        if ($(next).is(selector)) nextEls.push(next);\n      } else nextEls.push(next);\n\n      el = next;\n    }\n\n    return $(nextEls);\n  }\n\n  function prev(selector) {\n    if (this.length > 0) {\n      const el = this[0];\n\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return $([el.previousElementSibling]);\n        }\n\n        return $([]);\n      }\n\n      if (el.previousElementSibling) return $([el.previousElementSibling]);\n      return $([]);\n    }\n\n    return $([]);\n  }\n\n  function prevAll(selector) {\n    const prevEls = [];\n    let el = this[0];\n    if (!el) return $([]);\n\n    while (el.previousElementSibling) {\n      const prev = el.previousElementSibling; // eslint-disable-line\n\n      if (selector) {\n        if ($(prev).is(selector)) prevEls.push(prev);\n      } else prevEls.push(prev);\n\n      el = prev;\n    }\n\n    return $(prevEls);\n  }\n\n  function parent(selector) {\n    const parents = []; // eslint-disable-line\n\n    for (let i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n\n    return $(parents);\n  }\n\n  function parents(selector) {\n    const parents = []; // eslint-disable-line\n\n    for (let i = 0; i < this.length; i += 1) {\n      let parent = this[i].parentNode; // eslint-disable-line\n\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) parents.push(parent);\n        } else {\n          parents.push(parent);\n        }\n\n        parent = parent.parentNode;\n      }\n    }\n\n    return $(parents);\n  }\n\n  function closest(selector) {\n    let closest = this; // eslint-disable-line\n\n    if (typeof selector === 'undefined') {\n      return $([]);\n    }\n\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n\n    return closest;\n  }\n\n  function find(selector) {\n    const foundElements = [];\n\n    for (let i = 0; i < this.length; i += 1) {\n      const found = this[i].querySelectorAll(selector);\n\n      for (let j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n\n    return $(foundElements);\n  }\n\n  function children(selector) {\n    const children = []; // eslint-disable-line\n\n    for (let i = 0; i < this.length; i += 1) {\n      const childNodes = this[i].children;\n\n      for (let j = 0; j < childNodes.length; j += 1) {\n        if (!selector || $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n\n    return $(children);\n  }\n\n  function remove() {\n    for (let i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n    }\n\n    return this;\n  }\n\n  const Methods = {\n    addClass,\n    removeClass,\n    hasClass,\n    toggleClass,\n    attr,\n    removeAttr,\n    transform,\n    transition: transition$1,\n    on,\n    off,\n    trigger,\n    transitionEnd: transitionEnd$1,\n    outerWidth,\n    outerHeight,\n    styles,\n    offset,\n    css,\n    each,\n    html,\n    text,\n    is,\n    index,\n    eq,\n    append,\n    prepend,\n    next,\n    nextAll,\n    prev,\n    prevAll,\n    parent,\n    parents,\n    closest,\n    find,\n    children,\n    filter,\n    remove\n  };\n  Object.keys(Methods).forEach(methodName => {\n    Object.defineProperty($.fn, methodName, {\n      value: Methods[methodName],\n      writable: true\n    });\n  });\n\n  function deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach(key => {\n      try {\n        object[key] = null;\n      } catch (e) {// no getter for object\n      }\n\n      try {\n        delete object[key];\n      } catch (e) {// something got wrong\n      }\n    });\n  }\n\n  function nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  }\n\n  function now() {\n    return Date.now();\n  }\n\n  function getComputedStyle$1(el) {\n    const window = getWindow();\n    let style;\n\n    if (window.getComputedStyle) {\n      style = window.getComputedStyle(el, null);\n    }\n\n    if (!style && el.currentStyle) {\n      style = el.currentStyle;\n    }\n\n    if (!style) {\n      style = el.style;\n    }\n\n    return style;\n  }\n\n  function getTranslate(el, axis = 'x') {\n    const window = getWindow();\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n    const curStyle = getComputedStyle$1(el);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      } // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n\n\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n        else curTransform = parseFloat(matrix[4]);\n    }\n\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n        else curTransform = parseFloat(matrix[5]);\n    }\n\n    return curTransform || 0;\n  }\n\n  function isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n  }\n\n  function isNode(node) {\n    // eslint-disable-next-line\n    if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n      return node instanceof HTMLElement;\n    }\n\n    return node && (node.nodeType === 1 || node.nodeType === 11);\n  }\n\n  function extend(...args) {\n    const to = Object(args[0]);\n    const noExtend = ['__proto__', 'constructor', 'prototype'];\n\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n\n      if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n        const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n          if (desc !== undefined && desc.enumerable) {\n            if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n              if (nextSource[nextKey].__swiper__) {\n                to[nextKey] = nextSource[nextKey];\n              } else {\n                extend(to[nextKey], nextSource[nextKey]);\n              }\n            } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n\n              if (nextSource[nextKey].__swiper__) {\n                to[nextKey] = nextSource[nextKey];\n              } else {\n                extend(to[nextKey], nextSource[nextKey]);\n              }\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n\n    return to;\n  }\n\n  function setCSSProperty(el, varName, varValue) {\n    el.style.setProperty(varName, varValue);\n  }\n\n  function animateCSSModeScroll({\n    swiper,\n    targetPosition,\n    side\n  }) {\n    const window = getWindow();\n    const startPosition = -swiper.translate;\n    let startTime = null;\n    let time;\n    const duration = swiper.params.speed;\n    swiper.wrapperEl.style.scrollSnapType = 'none';\n    window.cancelAnimationFrame(swiper.cssModeFrameID);\n    const dir = targetPosition > startPosition ? 'next' : 'prev';\n\n    const isOutOfBound = (current, target) => {\n      return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n    };\n\n    const animate = () => {\n      time = new Date().getTime();\n\n      if (startTime === null) {\n        startTime = time;\n      }\n\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n      let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n\n      if (isOutOfBound(currentPosition, targetPosition)) {\n        currentPosition = targetPosition;\n      }\n\n      swiper.wrapperEl.scrollTo({\n        [side]: currentPosition\n      });\n\n      if (isOutOfBound(currentPosition, targetPosition)) {\n        swiper.wrapperEl.style.overflow = 'hidden';\n        swiper.wrapperEl.style.scrollSnapType = '';\n        setTimeout(() => {\n          swiper.wrapperEl.style.overflow = '';\n          swiper.wrapperEl.scrollTo({\n            [side]: currentPosition\n          });\n        });\n        window.cancelAnimationFrame(swiper.cssModeFrameID);\n        return;\n      }\n\n      swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n    };\n\n    animate();\n  }\n\n  let support;\n\n  function calcSupport() {\n    const window = getWindow();\n    const document = getDocument();\n    return {\n      smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n      touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\n      passiveListener: function checkPassiveListener() {\n        let supportsPassive = false;\n\n        try {\n          const opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get() {\n              supportsPassive = true;\n            }\n\n          });\n          window.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {// No support\n        }\n\n        return supportsPassive;\n      }(),\n      gestures: function checkGestures() {\n        return 'ongesturestart' in window;\n      }()\n    };\n  }\n\n  function getSupport() {\n    if (!support) {\n      support = calcSupport();\n    }\n\n    return support;\n  }\n\n  let deviceCached;\n\n  function calcDevice({\n    userAgent\n  } = {}) {\n    const support = getSupport();\n    const window = getWindow();\n    const platform = window.navigator.platform;\n    const ua = userAgent || window.navigator.userAgent;\n    const device = {\n      ios: false,\n      android: false\n    };\n    const screenWidth = window.screen.width;\n    const screenHeight = window.screen.height;\n    const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n    let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n    const windows = platform === 'Win32';\n    let macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n    const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n    if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n      ipad = ua.match(/(Version)\\/([\\d.]+)/);\n      if (!ipad) ipad = [0, 1, '13_0_0'];\n      macos = false;\n    } // Android\n\n\n    if (android && !windows) {\n      device.os = 'android';\n      device.android = true;\n    }\n\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    } // Export object\n\n\n    return device;\n  }\n\n  function getDevice(overrides = {}) {\n    if (!deviceCached) {\n      deviceCached = calcDevice(overrides);\n    }\n\n    return deviceCached;\n  }\n\n  let browser;\n\n  function calcBrowser() {\n    const window = getWindow();\n\n    function isSafari() {\n      const ua = window.navigator.userAgent.toLowerCase();\n      return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n    }\n\n    return {\n      isSafari: isSafari(),\n      isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n    };\n  }\n\n  function getBrowser() {\n    if (!browser) {\n      browser = calcBrowser();\n    }\n\n    return browser;\n  }\n\n  function Resize({\n    swiper,\n    on,\n    emit\n  }) {\n    const window = getWindow();\n    let observer = null;\n\n    const resizeHandler = () => {\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\n      emit('beforeResize');\n      emit('resize');\n    };\n\n    const createObserver = () => {\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\n      observer = new ResizeObserver(entries => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n      observer.observe(swiper.el);\n    };\n\n    const removeObserver = () => {\n      if (observer && observer.unobserve && swiper.el) {\n        observer.unobserve(swiper.el);\n        observer = null;\n      }\n    };\n\n    const orientationChangeHandler = () => {\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\n      emit('orientationchange');\n    };\n\n    on('init', () => {\n      if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n        createObserver();\n        return;\n      }\n\n      window.addEventListener('resize', resizeHandler);\n      window.addEventListener('orientationchange', orientationChangeHandler);\n    });\n    on('destroy', () => {\n      removeObserver();\n      window.removeEventListener('resize', resizeHandler);\n      window.removeEventListener('orientationchange', orientationChangeHandler);\n    });\n  }\n\n  function Observer({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    const observers = [];\n    const window = getWindow();\n\n    const attach = (target, options = {}) => {\n      const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n      const observer = new ObserverFunc(mutations => {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          emit('observerUpdate', mutations[0]);\n          return;\n        }\n\n        const observerUpdate = function observerUpdate() {\n          emit('observerUpdate', mutations[0]);\n        };\n\n        if (window.requestAnimationFrame) {\n          window.requestAnimationFrame(observerUpdate);\n        } else {\n          window.setTimeout(observerUpdate, 0);\n        }\n      });\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n      });\n      observers.push(observer);\n    };\n\n    const init = () => {\n      if (!swiper.params.observer) return;\n\n      if (swiper.params.observeParents) {\n        const containerParents = swiper.$el.parents();\n\n        for (let i = 0; i < containerParents.length; i += 1) {\n          attach(containerParents[i]);\n        }\n      } // Observe container\n\n\n      attach(swiper.$el[0], {\n        childList: swiper.params.observeSlideChildren\n      }); // Observe wrapper\n\n      attach(swiper.$wrapperEl[0], {\n        attributes: false\n      });\n    };\n\n    const destroy = () => {\n      observers.forEach(observer => {\n        observer.disconnect();\n      });\n      observers.splice(0, observers.length);\n    };\n\n    extendParams({\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false\n    });\n    on('init', init);\n    on('destroy', destroy);\n  }\n  /* eslint-disable no-underscore-dangle */\n\n\n  var eventsEmitter = {\n    on(events, handler, priority) {\n      const self = this;\n      if (typeof handler !== 'function') return self;\n      const method = priority ? 'unshift' : 'push';\n      events.split(' ').forEach(event => {\n        if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n        self.eventsListeners[event][method](handler);\n      });\n      return self;\n    },\n\n    once(events, handler, priority) {\n      const self = this;\n      if (typeof handler !== 'function') return self;\n\n      function onceHandler(...args) {\n        self.off(events, onceHandler);\n\n        if (onceHandler.__emitterProxy) {\n          delete onceHandler.__emitterProxy;\n        }\n\n        handler.apply(self, args);\n      }\n\n      onceHandler.__emitterProxy = handler;\n      return self.on(events, onceHandler, priority);\n    },\n\n    onAny(handler, priority) {\n      const self = this;\n      if (typeof handler !== 'function') return self;\n      const method = priority ? 'unshift' : 'push';\n\n      if (self.eventsAnyListeners.indexOf(handler) < 0) {\n        self.eventsAnyListeners[method](handler);\n      }\n\n      return self;\n    },\n\n    offAny(handler) {\n      const self = this;\n      if (!self.eventsAnyListeners) return self;\n      const index = self.eventsAnyListeners.indexOf(handler);\n\n      if (index >= 0) {\n        self.eventsAnyListeners.splice(index, 1);\n      }\n\n      return self;\n    },\n\n    off(events, handler) {\n      const self = this;\n      if (!self.eventsListeners) return self;\n      events.split(' ').forEach(event => {\n        if (typeof handler === 'undefined') {\n          self.eventsListeners[event] = [];\n        } else if (self.eventsListeners[event]) {\n          self.eventsListeners[event].forEach((eventHandler, index) => {\n            if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n              self.eventsListeners[event].splice(index, 1);\n            }\n          });\n        }\n      });\n      return self;\n    },\n\n    emit(...args) {\n      const self = this;\n      if (!self.eventsListeners) return self;\n      let events;\n      let data;\n      let context;\n\n      if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n        events = args[0];\n        data = args.slice(1, args.length);\n        context = self;\n      } else {\n        events = args[0].events;\n        data = args[0].data;\n        context = args[0].context || self;\n      }\n\n      data.unshift(context);\n      const eventsArray = Array.isArray(events) ? events : events.split(' ');\n      eventsArray.forEach(event => {\n        if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n          self.eventsAnyListeners.forEach(eventHandler => {\n            eventHandler.apply(context, [event, ...data]);\n          });\n        }\n\n        if (self.eventsListeners && self.eventsListeners[event]) {\n          self.eventsListeners[event].forEach(eventHandler => {\n            eventHandler.apply(context, data);\n          });\n        }\n      });\n      return self;\n    }\n\n  };\n\n  function updateSize() {\n    const swiper = this;\n    let width;\n    let height;\n    const $el = swiper.$el;\n\n    if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n\n    if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n\n    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n      return;\n    } // Subtract paddings\n\n\n    width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\n    height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\n    if (Number.isNaN(width)) width = 0;\n    if (Number.isNaN(height)) height = 0;\n    Object.assign(swiper, {\n      width,\n      height,\n      size: swiper.isHorizontal() ? width : height\n    });\n  }\n\n  function updateSlides() {\n    const swiper = this;\n\n    function getDirectionLabel(property) {\n      if (swiper.isHorizontal()) {\n        return property;\n      } // prettier-ignore\n\n\n      return {\n        'width': 'height',\n        'margin-top': 'margin-left',\n        'margin-bottom ': 'margin-right',\n        'margin-left': 'margin-top',\n        'margin-right': 'margin-bottom',\n        'padding-left': 'padding-top',\n        'padding-right': 'padding-bottom',\n        'marginRight': 'marginBottom'\n      }[property];\n    }\n\n    function getDirectionPropertyValue(node, label) {\n      return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n    }\n\n    const params = swiper.params;\n    const {\n      $wrapperEl,\n      size: swiperSize,\n      rtlTranslate: rtl,\n      wrongRTL\n    } = swiper;\n    const isVirtual = swiper.virtual && params.virtual.enabled;\n    const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n    const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    let snapGrid = [];\n    const slidesGrid = [];\n    const slidesSizesGrid = [];\n    let offsetBefore = params.slidesOffsetBefore;\n\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    let offsetAfter = params.slidesOffsetAfter;\n\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    const previousSnapGridLength = swiper.snapGrid.length;\n    const previousSlidesGridLength = swiper.slidesGrid.length;\n    let spaceBetween = params.spaceBetween;\n    let slidePosition = -offsetBefore;\n    let prevSlideSize = 0;\n    let index = 0;\n\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween; // reset margins\n\n    if (rtl) slides.css({\n      marginLeft: '',\n      marginBottom: '',\n      marginTop: ''\n    });else slides.css({\n      marginRight: '',\n      marginBottom: '',\n      marginTop: ''\n    }); // reset cssMode offsets\n\n    if (params.centeredSlides && params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', '');\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', '');\n    }\n\n    const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n\n    if (gridEnabled) {\n      swiper.grid.initSlides(slidesLength);\n    } // Calc slides\n\n\n    let slideSize;\n    const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n      return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n    }).length > 0;\n\n    for (let i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      const slide = slides.eq(i);\n\n      if (gridEnabled) {\n        swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n      }\n\n      if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        if (shouldResetSlideSize) {\n          slides[i].style[getDirectionLabel('width')] = ``;\n        }\n\n        const slideStyles = getComputedStyle(slide[0]);\n        const currentTransform = slide[0].style.transform;\n        const currentWebKitTransform = slide[0].style.webkitTransform;\n\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          const width = getDirectionPropertyValue(slideStyles, 'width');\n          const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n          const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n          const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n          const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            const {\n              clientWidth,\n              offsetWidth\n            } = slide[0];\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n          }\n        }\n\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n      } else {\n        slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n        if (slides[i]) {\n          slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n        }\n      }\n\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n\n      slidesSizesGrid.push(slideSize);\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n        if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n        if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n      prevSlideSize = slideSize;\n      index += 1;\n    }\n\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n\n    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({\n        width: `${swiper.virtualSize + params.spaceBetween}px`\n      });\n    }\n\n    if (params.setWrapperSize) {\n      $wrapperEl.css({\n        [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`\n      });\n    }\n\n    if (gridEnabled) {\n      swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n    } // Remove last grid elements depending on width\n\n\n    if (!params.centeredSlides) {\n      const newSlidesGrid = [];\n\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n\n        if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem);\n        }\n      }\n\n      snapGrid = newSlidesGrid;\n\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n\n    if (snapGrid.length === 0) snapGrid = [0];\n\n    if (params.spaceBetween !== 0) {\n      const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n      slides.filter((_, slideIndex) => {\n        if (!params.cssMode) return true;\n\n        if (slideIndex === slides.length - 1) {\n          return false;\n        }\n\n        return true;\n      }).css({\n        [key]: `${spaceBetween}px`\n      });\n    }\n\n    if (params.centeredSlides && params.centeredSlidesBounds) {\n      let allSlidesSize = 0;\n      slidesSizesGrid.forEach(slideSizeValue => {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      const maxSnap = allSlidesSize - swiperSize;\n      snapGrid = snapGrid.map(snap => {\n        if (snap < 0) return -offsetBefore;\n        if (snap > maxSnap) return maxSnap + offsetAfter;\n        return snap;\n      });\n    }\n\n    if (params.centerInsufficientSlides) {\n      let allSlidesSize = 0;\n      slidesSizesGrid.forEach(slideSizeValue => {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n\n      if (allSlidesSize < swiperSize) {\n        const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n        snapGrid.forEach((snap, snapIndex) => {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach((snap, snapIndex) => {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    Object.assign(swiper, {\n      slides,\n      snapGrid,\n      slidesGrid,\n      slidesSizesGrid\n    });\n\n    if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n      const addToSnapGrid = -swiper.snapGrid[0];\n      const addToSlidesGrid = -swiper.slidesGrid[0];\n      swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n      swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n    }\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) swiper.checkOverflow();\n      swiper.emit('snapGridLengthChange');\n    }\n\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight(speed) {\n    const swiper = this;\n    const activeSlides = [];\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let newHeight = 0;\n    let i;\n\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n\n    const getSlideByIndex = index => {\n      if (isVirtual) {\n        return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\n      }\n\n      return swiper.slides.eq(index)[0];\n    }; // Find slides currently in view\n\n\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      if (swiper.params.centeredSlides) {\n        swiper.visibleSlides.each(slide => {\n          activeSlides.push(slide);\n        });\n      } else {\n        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n          const index = swiper.activeIndex + i;\n          if (index > swiper.slides.length && !isVirtual) break;\n          activeSlides.push(getSlideByIndex(index));\n        }\n      }\n    } else {\n      activeSlides.push(getSlideByIndex(swiper.activeIndex));\n    } // Find new height from highest slide in view\n\n\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        const height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    } // Update Height\n\n\n    if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n  }\n\n  function updateSlidesOffset() {\n    const swiper = this;\n    const slides = swiper.slides;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress(translate = this && this.translate || 0) {\n    const swiper = this;\n    const params = swiper.params;\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    if (slides.length === 0) return;\n    if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n    let offsetCenter = -translate;\n    if (rtl) offsetCenter = translate; // Visible Slides\n\n    slides.removeClass(params.slideVisibleClass);\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const slide = slides[i];\n      let slideOffset = slide.swiperSlideOffset;\n\n      if (params.cssMode && params.centeredSlides) {\n        slideOffset -= slides[0].swiperSlideOffset;\n      }\n\n      const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n      const slideBefore = -(offsetCenter - slideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress(translate) {\n    const swiper = this;\n\n    if (typeof translate === 'undefined') {\n      const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n      translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n    }\n\n    const params = swiper.params;\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    let {\n      progress,\n      isBeginning,\n      isEnd\n    } = swiper;\n    const wasBeginning = isBeginning;\n    const wasEnd = isEnd;\n\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / translatesDiff;\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n\n    Object.assign(swiper, {\n      progress,\n      isBeginning,\n      isEnd\n    });\n    if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n\n    if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses() {\n    const swiper = this;\n    const {\n      slides,\n      params,\n      $wrapperEl,\n      activeIndex,\n      realIndex\n    } = swiper;\n    const isVirtual = swiper.virtual && params.virtual.enabled;\n    slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n    let activeSlide;\n\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    } // Active classes\n\n\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n      }\n    } // Next Slide\n\n\n    let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    } // Prev Slide\n\n\n    let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n      }\n\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n      }\n    }\n\n    swiper.emitSlidesClasses();\n  }\n\n  function updateActiveIndex(newActiveIndex) {\n    const swiper = this;\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    const {\n      slidesGrid,\n      snapGrid,\n      params,\n      activeIndex: previousIndex,\n      realIndex: previousRealIndex,\n      snapIndex: previousSnapIndex\n    } = swiper;\n    let activeIndex = newActiveIndex;\n    let snapIndex;\n\n    if (typeof activeIndex === 'undefined') {\n      for (let i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      } // Normalize slideIndex\n\n\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n      }\n    }\n\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n      snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n    }\n\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n\n      return;\n    } // Get real index\n\n\n    const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n    Object.assign(swiper, {\n      snapIndex,\n      realIndex,\n      previousIndex,\n      activeIndex\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n\n    if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n      swiper.emit('slideChange');\n    }\n  }\n\n  function updateClickedSlide(e) {\n    const swiper = this;\n    const params = swiper.params;\n    const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n    let slideFound = false;\n    let slideIndex;\n\n    if (slide) {\n      for (let i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) {\n          slideFound = true;\n          slideIndex = i;\n          break;\n        }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = slideIndex;\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize,\n    updateSlides,\n    updateAutoHeight,\n    updateSlidesOffset,\n    updateSlidesProgress,\n    updateProgress,\n    updateSlidesClasses,\n    updateActiveIndex,\n    updateClickedSlide\n  };\n\n  function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n    const swiper = this;\n    const {\n      params,\n      rtlTranslate: rtl,\n      translate,\n      $wrapperEl\n    } = swiper;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    if (params.cssMode) {\n      return translate;\n    }\n\n    let currentTranslate = getTranslate($wrapperEl[0], axis);\n    if (rtl) currentTranslate = -currentTranslate;\n    return currentTranslate || 0;\n  }\n\n  function setTranslate(translate, byController) {\n    const swiper = this;\n    const {\n      rtlTranslate: rtl,\n      params,\n      $wrapperEl,\n      wrapperEl,\n      progress\n    } = swiper;\n    let x = 0;\n    let y = 0;\n    const z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (params.cssMode) {\n      wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n    } else if (!params.virtualTranslate) {\n      $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    }\n\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n    let newProgress;\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n    }\n\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate() {\n    return -this.snapGrid[0];\n  }\n\n  function maxTranslate() {\n    return -this.snapGrid[this.snapGrid.length - 1];\n  }\n\n  function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n    const swiper = this;\n    const {\n      params,\n      wrapperEl\n    } = swiper;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    const minTranslate = swiper.minTranslate();\n    const maxTranslate = swiper.maxTranslate();\n    let newTranslate;\n    if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\n\n    swiper.updateProgress(newTranslate);\n\n    if (params.cssMode) {\n      const isH = swiper.isHorizontal();\n\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      } else {\n        if (!swiper.support.smoothScroll) {\n          animateCSSModeScroll({\n            swiper,\n            targetPosition: -newTranslate,\n            side: isH ? 'left' : 'top'\n          });\n          return true;\n        }\n\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth'\n        });\n      }\n\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(newTranslate);\n\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionEnd');\n      }\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(newTranslate);\n\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionStart');\n      }\n\n      if (!swiper.animating) {\n        swiper.animating = true;\n\n        if (!swiper.onTranslateToWrapperTransitionEnd) {\n          swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.onTranslateToWrapperTransitionEnd = null;\n            delete swiper.onTranslateToWrapperTransitionEnd;\n\n            if (runCallbacks) {\n              swiper.emit('transitionEnd');\n            }\n          };\n        }\n\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  var translate = {\n    getTranslate: getSwiperTranslate,\n    setTranslate,\n    minTranslate,\n    maxTranslate,\n    translateTo\n  };\n\n  function setTransition(duration, byController) {\n    const swiper = this;\n\n    if (!swiper.params.cssMode) {\n      swiper.$wrapperEl.transition(duration);\n    }\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step\n  }) {\n    const {\n      activeIndex,\n      previousIndex\n    } = swiper;\n    let dir = direction;\n\n    if (!dir) {\n      if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n    }\n\n    swiper.emit(`transition${step}`);\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit(`slideResetTransition${step}`);\n        return;\n      }\n\n      swiper.emit(`slideChangeTransition${step}`);\n\n      if (dir === 'next') {\n        swiper.emit(`slideNextTransition${step}`);\n      } else {\n        swiper.emit(`slidePrevTransition${step}`);\n      }\n    }\n  }\n\n  function transitionStart(runCallbacks = true, direction) {\n    const swiper = this;\n    const {\n      params\n    } = swiper;\n    if (params.cssMode) return;\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    transitionEmit({\n      swiper,\n      runCallbacks,\n      direction,\n      step: 'Start'\n    });\n  }\n\n  function transitionEnd(runCallbacks = true, direction) {\n    const swiper = this;\n    const {\n      params\n    } = swiper;\n    swiper.animating = false;\n    if (params.cssMode) return;\n    swiper.setTransition(0);\n    transitionEmit({\n      swiper,\n      runCallbacks,\n      direction,\n      step: 'End'\n    });\n  }\n\n  var transition = {\n    setTransition,\n    transitionStart,\n    transitionEnd\n  };\n\n  function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n    if (typeof index !== 'number' && typeof index !== 'string') {\n      throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`);\n    }\n\n    if (typeof index === 'string') {\n      /**\n       * The `index` argument converted from `string` to `number`.\n       * @type {number}\n       */\n      const indexAsNumber = parseInt(index, 10);\n      /**\n       * Determines whether the `index` argument is a valid `number`\n       * after being converted from the `string` type.\n       * @type {boolean}\n       */\n\n      const isValidNumber = isFinite(indexAsNumber);\n\n      if (!isValidNumber) {\n        throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\n      } // Knowing that the converted `index` is a valid number,\n      // we can update the original argument's value.\n\n\n      index = indexAsNumber;\n    }\n\n    const swiper = this;\n    let slideIndex = index;\n    if (slideIndex < 0) slideIndex = 0;\n    const {\n      params,\n      snapGrid,\n      slidesGrid,\n      previousIndex,\n      activeIndex,\n      rtlTranslate: rtl,\n      wrapperEl,\n      enabled\n    } = swiper;\n\n    if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n      return false;\n    }\n\n    const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n    let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    const translate = -snapGrid[snapIndex]; // Update progress\n\n    swiper.updateProgress(translate); // Normalize slideIndex\n\n    if (params.normalizeSlideIndex) {\n      for (let i = 0; i < slidesGrid.length; i += 1) {\n        const normalizedTranslate = -Math.floor(translate * 100);\n        const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n        const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n            slideIndex = i;\n          } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n            slideIndex = i + 1;\n          }\n        } else if (normalizedTranslate >= normalizedGrid) {\n          slideIndex = i;\n        }\n      }\n    } // Directions locks\n\n\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) return false;\n      }\n    }\n\n    let direction;\n    if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n      swiper.updateActiveIndex(slideIndex); // Update Height\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n\n      swiper.updateSlidesClasses();\n\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n\n      return false;\n    }\n\n    if (params.cssMode) {\n      const isH = swiper.isHorizontal();\n      const t = rtl ? translate : -translate;\n\n      if (speed === 0) {\n        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n        if (isVirtual) {\n          swiper.wrapperEl.style.scrollSnapType = 'none';\n          swiper._immediateVirtual = true;\n        }\n\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n\n        if (isVirtual) {\n          requestAnimationFrame(() => {\n            swiper.wrapperEl.style.scrollSnapType = '';\n            swiper._swiperImmediateVirtual = false;\n          });\n        }\n      } else {\n        if (!swiper.support.smoothScroll) {\n          animateCSSModeScroll({\n            swiper,\n            targetPosition: t,\n            side: isH ? 'left' : 'top'\n          });\n          return true;\n        }\n\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: t,\n          behavior: 'smooth'\n        });\n      }\n\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n\n      if (!swiper.animating) {\n        swiper.animating = true;\n\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n    const swiper = this;\n    let newIndex = index;\n\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n  /* eslint no-unused-vars: \"off\" */\n\n\n  function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n    const swiper = this;\n    const {\n      animating,\n      enabled,\n      params\n    } = swiper;\n    if (!enabled) return swiper;\n    let perGroup = params.slidesPerGroup;\n\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n    }\n\n    const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n\n    if (params.loop) {\n      if (animating && params.loopPreventsSlide) return false;\n      swiper.loopFix(); // eslint-disable-next-line\n\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n\n    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n  }\n  /* eslint no-unused-vars: \"off\" */\n\n\n  function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n    const swiper = this;\n    const {\n      params,\n      animating,\n      snapGrid,\n      slidesGrid,\n      rtlTranslate,\n      enabled\n    } = swiper;\n    if (!enabled) return swiper;\n\n    if (params.loop) {\n      if (animating && params.loopPreventsSlide) return false;\n      swiper.loopFix(); // eslint-disable-next-line\n\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n\n    const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n    function normalize(val) {\n      if (val < 0) return -Math.floor(Math.abs(val));\n      return Math.floor(val);\n    }\n\n    const normalizedTranslate = normalize(translate);\n    const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n    let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n    if (typeof prevSnap === 'undefined' && params.cssMode) {\n      let prevSnapIndex;\n      snapGrid.forEach((snap, snapIndex) => {\n        if (normalizedTranslate >= snap) {\n          // prevSnap = snap;\n          prevSnapIndex = snapIndex;\n        }\n      });\n\n      if (typeof prevSnapIndex !== 'undefined') {\n        prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n      }\n    }\n\n    let prevIndex = 0;\n\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n\n      if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n        prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n        prevIndex = Math.max(prevIndex, 0);\n      }\n    }\n\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n  /* eslint no-unused-vars: \"off\" */\n\n\n  function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n    const swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n  /* eslint no-unused-vars: \"off\" */\n\n\n  function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n    const swiper = this;\n    let index = swiper.activeIndex;\n    const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n    const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    if (translate >= swiper.snapGrid[snapIndex]) {\n      // The current translate is on or after the current snap index, so the choice\n      // is between the current index and the one after it.\n      const currentSnap = swiper.snapGrid[snapIndex];\n      const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n        index += swiper.params.slidesPerGroup;\n      }\n    } else {\n      // The current translate is before the current snap index, so the choice\n      // is between the current index and the one before it.\n      const prevSnap = swiper.snapGrid[snapIndex - 1];\n      const currentSnap = swiper.snapGrid[snapIndex];\n\n      if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n        index -= swiper.params.slidesPerGroup;\n      }\n    }\n\n    index = Math.max(index, 0);\n    index = Math.min(index, swiper.slidesGrid.length - 1);\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide() {\n    const swiper = this;\n    const {\n      params,\n      $wrapperEl\n    } = swiper;\n    const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    let slideToIndex = swiper.clickedIndex;\n    let realIndex;\n\n    if (params.loop) {\n      if (swiper.animating) return;\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n\n      if (params.centeredSlides) {\n        if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n          nextTick(() => {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo,\n    slideToLoop,\n    slideNext,\n    slidePrev,\n    slideReset,\n    slideToClosest,\n    slideToClickedSlide\n  };\n\n  function loopCreate() {\n    const swiper = this;\n    const document = getDocument();\n    const {\n      params,\n      $wrapperEl\n    } = swiper; // Remove duplicated slides\n\n    $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n    let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n    if (params.loopFillGroupWithBlank) {\n      const blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (let i = 0; i < blankSlidesNum; i += 1) {\n          const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n          $wrapperEl.append(blankNode);\n        }\n\n        slides = $wrapperEl.children(`.${params.slideClass}`);\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n    swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n    swiper.loopedSlides += params.loopAdditionalSlides;\n\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    const prependSlides = [];\n    const appendSlides = [];\n    slides.each((el, index) => {\n      const slide = $(el);\n\n      if (index < swiper.loopedSlides) {\n        appendSlides.push(el);\n      }\n\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\n        prependSlides.push(el);\n      }\n\n      slide.attr('data-swiper-slide-index', index);\n    });\n\n    for (let i = 0; i < appendSlides.length; i += 1) {\n      $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n\n    for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n      $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix() {\n    const swiper = this;\n    swiper.emit('beforeLoopFix');\n    const {\n      activeIndex,\n      slides,\n      loopedSlides,\n      allowSlidePrev,\n      allowSlideNext,\n      snapGrid,\n      rtlTranslate: rtl\n    } = swiper;\n    let newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n    const snapTranslate = -snapGrid[activeIndex];\n    const diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n    if (activeIndex < loopedSlides) {\n      newIndex = slides.length - loopedSlides * 3 + activeIndex;\n      newIndex += loopedSlides;\n      const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if (activeIndex >= slides.length - loopedSlides) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n  }\n\n  function loopDestroy() {\n    const swiper = this;\n    const {\n      $wrapperEl,\n      params,\n      slides\n    } = swiper;\n    $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate,\n    loopFix,\n    loopDestroy\n  };\n\n  function setGrabCursor(moving) {\n    const swiper = this;\n    if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n    const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor() {\n    const swiper = this;\n\n    if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n      return;\n    }\n\n    swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor,\n    unsetGrabCursor\n  };\n\n  function closestElement(selector, base = this) {\n    function __closestFrom(el) {\n      if (!el || el === getDocument() || el === getWindow()) return null;\n      if (el.assignedSlot) el = el.assignedSlot;\n      const found = el.closest(selector);\n      return found || __closestFrom(el.getRootNode().host);\n    }\n\n    return __closestFrom(base);\n  }\n\n  function onTouchStart(event) {\n    const swiper = this;\n    const document = getDocument();\n    const window = getWindow();\n    const data = swiper.touchEventsData;\n    const {\n      params,\n      touches,\n      enabled\n    } = swiper;\n    if (!enabled) return;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n\n    if (!swiper.animating && params.cssMode && params.loop) {\n      swiper.loopFix();\n    }\n\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    let $targetEl = $(e.target);\n\n    if (params.touchEventsTarget === 'wrapper') {\n      if (!$targetEl.closest(swiper.wrapperEl).length) return;\n    }\n\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n    if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n\n    const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n\n    if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {\n      $targetEl = $(event.path[0]);\n    }\n\n    const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n    const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n\n    if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, e.target) : $targetEl.closest(noSwipingSelector)[0])) {\n      swiper.allowClick = true;\n      return;\n    }\n\n    if (params.swipeHandler) {\n      if (!$targetEl.closest(params.swipeHandler)[0]) return;\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    const startX = touches.currentX;\n    const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n    const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n      if (edgeSwipeDetection === 'prevent') {\n        event.preventDefault();\n      } else {\n        return;\n      }\n    }\n\n    Object.assign(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined\n    });\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) data.allowThresholdMove = false;\n\n    if (e.type !== 'touchstart') {\n      let preventDefault = true;\n      if ($targetEl.is(data.focusableElements)) preventDefault = false;\n\n      if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {\n        document.activeElement.blur();\n      }\n\n      const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n      if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\n        e.preventDefault();\n      }\n    }\n\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove(event) {\n    const document = getDocument();\n    const swiper = this;\n    const data = swiper.touchEventsData;\n    const {\n      params,\n      touches,\n      rtlTranslate: rtl,\n      enabled\n    } = swiper;\n    if (!enabled) return;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent;\n\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n\n      return;\n    }\n\n    if (data.isTouchEvent && e.type !== 'touchmove') return;\n    const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n    const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n    const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n\n      if (data.isTouched) {\n        Object.assign(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY\n        });\n        data.touchStartTime = now();\n      }\n\n      return;\n    }\n\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n        return;\n      }\n    }\n\n    if (data.isTouchEvent && document.activeElement) {\n      if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n\n    if (e.targetTouches && e.targetTouches.length > 1) return;\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n    const diffX = touches.currentX - touches.startX;\n    const diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n\n    if (typeof data.isScrolling === 'undefined') {\n      let touchAngle;\n\n      if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if (diffX * diffX + diffY * diffY >= 25) {\n          touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n        }\n      }\n    }\n\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n\n    if (!data.startMoving) {\n      return;\n    }\n\n    swiper.allowClick = false;\n\n    if (!params.cssMode && e.cancelable) {\n      e.preventDefault();\n    }\n\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop && !params.cssMode) {\n        swiper.loopFix();\n      }\n\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n\n      data.allowMomentumBounce = false; // Grab Cursor\n\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n\n      swiper.emit('sliderFirstMove', e);\n    }\n\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n    let diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n    diff *= params.touchRatio;\n    if (rtl) diff = -diff;\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n    let disableParentSwiper = true;\n    let resistanceRatio = params.resistanceRatio;\n\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n\n    if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    } // Directions locks\n\n\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n      data.currentTranslate = data.startTranslate;\n    } // Threshold\n\n\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n\n    if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n      swiper.freeMode.onTouchMove();\n    } // Update progress\n\n\n    swiper.updateProgress(data.currentTranslate); // Update translate\n\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd(event) {\n    const swiper = this;\n    const data = swiper.touchEventsData;\n    const {\n      params,\n      touches,\n      rtlTranslate: rtl,\n      slidesGrid,\n      enabled\n    } = swiper;\n    if (!enabled) return;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent;\n\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n\n    data.allowTouchCallbacks = false;\n\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    } // Return Grab Cursor\n\n\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    } // Time diff\n\n\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap click', e);\n\n      if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n        swiper.emit('doubleTap doubleClick', e);\n      }\n    }\n\n    data.lastClickTime = now();\n    nextTick(() => {\n      if (!swiper.destroyed) swiper.allowClick = true;\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    let currentPos;\n\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.cssMode) {\n      return;\n    }\n\n    if (swiper.params.freeMode && params.freeMode.enabled) {\n      swiper.freeMode.onTouchEnd({\n        currentPos\n      });\n      return;\n    } // Find current slide\n\n\n    let stopIndex = 0;\n    let groupSize = swiper.slidesSizesGrid[0];\n\n    for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n      const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n      if (typeof slidesGrid[i + increment] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + increment] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    } // Find current slide size\n\n\n    const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n    const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n      if (!isNavButtonTarget) {\n        if (swiper.swipeDirection === 'next') {\n          swiper.slideTo(stopIndex + increment);\n        }\n\n        if (swiper.swipeDirection === 'prev') {\n          swiper.slideTo(stopIndex);\n        }\n      } else if (e.target === swiper.navigation.nextEl) {\n        swiper.slideTo(stopIndex + increment);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize() {\n    const swiper = this;\n    const {\n      params,\n      el\n    } = swiper;\n    if (el && el.offsetWidth === 0) return; // Breakpoints\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Save locks\n\n\n    const {\n      allowSlideNext,\n      allowSlidePrev,\n      snapGrid\n    } = swiper; // Disable locks on resize\n\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateSlidesClasses();\n\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n      swiper.autoplay.run();\n    } // Return locks after resize\n\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick(e) {\n    const swiper = this;\n    if (!swiper.enabled) return;\n\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) e.preventDefault();\n\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function onScroll() {\n    const swiper = this;\n    const {\n      wrapperEl,\n      rtlTranslate,\n      enabled\n    } = swiper;\n    if (!enabled) return;\n    swiper.previousTranslate = swiper.translate;\n\n    if (swiper.isHorizontal()) {\n      swiper.translate = -wrapperEl.scrollLeft;\n    } else {\n      swiper.translate = -wrapperEl.scrollTop;\n    } // eslint-disable-next-line\n\n\n    if (swiper.translate === -0) swiper.translate = 0;\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n    let newProgress;\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n    }\n\n    if (newProgress !== swiper.progress) {\n      swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, false);\n  }\n\n  let dummyEventAttached = false;\n\n  function dummyEventListener() {}\n\n  const events = (swiper, method) => {\n    const document = getDocument();\n    const {\n      params,\n      touchEvents,\n      el,\n      wrapperEl,\n      device,\n      support\n    } = swiper;\n    const capture = !!params.nested;\n    const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    const swiperMethod = method; // Touch Events\n\n    if (!support.touch) {\n      el[domMethod](touchEvents.start, swiper.onTouchStart, false);\n      document[domMethod](touchEvents.move, swiper.onTouchMove, capture);\n      document[domMethod](touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      const passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);\n      el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n        passive: false,\n        capture\n      } : capture);\n      el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n      if (touchEvents.cancel) {\n        el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n    } // Prevent Links Clicks\n\n\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el[domMethod]('click', swiper.onClick, true);\n    }\n\n    if (params.cssMode) {\n      wrapperEl[domMethod]('scroll', swiper.onScroll);\n    } // Resize handler\n\n\n    if (params.updateOnWindowResize) {\n      swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n    } else {\n      swiper[swiperMethod]('observerUpdate', onResize, true);\n    }\n  };\n\n  function attachEvents() {\n    const swiper = this;\n    const document = getDocument();\n    const {\n      params,\n      support\n    } = swiper;\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n    if (params.cssMode) {\n      swiper.onScroll = onScroll.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    if (support.touch && !dummyEventAttached) {\n      document.addEventListener('touchstart', dummyEventListener);\n      dummyEventAttached = true;\n    }\n\n    events(swiper, 'on');\n  }\n\n  function detachEvents() {\n    const swiper = this;\n    events(swiper, 'off');\n  }\n\n  var events$1 = {\n    attachEvents,\n    detachEvents\n  };\n\n  const isGridEnabled = (swiper, params) => {\n    return swiper.grid && params.grid && params.grid.rows > 1;\n  };\n\n  function setBreakpoint() {\n    const swiper = this;\n    const {\n      activeIndex,\n      initialized,\n      loopedSlides = 0,\n      params,\n      $el\n    } = swiper;\n    const breakpoints = params.breakpoints;\n    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n    const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n    if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const wasMultiRow = isGridEnabled(swiper, params);\n    const isMultiRow = isGridEnabled(swiper, breakpointParams);\n    const wasEnabled = params.enabled;\n\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\n      swiper.emitContainerClasses();\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(`${params.containerModifierClass}grid`);\n\n      if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n        $el.addClass(`${params.containerModifierClass}grid-column`);\n      }\n\n      swiper.emitContainerClasses();\n    }\n\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    extend(swiper.params, breakpointParams);\n    const isEnabled = swiper.params.enabled;\n    Object.assign(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev\n    });\n\n    if (wasEnabled && !isEnabled) {\n      swiper.disable();\n    } else if (!wasEnabled && isEnabled) {\n      swiper.enable();\n    }\n\n    swiper.currentBreakpoint = breakpoint;\n    swiper.emit('_beforeBreakpoint', breakpointParams);\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n\n  function getBreakpoint(breakpoints, base = 'window', containerEl) {\n    if (!breakpoints || base === 'container' && !containerEl) return undefined;\n    let breakpoint = false;\n    const window = getWindow();\n    const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n    const points = Object.keys(breakpoints).map(point => {\n      if (typeof point === 'string' && point.indexOf('@') === 0) {\n        const minRatio = parseFloat(point.substr(1));\n        const value = currentHeight * minRatio;\n        return {\n          value,\n          point\n        };\n      }\n\n      return {\n        value: point,\n        point\n      };\n    });\n    points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n\n    for (let i = 0; i < points.length; i += 1) {\n      const {\n        point,\n        value\n      } = points[i];\n\n      if (base === 'window') {\n        if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n          breakpoint = point;\n        }\n      } else if (value <= containerEl.clientWidth) {\n        breakpoint = point;\n      }\n    }\n\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = {\n    setBreakpoint,\n    getBreakpoint\n  };\n\n  function prepareClasses(entries, prefix) {\n    const resultClasses = [];\n    entries.forEach(item => {\n      if (typeof item === 'object') {\n        Object.keys(item).forEach(classNames => {\n          if (item[classNames]) {\n            resultClasses.push(prefix + classNames);\n          }\n        });\n      } else if (typeof item === 'string') {\n        resultClasses.push(prefix + item);\n      }\n    });\n    return resultClasses;\n  }\n\n  function addClasses() {\n    const swiper = this;\n    const {\n      classNames,\n      params,\n      rtl,\n      $el,\n      device,\n      support\n    } = swiper; // prettier-ignore\n\n    const suffixes = prepareClasses(['initialized', params.direction, {\n      'pointer-events': !support.touch\n    }, {\n      'free-mode': swiper.params.freeMode && params.freeMode.enabled\n    }, {\n      'autoheight': params.autoHeight\n    }, {\n      'rtl': rtl\n    }, {\n      'grid': params.grid && params.grid.rows > 1\n    }, {\n      'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n    }, {\n      'android': device.android\n    }, {\n      'ios': device.ios\n    }, {\n      'css-mode': params.cssMode\n    }, {\n      'centered': params.cssMode && params.centeredSlides\n    }], params.containerModifierClass);\n    classNames.push(...suffixes);\n    $el.addClass([...classNames].join(' '));\n    swiper.emitContainerClasses();\n  }\n\n  function removeClasses() {\n    const swiper = this;\n    const {\n      $el,\n      classNames\n    } = swiper;\n    $el.removeClass(classNames.join(' '));\n    swiper.emitContainerClasses();\n  }\n\n  var classes = {\n    addClasses,\n    removeClasses\n  };\n\n  function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n    const window = getWindow();\n    let image;\n\n    function onReady() {\n      if (callback) callback();\n    }\n\n    const isPicture = $(imageEl).parent('picture')[0];\n\n    if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n      if (src) {\n        image = new window.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n\n        if (sizes) {\n          image.sizes = sizes;\n        }\n\n        if (srcset) {\n          image.srcset = srcset;\n        }\n\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages() {\n    const swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n      if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) swiper.update();\n        swiper.emit('imagesReady');\n      }\n    }\n\n    for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      const imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n    }\n  }\n\n  var images = {\n    loadImage,\n    preloadImages\n  };\n\n  function checkOverflow() {\n    const swiper = this;\n    const {\n      isLocked: wasLocked,\n      params\n    } = swiper;\n    const {\n      slidesOffsetBefore\n    } = params;\n\n    if (slidesOffsetBefore) {\n      const lastSlideIndex = swiper.slides.length - 1;\n      const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n      swiper.isLocked = swiper.size > lastSlideRightEdge;\n    } else {\n      swiper.isLocked = swiper.snapGrid.length === 1;\n    }\n\n    if (params.allowSlideNext === true) {\n      swiper.allowSlideNext = !swiper.isLocked;\n    }\n\n    if (params.allowSlidePrev === true) {\n      swiper.allowSlidePrev = !swiper.isLocked;\n    }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n    }\n\n    if (wasLocked !== swiper.isLocked) {\n      swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n    }\n  }\n\n  var checkOverflow$1 = {\n    checkOverflow\n  };\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'wrapper',\n    initialSlide: 0,\n    speed: 300,\n    cssMode: false,\n    updateOnWindowResize: true,\n    resizeObserver: true,\n    nested: false,\n    createElements: false,\n    enabled: true,\n    focusableElements: 'input, select, option, textarea, button, video, label',\n    // Overrides\n    width: null,\n    height: null,\n    //\n    preventInteractionOnTransition: false,\n    // ssr\n    userAgent: null,\n    url: null,\n    // To support iOS's swipe-to-go-back gesture (when being used in-app).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n    // Autoheight\n    autoHeight: false,\n    // Set wrapper width\n    setWrapperSize: false,\n    // Virtual Translate\n    virtualTranslate: false,\n    // Effects\n    effect: 'slide',\n    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsBase: 'window',\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    slidesPerGroupAuto: false,\n    centeredSlides: false,\n    centeredSlidesBounds: false,\n    slidesOffsetBefore: 0,\n    // in px\n    slidesOffsetAfter: 0,\n    // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: true,\n    // Round length\n    roundLengths: false,\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: false,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n    // Progress\n    watchSlidesProgress: false,\n    // Cursor\n    grabCursor: false,\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n    loopPreventsSlide: true,\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null,\n    // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n    // Passive Listeners\n    passiveListeners: true,\n    // NS\n    containerModifierClass: 'swiper-',\n    // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n    // Callbacks\n    runCallbacksOnInit: true,\n    // Internals\n    _emitClasses: false\n  };\n\n  function moduleExtendParams(params, allModulesParams) {\n    return function extendParams(obj = {}) {\n      const moduleParamName = Object.keys(obj)[0];\n      const moduleParams = obj[moduleParamName];\n\n      if (typeof moduleParams !== 'object' || moduleParams === null) {\n        extend(allModulesParams, obj);\n        return;\n      }\n\n      if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n        params[moduleParamName] = {\n          auto: true\n        };\n      }\n\n      if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n        extend(allModulesParams, obj);\n        return;\n      }\n\n      if (params[moduleParamName] === true) {\n        params[moduleParamName] = {\n          enabled: true\n        };\n      }\n\n      if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n        params[moduleParamName].enabled = true;\n      }\n\n      if (!params[moduleParamName]) params[moduleParamName] = {\n        enabled: false\n      };\n      extend(allModulesParams, obj);\n    };\n  }\n  /* eslint no-param-reassign: \"off\" */\n\n\n  const prototypes = {\n    eventsEmitter,\n    update,\n    translate,\n    transition,\n    slide,\n    loop,\n    grabCursor,\n    events: events$1,\n    breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes,\n    images\n  };\n  const extendedDefaults = {};\n\n  class Swiper {\n    constructor(...args) {\n      let el;\n      let params;\n\n      if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n        params = args[0];\n      } else {\n        [el, params] = args;\n      }\n\n      if (!params) params = {};\n      params = extend({}, params);\n      if (el && !params.el) params.el = el;\n\n      if (params.el && $(params.el).length > 1) {\n        const swipers = [];\n        $(params.el).each(containerEl => {\n          const newParams = extend({}, params, {\n            el: containerEl\n          });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      } // Swiper Instance\n\n\n      const swiper = this;\n      swiper.__swiper__ = true;\n      swiper.support = getSupport();\n      swiper.device = getDevice({\n        userAgent: params.userAgent\n      });\n      swiper.browser = getBrowser();\n      swiper.eventsListeners = {};\n      swiper.eventsAnyListeners = [];\n      swiper.modules = [...swiper.__modules__];\n\n      if (params.modules && Array.isArray(params.modules)) {\n        swiper.modules.push(...params.modules);\n      }\n\n      const allModulesParams = {};\n      swiper.modules.forEach(mod => {\n        mod({\n          swiper,\n          extendParams: moduleExtendParams(params, allModulesParams),\n          on: swiper.on.bind(swiper),\n          once: swiper.once.bind(swiper),\n          off: swiper.off.bind(swiper),\n          emit: swiper.emit.bind(swiper)\n        });\n      }); // Extend defaults with modules params\n\n      const swiperParams = extend({}, defaults, allModulesParams); // Extend defaults with passed params\n\n      swiper.params = extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = extend({}, swiper.params);\n      swiper.passedParams = extend({}, params); // add event listeners\n\n      if (swiper.params && swiper.params.on) {\n        Object.keys(swiper.params.on).forEach(eventName => {\n          swiper.on(eventName, swiper.params.on[eventName]);\n        });\n      }\n\n      if (swiper.params && swiper.params.onAny) {\n        swiper.onAny(swiper.params.onAny);\n      } // Save Dom lib\n\n\n      swiper.$ = $; // Extend Swiper\n\n      Object.assign(swiper, {\n        enabled: swiper.params.enabled,\n        el,\n        // Classes\n        classNames: [],\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n\n        isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n        //\n        isBeginning: true,\n        isEnd: false,\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n        // Touch Events\n        touchEvents: function touchEvents() {\n          const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n          const desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n            cancel: touch[3]\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2]\n          };\n          return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }(),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          focusableElements: swiper.params.focusableElements,\n          // Last click time\n          lastClickTime: now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined\n        },\n        // Clicks\n        allowClick: true,\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0\n        },\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0\n      });\n      swiper.emit('_swiper'); // Init\n\n      if (swiper.params.init) {\n        swiper.init();\n      } // Return app instance\n\n\n      return swiper;\n    }\n\n    enable() {\n      const swiper = this;\n      if (swiper.enabled) return;\n      swiper.enabled = true;\n\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      swiper.emit('enable');\n    }\n\n    disable() {\n      const swiper = this;\n      if (!swiper.enabled) return;\n      swiper.enabled = false;\n\n      if (swiper.params.grabCursor) {\n        swiper.unsetGrabCursor();\n      }\n\n      swiper.emit('disable');\n    }\n\n    setProgress(progress, speed) {\n      const swiper = this;\n      progress = Math.min(Math.max(progress, 0), 1);\n      const min = swiper.minTranslate();\n      const max = swiper.maxTranslate();\n      const current = (max - min) * progress + min;\n      swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    emitContainerClasses() {\n      const swiper = this;\n      if (!swiper.params._emitClasses || !swiper.el) return;\n      const cls = swiper.el.className.split(' ').filter(className => {\n        return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n      });\n      swiper.emit('_containerClasses', cls.join(' '));\n    }\n\n    getSlideClasses(slideEl) {\n      const swiper = this;\n      return slideEl.className.split(' ').filter(className => {\n        return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n      }).join(' ');\n    }\n\n    emitSlidesClasses() {\n      const swiper = this;\n      if (!swiper.params._emitClasses || !swiper.el) return;\n      const updates = [];\n      swiper.slides.each(slideEl => {\n        const classNames = swiper.getSlideClasses(slideEl);\n        updates.push({\n          slideEl,\n          classNames\n        });\n        swiper.emit('_slideClass', slideEl, classNames);\n      });\n      swiper.emit('_slideClasses', updates);\n    }\n\n    slidesPerViewDynamic(view = 'current', exact = false) {\n      const swiper = this;\n      const {\n        params,\n        slides,\n        slidesGrid,\n        slidesSizesGrid,\n        size: swiperSize,\n        activeIndex\n      } = swiper;\n      let spv = 1;\n\n      if (params.centeredSlides) {\n        let slideSize = slides[activeIndex].swiperSlideSize;\n        let breakLoop;\n\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) breakLoop = true;\n          }\n        }\n\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) breakLoop = true;\n          }\n        }\n      } else {\n        // eslint-disable-next-line\n        if (view === 'current') {\n          for (let i = activeIndex + 1; i < slides.length; i += 1) {\n            const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n\n            if (slideInView) {\n              spv += 1;\n            }\n          }\n        } else {\n          // previous\n          for (let i = activeIndex - 1; i >= 0; i -= 1) {\n            const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n\n            if (slideInView) {\n              spv += 1;\n            }\n          }\n        }\n      }\n\n      return spv;\n    }\n\n    update() {\n      const swiper = this;\n      if (!swiper || swiper.destroyed) return;\n      const {\n        snapGrid,\n        params\n      } = swiper; // Breakpoints\n\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      let translated;\n\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n        setTranslate();\n\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n\n        if (!translated) {\n          setTranslate();\n        }\n      }\n\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n\n      swiper.emit('update');\n    }\n\n    changeDirection(newDirection, needUpdate = true) {\n      const swiper = this;\n      const currentDirection = swiper.params.direction;\n\n      if (!newDirection) {\n        // eslint-disable-next-line\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n      }\n\n      if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n        return swiper;\n      }\n\n      swiper.$el.removeClass(`${swiper.params.containerModifierClass}${currentDirection}`).addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n      swiper.emitContainerClasses();\n      swiper.params.direction = newDirection;\n      swiper.slides.each(slideEl => {\n        if (newDirection === 'vertical') {\n          slideEl.style.width = '';\n        } else {\n          slideEl.style.height = '';\n        }\n      });\n      swiper.emit('changeDirection');\n      if (needUpdate) swiper.update();\n      return swiper;\n    }\n\n    mount(el) {\n      const swiper = this;\n      if (swiper.mounted) return true; // Find el\n\n      const $el = $(el || swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return false;\n      }\n\n      el.swiper = swiper;\n\n      const getWrapperSelector = () => {\n        return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n      };\n\n      const getWrapper = () => {\n        if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n          const res = $(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\n\n          res.children = options => $el.children(options);\n\n          return res;\n        }\n\n        return $el.children(getWrapperSelector());\n      }; // Find Wrapper\n\n\n      let $wrapperEl = getWrapper();\n\n      if ($wrapperEl.length === 0 && swiper.params.createElements) {\n        const document = getDocument();\n        const wrapper = document.createElement('div');\n        $wrapperEl = $(wrapper);\n        wrapper.className = swiper.params.wrapperClass;\n        $el.append(wrapper);\n        $el.children(`.${swiper.params.slideClass}`).each(slideEl => {\n          $wrapperEl.append(slideEl);\n        });\n      }\n\n      Object.assign(swiper, {\n        $el,\n        el,\n        $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n        mounted: true,\n        // RTL\n        rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box'\n      });\n      return true;\n    }\n\n    init(el) {\n      const swiper = this;\n      if (swiper.initialized) return swiper;\n      const mounted = swiper.mount(el);\n      if (mounted === false) return swiper;\n      swiper.emit('beforeInit'); // Set breakpoint\n\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      } // Add Classes\n\n\n      swiper.addClasses(); // Create loop\n\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      } // Update size\n\n\n      swiper.updateSize(); // Update slides\n\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      } // Set Grab Cursor\n\n\n      if (swiper.params.grabCursor && swiper.enabled) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      } // Slide To Initial Slide\n\n\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n      } // Attach events\n\n\n      swiper.attachEvents(); // Init Flag\n\n      swiper.initialized = true; // Emit\n\n      swiper.emit('init');\n      swiper.emit('afterInit');\n      return swiper;\n    }\n\n    destroy(deleteInstance = true, cleanStyles = true) {\n      const swiper = this;\n      const {\n        params,\n        $el,\n        $wrapperEl,\n        slides\n      } = swiper;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy'); // Init Flag\n\n      swiper.initialized = false; // Detach events\n\n      swiper.detachEvents(); // Destroy loop\n\n      if (params.loop) {\n        swiper.loopDestroy();\n      } // Cleanup styles\n\n\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n\n        if (slides && slides.length) {\n          slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n        }\n      }\n\n      swiper.emit('destroy'); // Detach emitter events\n\n      Object.keys(swiper.eventsListeners).forEach(eventName => {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        deleteProps(swiper);\n      }\n\n      swiper.destroyed = true;\n      return null;\n    }\n\n    static extendDefaults(newDefaults) {\n      extend(extendedDefaults, newDefaults);\n    }\n\n    static get extendedDefaults() {\n      return extendedDefaults;\n    }\n\n    static get defaults() {\n      return defaults;\n    }\n\n    static installModule(mod) {\n      if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n      const modules = Swiper.prototype.__modules__;\n\n      if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n        modules.push(mod);\n      }\n    }\n\n    static use(module) {\n      if (Array.isArray(module)) {\n        module.forEach(m => Swiper.installModule(m));\n        return Swiper;\n      }\n\n      Swiper.installModule(module);\n      return Swiper;\n    }\n\n  }\n\n  Object.keys(prototypes).forEach(prototypeGroup => {\n    Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n      Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n    });\n  });\n  Swiper.use([Resize, Observer]);\n\n  function Virtual({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        renderExternalUpdate: true,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0\n      }\n    });\n    let cssModeTimeout;\n    swiper.virtual = {\n      cache: {},\n      from: undefined,\n      to: undefined,\n      slides: [],\n      offset: 0,\n      slidesGrid: []\n    };\n\n    function renderSlide(slide, index) {\n      const params = swiper.params.virtual;\n\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n\n      const $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n      if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n      if (params.cache) swiper.virtual.cache[index] = $slideEl;\n      return $slideEl;\n    }\n\n    function update(force) {\n      const {\n        slidesPerView,\n        slidesPerGroup,\n        centeredSlides\n      } = swiper.params;\n      const {\n        addSlidesBefore,\n        addSlidesAfter\n      } = swiper.params.virtual;\n      const {\n        from: previousFrom,\n        to: previousTo,\n        slides,\n        slidesGrid: previousSlidesGrid,\n        offset: previousOffset\n      } = swiper.virtual;\n\n      if (!swiper.params.cssMode) {\n        swiper.updateActiveIndex();\n      }\n\n      const activeIndex = swiper.activeIndex || 0;\n      let offsetProp;\n      if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n      let slidesAfter;\n      let slidesBefore;\n\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n        slidesBefore = slidesPerGroup + addSlidesBefore;\n      }\n\n      const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n      Object.assign(swiper.virtual, {\n        from,\n        to,\n        offset,\n        slidesGrid: swiper.slidesGrid\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, `${offset}px`);\n        }\n\n        swiper.updateProgress();\n        return;\n      }\n\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset,\n          from,\n          to,\n          slides: function getSlides() {\n            const slidesToRender = [];\n\n            for (let i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n\n            return slidesToRender;\n          }()\n        });\n\n        if (swiper.params.virtual.renderExternalUpdate) {\n          onRendered();\n        }\n\n        return;\n      }\n\n      const prependIndexes = [];\n      const appendIndexes = [];\n\n      if (force) {\n        swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n      } else {\n        for (let i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n          }\n        }\n      }\n\n      for (let i = 0; i < slides.length; i += 1) {\n        if (i >= from && i <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i);\n          } else {\n            if (i > previousTo) appendIndexes.push(i);\n            if (i < previousFrom) prependIndexes.push(i);\n          }\n        }\n      }\n\n      appendIndexes.forEach(index => {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort((a, b) => b - a).forEach(index => {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n      onRendered();\n    }\n\n    function appendSlide(slides) {\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) swiper.virtual.slides.push(slides[i]);\n        }\n      } else {\n        swiper.virtual.slides.push(slides);\n      }\n\n      update(true);\n    }\n\n    function prependSlide(slides) {\n      const activeIndex = swiper.activeIndex;\n      let newActiveIndex = activeIndex + 1;\n      let numberOfNewSlides = 1;\n\n      if (Array.isArray(slides)) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n        }\n\n        newActiveIndex = activeIndex + slides.length;\n        numberOfNewSlides = slides.length;\n      } else {\n        swiper.virtual.slides.unshift(slides);\n      }\n\n      if (swiper.params.virtual.cache) {\n        const cache = swiper.virtual.cache;\n        const newCache = {};\n        Object.keys(cache).forEach(cachedIndex => {\n          const $cachedEl = cache[cachedIndex];\n          const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n\n          if (cachedElIndex) {\n            $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n          }\n\n          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n        });\n        swiper.virtual.cache = newCache;\n      }\n\n      update(true);\n      swiper.slideTo(newActiveIndex, 0);\n    }\n\n    function removeSlide(slidesIndexes) {\n      if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n      let activeIndex = swiper.activeIndex;\n\n      if (Array.isArray(slidesIndexes)) {\n        for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n          swiper.virtual.slides.splice(slidesIndexes[i], 1);\n\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes[i]];\n          }\n\n          if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n          activeIndex = Math.max(activeIndex, 0);\n        }\n      } else {\n        swiper.virtual.slides.splice(slidesIndexes, 1);\n\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes];\n        }\n\n        if (slidesIndexes < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n\n      update(true);\n      swiper.slideTo(activeIndex, 0);\n    }\n\n    function removeAllSlides() {\n      swiper.virtual.slides = [];\n\n      if (swiper.params.virtual.cache) {\n        swiper.virtual.cache = {};\n      }\n\n      update(true);\n      swiper.slideTo(0, 0);\n    }\n\n    on('beforeInit', () => {\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.slides = swiper.params.virtual.slides;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n\n      if (!swiper.params.initialSlide) {\n        update();\n      }\n    });\n    on('setTranslate', () => {\n      if (!swiper.params.virtual.enabled) return;\n\n      if (swiper.params.cssMode && !swiper._immediateVirtual) {\n        clearTimeout(cssModeTimeout);\n        cssModeTimeout = setTimeout(() => {\n          update();\n        }, 100);\n      } else {\n        update();\n      }\n    });\n    on('init update resize', () => {\n      if (!swiper.params.virtual.enabled) return;\n\n      if (swiper.params.cssMode) {\n        setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n      }\n    });\n    Object.assign(swiper.virtual, {\n      appendSlide,\n      prependSlide,\n      removeSlide,\n      removeAllSlides,\n      update\n    });\n  }\n  /* eslint-disable consistent-return */\n\n\n  function Keyboard({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    const document = getDocument();\n    const window = getWindow();\n    swiper.keyboard = {\n      enabled: false\n    };\n    extendParams({\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n        pageUpDown: true\n      }\n    });\n\n    function handle(event) {\n      if (!swiper.enabled) return;\n      const {\n        rtlTranslate: rtl\n      } = swiper;\n      let e = event;\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n      const kc = e.keyCode || e.charCode;\n      const pageUpDown = swiper.params.keyboard.pageUpDown;\n      const isPageUp = pageUpDown && kc === 33;\n      const isPageDown = pageUpDown && kc === 34;\n      const isArrowLeft = kc === 37;\n      const isArrowRight = kc === 39;\n      const isArrowUp = kc === 38;\n      const isArrowDown = kc === 40; // Directions locks\n\n      if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n        return false;\n      }\n\n      if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n        return false;\n      }\n\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n\n      if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n\n      if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n        let inView = false; // Check that swiper should be inside of visible area of window\n\n        if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n          return undefined;\n        }\n\n        const $el = swiper.$el;\n        const swiperWidth = $el[0].clientWidth;\n        const swiperHeight = $el[0].clientHeight;\n        const windowWidth = window.innerWidth;\n        const windowHeight = window.innerHeight;\n        const swiperOffset = swiper.$el.offset();\n        if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n        const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n\n        for (let i = 0; i < swiperCoord.length; i += 1) {\n          const point = swiperCoord[i];\n\n          if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n            if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n            inView = true;\n          }\n        }\n\n        if (!inView) return undefined;\n      }\n\n      if (swiper.isHorizontal()) {\n        if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n          if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        }\n\n        if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n        if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n      } else {\n        if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n          if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        }\n\n        if (isPageDown || isArrowDown) swiper.slideNext();\n        if (isPageUp || isArrowUp) swiper.slidePrev();\n      }\n\n      emit('keyPress', kc);\n      return undefined;\n    }\n\n    function enable() {\n      if (swiper.keyboard.enabled) return;\n      $(document).on('keydown', handle);\n      swiper.keyboard.enabled = true;\n    }\n\n    function disable() {\n      if (!swiper.keyboard.enabled) return;\n      $(document).off('keydown', handle);\n      swiper.keyboard.enabled = false;\n    }\n\n    on('init', () => {\n      if (swiper.params.keyboard.enabled) {\n        enable();\n      }\n    });\n    on('destroy', () => {\n      if (swiper.keyboard.enabled) {\n        disable();\n      }\n    });\n    Object.assign(swiper.keyboard, {\n      enable,\n      disable\n    });\n  }\n  /* eslint-disable consistent-return */\n\n\n  function Mousewheel({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    const window = getWindow();\n    extendParams({\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarget: 'container',\n        thresholdDelta: null,\n        thresholdTime: null\n      }\n    });\n    swiper.mousewheel = {\n      enabled: false\n    };\n    let timeout;\n    let lastScrollTime = now();\n    let lastEventBeforeSnap;\n    const recentWheelEvents = [];\n\n    function normalize(e) {\n      // Reasonable defaults\n      const PIXEL_STEP = 10;\n      const LINE_HEIGHT = 40;\n      const PAGE_HEIGHT = 800;\n      let sX = 0;\n      let sY = 0; // spinX, spinY\n\n      let pX = 0;\n      let pY = 0; // pixelX, pixelY\n      // Legacy\n\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      } // side scrolling on FF with DOMMouseScroll\n\n\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if (e.shiftKey && !pX) {\n        // if user scrolls with shift he wants horizontal scroll\n        pX = pY;\n        pY = 0;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) {\n          // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else {\n          // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      } // Fall-back if spin cannot be determined\n\n\n      if (pX && !sX) {\n        sX = pX < 1 ? -1 : 1;\n      }\n\n      if (pY && !sY) {\n        sY = pY < 1 ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY\n      };\n    }\n\n    function handleMouseEnter() {\n      if (!swiper.enabled) return;\n      swiper.mouseEntered = true;\n    }\n\n    function handleMouseLeave() {\n      if (!swiper.enabled) return;\n      swiper.mouseEntered = false;\n    }\n\n    function animateSlider(newEvent) {\n      if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n        // Prevent if delta of wheel scroll delta is below configured threshold\n        return false;\n      }\n\n      if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n        // Prevent if time between scrolls is below configured threshold\n        return false;\n      } // If the movement is NOT big enough and\n      // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n      //   Don't go any further (avoid insignificant scroll movement).\n\n\n      if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n        // Return false as a default\n        return true;\n      } // If user is scrolling towards the end:\n      //   If the slider hasn't hit the latest slide or\n      //   if the slider is a loop and\n      //   if the slider isn't moving right now:\n      //     Go to next slide and\n      //     emit a scroll event.\n      // Else (the user is scrolling towards the beginning) and\n      // if the slider hasn't hit the first slide or\n      // if the slider is a loop and\n      // if the slider isn't moving right now:\n      //   Go to prev slide and\n      //   emit a scroll event.\n\n\n      if (newEvent.direction < 0) {\n        if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n          swiper.slideNext();\n          emit('scroll', newEvent.raw);\n        }\n      } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n        swiper.slidePrev();\n        emit('scroll', newEvent.raw);\n      } // If you got here is because an animation has been triggered so store the current time\n\n\n      lastScrollTime = new window.Date().getTime(); // Return false as a default\n\n      return false;\n    }\n\n    function releaseScroll(newEvent) {\n      const params = swiper.params.mousewheel;\n\n      if (newEvent.direction < 0) {\n        if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n          // Return true to animate scroll on edges\n          return true;\n        }\n      } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n\n      return false;\n    }\n\n    function handle(event) {\n      let e = event;\n      let disableParentSwiper = true;\n      if (!swiper.enabled) return;\n      const params = swiper.params.mousewheel;\n\n      if (swiper.params.cssMode) {\n        e.preventDefault();\n      }\n\n      let target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n      let delta = 0;\n      const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n      const data = normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) return true;\n      if (params.invert) delta = -delta; // Get the scroll positions\n\n      let positions = swiper.getTranslate() + delta * params.sensitivity;\n      if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n      if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\n      //     the disableParentSwiper will be true.\n      // When loop is false:\n      //     if the scroll positions is not on edge,\n      //     then the disableParentSwiper will be true.\n      //     if the scroll on edge positions,\n      //     then the disableParentSwiper will be false.\n\n      disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n      if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n\n      if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n        // Register the new event in a variable which stores the relevant data\n        const newEvent = {\n          time: now(),\n          delta: Math.abs(delta),\n          direction: Math.sign(delta),\n          raw: event\n        }; // Keep the most recent events\n\n        if (recentWheelEvents.length >= 2) {\n          recentWheelEvents.shift(); // only store the last N events\n        }\n\n        const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n        recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n        //   If direction has changed or\n        //   if the scroll is quicker than the previous one:\n        //     Animate the slider.\n        // Else (this is the first time the wheel is moved):\n        //     Animate the slider.\n\n        if (prevEvent) {\n          if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n            animateSlider(newEvent);\n          }\n        } else {\n          animateSlider(newEvent);\n        } // If it's time to release the scroll:\n        //   Return now so you don't hit the preventDefault.\n\n\n        if (releaseScroll(newEvent)) {\n          return true;\n        }\n      } else {\n        // Freemode or scrollContainer:\n        // If we recently snapped after a momentum scroll, then ignore wheel events\n        // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n        // or if it's a new scroll (larger delta or inverse sign as last event before\n        // an end-of-momentum snap).\n        const newEvent = {\n          time: now(),\n          delta: Math.abs(delta),\n          direction: Math.sign(delta)\n        };\n        const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n\n        if (!ignoreWheelEvents) {\n          lastEventBeforeSnap = undefined;\n\n          if (swiper.params.loop) {\n            swiper.loopFix();\n          }\n\n          let position = swiper.getTranslate() + delta * params.sensitivity;\n          const wasBeginning = swiper.isBeginning;\n          const wasEnd = swiper.isEnd;\n          if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n          if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n          swiper.setTransition(0);\n          swiper.setTranslate(position);\n          swiper.updateProgress();\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n\n          if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n            swiper.updateSlidesClasses();\n          }\n\n          if (swiper.params.freeMode.sticky) {\n            // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n            // the end of a momentum scroll by storing recent (N=15?) wheel events.\n            // 1. do all N events have decreasing or same (absolute value) delta?\n            // 2. did all N events arrive in the last M (M=500?) msecs?\n            // 3. does the earliest event have an (absolute value) delta that's\n            //    at least P (P=1?) larger than the most recent event's delta?\n            // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n            // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n            // Snap immediately and ignore remaining wheel events in this scroll.\n            // See comment above for \"remaining wheel events in this scroll\" determination.\n            // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n            clearTimeout(timeout);\n            timeout = undefined;\n\n            if (recentWheelEvents.length >= 15) {\n              recentWheelEvents.shift(); // only store the last N events\n            }\n\n            const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n            const firstEvent = recentWheelEvents[0];\n            recentWheelEvents.push(newEvent);\n\n            if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n              // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n              recentWheelEvents.splice(0);\n            } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n              // We're at the end of the deceleration of a momentum scroll, so there's no need\n              // to wait for more events. Snap ASAP on the next tick.\n              // Also, because there's some remaining momentum we'll bias the snap in the\n              // direction of the ongoing scroll because it's better UX for the scroll to snap\n              // in the same direction as the scroll instead of reversing to snap.  Therefore,\n              // if it's already scrolled more than 20% in the current direction, keep going.\n              const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              timeout = nextTick(() => {\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n              }, 0); // no delay; move on next tick\n            }\n\n            if (!timeout) {\n              // if we get here, then we haven't detected the end of a momentum scroll, so\n              // we'll consider a scroll \"complete\" when there haven't been any wheel events\n              // for 500ms.\n              timeout = nextTick(() => {\n                const snapToThreshold = 0.5;\n                lastEventBeforeSnap = newEvent;\n                recentWheelEvents.splice(0);\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n              }, 500);\n            }\n          } // Emit event\n\n\n          if (!ignoreWheelEvents) emit('scroll', e); // Stop autoplay\n\n          if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\n\n          if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n        }\n      }\n\n      if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      return false;\n    }\n\n    function events(method) {\n      let target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      target[method]('mouseenter', handleMouseEnter);\n      target[method]('mouseleave', handleMouseLeave);\n      target[method]('wheel', handle);\n    }\n\n    function enable() {\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.removeEventListener('wheel', handle);\n        return true;\n      }\n\n      if (swiper.mousewheel.enabled) return false;\n      events('on');\n      swiper.mousewheel.enabled = true;\n      return true;\n    }\n\n    function disable() {\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.addEventListener(event, handle);\n        return true;\n      }\n\n      if (!swiper.mousewheel.enabled) return false;\n      events('off');\n      swiper.mousewheel.enabled = false;\n      return true;\n    }\n\n    on('init', () => {\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n        disable();\n      }\n\n      if (swiper.params.mousewheel.enabled) enable();\n    });\n    on('destroy', () => {\n      if (swiper.params.cssMode) {\n        enable();\n      }\n\n      if (swiper.mousewheel.enabled) disable();\n    });\n    Object.assign(swiper.mousewheel, {\n      enable,\n      disable\n    });\n  }\n\n  function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n    const document = getDocument();\n\n    if (swiper.params.createElements) {\n      Object.keys(checkProps).forEach(key => {\n        if (!params[key] && params.auto === true) {\n          let element = swiper.$el.children(`.${checkProps[key]}`)[0];\n\n          if (!element) {\n            element = document.createElement('div');\n            element.className = checkProps[key];\n            swiper.$el.append(element);\n          }\n\n          params[key] = element;\n          originalParams[key] = element;\n        }\n      });\n    }\n\n    return params;\n  }\n\n  function Navigation({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    extendParams({\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock'\n      }\n    });\n    swiper.navigation = {\n      nextEl: null,\n      $nextEl: null,\n      prevEl: null,\n      $prevEl: null\n    };\n\n    function getEl(el) {\n      let $el;\n\n      if (el) {\n        $el = $(el);\n\n        if (swiper.params.uniqueNavElements && typeof el === 'string' && $el.length > 1 && swiper.$el.find(el).length === 1) {\n          $el = swiper.$el.find(el);\n        }\n      }\n\n      return $el;\n    }\n\n    function toggleEl($el, disabled) {\n      const params = swiper.params.navigation;\n\n      if ($el && $el.length > 0) {\n        $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);\n        if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n        }\n      }\n    }\n\n    function update() {\n      // Update Navigation Buttons\n      if (swiper.params.loop) return;\n      const {\n        $nextEl,\n        $prevEl\n      } = swiper.navigation;\n      toggleEl($prevEl, swiper.isBeginning);\n      toggleEl($nextEl, swiper.isEnd);\n    }\n\n    function onPrevClick(e) {\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop) return;\n      swiper.slidePrev();\n    }\n\n    function onNextClick(e) {\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop) return;\n      swiper.slideNext();\n    }\n\n    function init() {\n      const params = swiper.params.navigation;\n      swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n        nextEl: 'swiper-button-next',\n        prevEl: 'swiper-button-prev'\n      });\n      if (!(params.nextEl || params.prevEl)) return;\n      const $nextEl = getEl(params.nextEl);\n      const $prevEl = getEl(params.prevEl);\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', onNextClick);\n      }\n\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', onPrevClick);\n      }\n\n      Object.assign(swiper.navigation, {\n        $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl,\n        prevEl: $prevEl && $prevEl[0]\n      });\n\n      if (!swiper.enabled) {\n        if ($nextEl) $nextEl.addClass(params.lockClass);\n        if ($prevEl) $prevEl.addClass(params.lockClass);\n      }\n    }\n\n    function destroy() {\n      const {\n        $nextEl,\n        $prevEl\n      } = swiper.navigation;\n\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    }\n\n    on('init', () => {\n      init();\n      update();\n    });\n    on('toEdge fromEdge lock unlock', () => {\n      update();\n    });\n    on('destroy', () => {\n      destroy();\n    });\n    on('enable disable', () => {\n      const {\n        $nextEl,\n        $prevEl\n      } = swiper.navigation;\n\n      if ($nextEl) {\n        $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n      }\n\n      if ($prevEl) {\n        $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n      }\n    });\n    on('click', (_s, e) => {\n      const {\n        $nextEl,\n        $prevEl\n      } = swiper.navigation;\n      const targetEl = e.target;\n\n      if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n        if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n        let isHidden;\n\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n\n        if (isHidden === true) {\n          emit('navigationShow');\n        } else {\n          emit('navigationHide');\n        }\n\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    });\n    Object.assign(swiper.navigation, {\n      update,\n      init,\n      destroy\n    });\n  }\n\n  function classesToSelector(classes = '') {\n    return `.${classes.trim().replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\n    .replace(/ /g, '.')}`;\n  }\n\n  function Pagination({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    const pfx = 'swiper-pagination';\n    extendParams({\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets',\n        // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: number => number,\n        formatFractionTotal: number => number,\n        bulletClass: `${pfx}-bullet`,\n        bulletActiveClass: `${pfx}-bullet-active`,\n        modifierClass: `${pfx}-`,\n        currentClass: `${pfx}-current`,\n        totalClass: `${pfx}-total`,\n        hiddenClass: `${pfx}-hidden`,\n        progressbarFillClass: `${pfx}-progressbar-fill`,\n        progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n        clickableClass: `${pfx}-clickable`,\n        lockClass: `${pfx}-lock`,\n        horizontalClass: `${pfx}-horizontal`,\n        verticalClass: `${pfx}-vertical`\n      }\n    });\n    swiper.pagination = {\n      el: null,\n      $el: null,\n      bullets: []\n    };\n    let bulletSize;\n    let dynamicBulletIndex = 0;\n\n    function isPaginationDisabled() {\n      return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;\n    }\n\n    function setSideBullets($bulletEl, position) {\n      const {\n        bulletActiveClass\n      } = swiper.params.pagination;\n      $bulletEl[position]().addClass(`${bulletActiveClass}-${position}`)[position]().addClass(`${bulletActiveClass}-${position}-${position}`);\n    }\n\n    function update() {\n      // Render || Update Pagination bullets/items\n      const rtl = swiper.rtl;\n      const params = swiper.params.pagination;\n      if (isPaginationDisabled()) return;\n      const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      const $el = swiper.pagination.$el; // Current/Total\n\n      let current;\n      const total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n\n        if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n          current -= slidesLength - swiper.loopedSlides * 2;\n        }\n\n        if (current > total - 1) current -= total;\n        if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      } // Types\n\n\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        const bullets = swiper.pagination.bullets;\n        let firstIndex;\n        let lastIndex;\n        let midIndex;\n\n        if (params.dynamicBullets) {\n          bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', `${bulletSize * (params.dynamicMainBullets + 4)}px`);\n\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            dynamicBulletIndex += current - swiper.previousIndex;\n\n            if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n              dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (dynamicBulletIndex < 0) {\n              dynamicBulletIndex = 0;\n            }\n          }\n\n          firstIndex = current - dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n\n        bullets.removeClass(['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`).join(' '));\n\n        if ($el.length > 1) {\n          bullets.each(bullet => {\n            const $bullet = $(bullet);\n            const bulletIndex = $bullet.index();\n\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(`${params.bulletActiveClass}-main`);\n              }\n\n              if (bulletIndex === firstIndex) {\n                setSideBullets($bullet, 'prev');\n              }\n\n              if (bulletIndex === lastIndex) {\n                setSideBullets($bullet, 'next');\n              }\n            }\n          });\n        } else {\n          const $bullet = bullets.eq(current);\n          const bulletIndex = $bullet.index();\n          $bullet.addClass(params.bulletActiveClass);\n\n          if (params.dynamicBullets) {\n            const $firstDisplayedBullet = bullets.eq(firstIndex);\n            const $lastDisplayedBullet = bullets.eq(lastIndex);\n\n            for (let i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n            }\n\n            if (swiper.params.loop) {\n              if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n                for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                  bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n                }\n\n                bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n              } else {\n                setSideBullets($firstDisplayedBullet, 'prev');\n                setSideBullets($lastDisplayedBullet, 'next');\n              }\n            } else {\n              setSideBullets($firstDisplayedBullet, 'prev');\n              setSideBullets($lastDisplayedBullet, 'next');\n            }\n          }\n        }\n\n        if (params.dynamicBullets) {\n          const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n          const offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n        }\n      }\n\n      if (params.type === 'fraction') {\n        $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\n        $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n      }\n\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n\n        $el.find(classesToSelector(params.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n      }\n\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        emit('paginationRender', $el[0]);\n      } else {\n        emit('paginationUpdate', $el[0]);\n      }\n\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    }\n\n    function render() {\n      // Render Container\n      const params = swiper.params.pagination;\n      if (isPaginationDisabled()) return;\n      const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      const $el = swiper.pagination.$el;\n      let paginationHTML = '';\n\n      if (params.type === 'bullets') {\n        let numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n        if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) {\n          numberOfBullets = slidesLength;\n        }\n\n        for (let i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n          }\n        }\n\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n      }\n\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n        }\n\n        $el.html(paginationHTML);\n      }\n\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n        }\n\n        $el.html(paginationHTML);\n      }\n\n      if (params.type !== 'custom') {\n        emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    }\n\n    function init() {\n      swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n        el: 'swiper-pagination'\n      });\n      const params = swiper.params.pagination;\n      if (!params.el) return;\n      let $el = $(params.el);\n      if ($el.length === 0) return;\n\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\n        $el = swiper.$el.find(params.el); // check if it belongs to another nested Swiper\n\n        if ($el.length > 1) {\n          $el = $el.filter(el => {\n            if ($(el).parents('.swiper')[0] !== swiper.el) return false;\n            return true;\n          });\n        }\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n      $el.addClass(params.modifierClass + swiper.params.direction);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\n          e.preventDefault();\n          let index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) index += swiper.loopedSlides;\n          swiper.slideTo(index);\n        });\n      }\n\n      Object.assign(swiper.pagination, {\n        $el,\n        el: $el[0]\n      });\n\n      if (!swiper.enabled) {\n        $el.addClass(params.lockClass);\n      }\n    }\n\n    function destroy() {\n      const params = swiper.params.pagination;\n      if (isPaginationDisabled()) return;\n      const $el = swiper.pagination.$el;\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      $el.removeClass(params.modifierClass + swiper.params.direction);\n      if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n\n      if (params.clickable) {\n        $el.off('click', classesToSelector(params.bulletClass));\n      }\n    }\n\n    on('init', () => {\n      init();\n      render();\n      update();\n    });\n    on('activeIndexChange', () => {\n      if (swiper.params.loop) {\n        update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        update();\n      }\n    });\n    on('snapIndexChange', () => {\n      if (!swiper.params.loop) {\n        update();\n      }\n    });\n    on('slidesLengthChange', () => {\n      if (swiper.params.loop) {\n        render();\n        update();\n      }\n    });\n    on('snapGridLengthChange', () => {\n      if (!swiper.params.loop) {\n        render();\n        update();\n      }\n    });\n    on('destroy', () => {\n      destroy();\n    });\n    on('enable disable', () => {\n      const {\n        $el\n      } = swiper.pagination;\n\n      if ($el) {\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);\n      }\n    });\n    on('lock unlock', () => {\n      update();\n    });\n    on('click', (_s, e) => {\n      const targetEl = e.target;\n      const {\n        $el\n      } = swiper.pagination;\n\n      if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\n        if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n        const isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);\n\n        if (isHidden === true) {\n          emit('paginationShow');\n        } else {\n          emit('paginationHide');\n        }\n\n        $el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    });\n    Object.assign(swiper.pagination, {\n      render,\n      update,\n      init,\n      destroy\n    });\n  }\n\n  function Scrollbar({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    const document = getDocument();\n    let isTouched = false;\n    let timeout = null;\n    let dragTimeout = null;\n    let dragStartPos;\n    let dragSize;\n    let trackSize;\n    let divider;\n    extendParams({\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag'\n      }\n    });\n    swiper.scrollbar = {\n      el: null,\n      dragEl: null,\n      $el: null,\n      $dragEl: null\n    };\n\n    function setTranslate() {\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      const {\n        scrollbar,\n        rtlTranslate: rtl,\n        progress\n      } = swiper;\n      const {\n        $dragEl,\n        $el\n      } = scrollbar;\n      const params = swiper.params.scrollbar;\n      let newSize = dragSize;\n      let newPos = (trackSize - dragSize) * progress;\n\n      if (rtl) {\n        newPos = -newPos;\n\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n        $dragEl[0].style.width = `${newSize}px`;\n      } else {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n        $dragEl[0].style.height = `${newSize}px`;\n      }\n\n      if (params.hide) {\n        clearTimeout(timeout);\n        $el[0].style.opacity = 1;\n        timeout = setTimeout(() => {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    }\n\n    function setTransition(duration) {\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      swiper.scrollbar.$dragEl.transition(duration);\n    }\n\n    function updateSize() {\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      const {\n        scrollbar\n      } = swiper;\n      const {\n        $dragEl,\n        $el\n      } = scrollbar;\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n      divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = `${dragSize}px`;\n      } else {\n        $dragEl[0].style.height = `${dragSize}px`;\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n\n      if (swiper.params.scrollbar.hide) {\n        $el[0].style.opacity = 0;\n      }\n\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n      }\n    }\n\n    function getPointerPosition(e) {\n      if (swiper.isHorizontal()) {\n        return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\n      }\n\n      return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\n    }\n\n    function setDragPosition(e) {\n      const {\n        scrollbar,\n        rtlTranslate: rtl\n      } = swiper;\n      const {\n        $el\n      } = scrollbar;\n      let positionRatio;\n      positionRatio = (getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    function onDragStart(e) {\n      const params = swiper.params.scrollbar;\n      const {\n        scrollbar,\n        $wrapperEl\n      } = swiper;\n      const {\n        $el,\n        $dragEl\n      } = scrollbar;\n      isTouched = true;\n      dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n      e.preventDefault();\n      e.stopPropagation();\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      setDragPosition(e);\n      clearTimeout(dragTimeout);\n      $el.transition(0);\n\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', 'none');\n      }\n\n      emit('scrollbarDragStart', e);\n    }\n\n    function onDragMove(e) {\n      const {\n        scrollbar,\n        $wrapperEl\n      } = swiper;\n      const {\n        $el,\n        $dragEl\n      } = scrollbar;\n      if (!isTouched) return;\n      if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      emit('scrollbarDragMove', e);\n    }\n\n    function onDragEnd(e) {\n      const params = swiper.params.scrollbar;\n      const {\n        scrollbar,\n        $wrapperEl\n      } = swiper;\n      const {\n        $el\n      } = scrollbar;\n      if (!isTouched) return;\n      isTouched = false;\n\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', '');\n        $wrapperEl.transition('');\n      }\n\n      if (params.hide) {\n        clearTimeout(dragTimeout);\n        dragTimeout = nextTick(() => {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n\n      emit('scrollbarDragEnd', e);\n\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    }\n\n    function events(method) {\n      const {\n        scrollbar,\n        touchEventsTouch,\n        touchEventsDesktop,\n        params,\n        support\n      } = swiper;\n      const $el = scrollbar.$el;\n      const target = $el[0];\n      const activeListener = support.passiveListener && params.passiveListeners ? {\n        passive: false,\n        capture: false\n      } : false;\n      const passiveListener = support.passiveListener && params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      if (!target) return;\n      const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n\n      if (!support.touch) {\n        target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);\n        document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);\n        document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);\n      } else {\n        target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);\n        target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);\n        target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);\n      }\n    }\n\n    function enableDraggable() {\n      if (!swiper.params.scrollbar.el) return;\n      events('on');\n    }\n\n    function disableDraggable() {\n      if (!swiper.params.scrollbar.el) return;\n      events('off');\n    }\n\n    function init() {\n      const {\n        scrollbar,\n        $el: $swiperEl\n      } = swiper;\n      swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n        el: 'swiper-scrollbar'\n      });\n      const params = swiper.params.scrollbar;\n      if (!params.el) return;\n      let $el = $(params.el);\n\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n\n      if ($dragEl.length === 0) {\n        $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n        $el.append($dragEl);\n      }\n\n      Object.assign(scrollbar, {\n        $el,\n        el: $el[0],\n        $dragEl,\n        dragEl: $dragEl[0]\n      });\n\n      if (params.draggable) {\n        enableDraggable();\n      }\n\n      if ($el) {\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n      }\n    }\n\n    function destroy() {\n      disableDraggable();\n    }\n\n    on('init', () => {\n      init();\n      updateSize();\n      setTranslate();\n    });\n    on('update resize observerUpdate lock unlock', () => {\n      updateSize();\n    });\n    on('setTranslate', () => {\n      setTranslate();\n    });\n    on('setTransition', (_s, duration) => {\n      setTransition(duration);\n    });\n    on('enable disable', () => {\n      const {\n        $el\n      } = swiper.scrollbar;\n\n      if ($el) {\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n      }\n    });\n    on('destroy', () => {\n      destroy();\n    });\n    Object.assign(swiper.scrollbar, {\n      updateSize,\n      setTranslate,\n      init,\n      destroy\n    });\n  }\n\n  function Parallax({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      parallax: {\n        enabled: false\n      }\n    });\n\n    const setTransform = (el, progress) => {\n      const {\n        rtl\n      } = swiper;\n      const $el = $(el);\n      const rtlFactor = rtl ? -1 : 1;\n      const p = $el.attr('data-swiper-parallax') || '0';\n      let x = $el.attr('data-swiper-parallax-x');\n      let y = $el.attr('data-swiper-parallax-y');\n      const scale = $el.attr('data-swiper-parallax-scale');\n      const opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if (x.indexOf('%') >= 0) {\n        x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n      } else {\n        x = `${x * progress * rtlFactor}px`;\n      }\n\n      if (y.indexOf('%') >= 0) {\n        y = `${parseInt(y, 10) * progress}%`;\n      } else {\n        y = `${y * progress}px`;\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n        $el[0].style.opacity = currentOpacity;\n      }\n\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform(`translate3d(${x}, ${y}, 0px)`);\n      } else {\n        const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n        $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n      }\n    };\n\n    const setTranslate = () => {\n      const {\n        $el,\n        slides,\n        progress,\n        snapGrid\n      } = swiper;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n        setTransform(el, progress);\n      });\n      slides.each((slideEl, slideIndex) => {\n        let slideProgress = slideEl.progress;\n\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n        }\n\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n          setTransform(el, slideProgress);\n        });\n      });\n    };\n\n    const setTransition = (duration = swiper.params.speed) => {\n      const {\n        $el\n      } = swiper;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n    };\n\n    on('beforeInit', () => {\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    });\n    on('init', () => {\n      if (!swiper.params.parallax.enabled) return;\n      setTranslate();\n    });\n    on('setTranslate', () => {\n      if (!swiper.params.parallax.enabled) return;\n      setTranslate();\n    });\n    on('setTransition', (_swiper, duration) => {\n      if (!swiper.params.parallax.enabled) return;\n      setTransition(duration);\n    });\n  }\n\n  function Zoom({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    const window = getWindow();\n    extendParams({\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed'\n      }\n    });\n    swiper.zoom = {\n      enabled: false\n    };\n    let currentScale = 1;\n    let isScaling = false;\n    let gesturesEnabled;\n    let fakeGestureTouched;\n    let fakeGestureMoved;\n    const gesture = {\n      $slideEl: undefined,\n      slideWidth: undefined,\n      slideHeight: undefined,\n      $imageEl: undefined,\n      $imageWrapEl: undefined,\n      maxRatio: 3\n    };\n    const image = {\n      isTouched: undefined,\n      isMoved: undefined,\n      currentX: undefined,\n      currentY: undefined,\n      minX: undefined,\n      minY: undefined,\n      maxX: undefined,\n      maxY: undefined,\n      width: undefined,\n      height: undefined,\n      startX: undefined,\n      startY: undefined,\n      touchesStart: {},\n      touchesCurrent: {}\n    };\n    const velocity = {\n      x: undefined,\n      y: undefined,\n      prevPositionX: undefined,\n      prevPositionY: undefined,\n      prevTime: undefined\n    };\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n\n      set(value) {\n        if (scale !== value) {\n          const imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;\n          const slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;\n          emit('zoomChange', value, imageEl, slideEl);\n        }\n\n        scale = value;\n      }\n\n    });\n\n    function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) return 1;\n      const x1 = e.targetTouches[0].pageX;\n      const y1 = e.targetTouches[0].pageY;\n      const x2 = e.targetTouches[1].pageX;\n      const y2 = e.targetTouches[1].pageY;\n      const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n      return distance;\n    } // Events\n\n\n    function onGestureStart(e) {\n      const support = swiper.support;\n      const params = swiper.params.zoom;\n      fakeGestureTouched = false;\n      fakeGestureMoved = false;\n\n      if (!support.gestures) {\n        if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n          return;\n        }\n\n        fakeGestureTouched = true;\n        gesture.scaleStart = getDistanceBetweenTouches(e);\n      }\n\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n        if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transition(0);\n      }\n\n      isScaling = true;\n    }\n\n    function onGestureChange(e) {\n      const support = swiper.support;\n      const params = swiper.params.zoom;\n      const zoom = swiper.zoom;\n\n      if (!support.gestures) {\n        if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n          return;\n        }\n\n        fakeGestureMoved = true;\n        gesture.scaleMove = getDistanceBetweenTouches(e);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n        if (e.type === 'gesturechange') onGestureStart(e);\n        return;\n      }\n\n      if (support.gestures) {\n        zoom.scale = e.scale * currentScale;\n      } else {\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n      }\n\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n      }\n\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n      }\n\n      gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    }\n\n    function onGestureEnd(e) {\n      const device = swiper.device;\n      const support = swiper.support;\n      const params = swiper.params.zoom;\n      const zoom = swiper.zoom;\n\n      if (!support.gestures) {\n        if (!fakeGestureTouched || !fakeGestureMoved) {\n          return;\n        }\n\n        if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\n          return;\n        }\n\n        fakeGestureTouched = false;\n        fakeGestureMoved = false;\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n      currentScale = zoom.scale;\n      isScaling = false;\n      if (zoom.scale === 1) gesture.$slideEl = undefined;\n    }\n\n    function onTouchStart(e) {\n      const device = swiper.device;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      if (image.isTouched) return;\n      if (device.android && e.cancelable) e.preventDefault();\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    }\n\n    function onTouchMove(e) {\n      const zoom = swiper.zoom;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) return;\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n      } // Define if we need image drag\n\n\n      const scaledWidth = image.width * zoom.scale;\n      const scaledHeight = image.height * zoom.scale;\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n      image.maxY = -image.minY;\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !isScaling) {\n        if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n          image.isTouched = false;\n          return;\n        }\n\n        if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n          image.isTouched = false;\n          return;\n        }\n      }\n\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n\n      e.stopPropagation();\n      image.isMoved = true;\n      image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n      image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n      }\n\n      if (image.currentX > image.maxX) {\n        image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n      }\n\n      if (image.currentY > image.maxY) {\n        image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n      } // Velocity\n\n\n      if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n      if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n      if (!velocity.prevTime) velocity.prevTime = Date.now();\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n      gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n    }\n\n    function onTouchEnd() {\n      const zoom = swiper.zoom;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n\n      image.isTouched = false;\n      image.isMoved = false;\n      let momentumDurationX = 300;\n      let momentumDurationY = 300;\n      const momentumDistanceX = velocity.x * momentumDurationX;\n      const newPositionX = image.currentX + momentumDistanceX;\n      const momentumDistanceY = velocity.y * momentumDurationY;\n      const newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n      if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n      if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n      const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n      image.currentX = newPositionX;\n      image.currentY = newPositionY; // Define if we need image drag\n\n      const scaledWidth = image.width * zoom.scale;\n      const scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n      gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n    }\n\n    function onTransitionEnd() {\n      const zoom = swiper.zoom;\n\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        if (gesture.$imageEl) {\n          gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        }\n\n        if (gesture.$imageWrapEl) {\n          gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n        }\n\n        zoom.scale = 1;\n        currentScale = 1;\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n      }\n    }\n\n    function zoomIn(e) {\n      const zoom = swiper.zoom;\n      const params = swiper.params.zoom;\n\n      if (!gesture.$slideEl) {\n        if (e && e.target) {\n          gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n        }\n\n        if (!gesture.$slideEl) {\n          if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n            gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n          } else {\n            gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n          }\n        }\n\n        gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.style.overflow = 'hidden';\n        swiper.wrapperEl.style.touchAction = 'none';\n      }\n\n      gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n      let touchX;\n      let touchY;\n      let offsetX;\n      let offsetY;\n      let diffX;\n      let diffY;\n      let translateX;\n      let translateY;\n      let imageWidth;\n      let imageHeight;\n      let scaledWidth;\n      let scaledHeight;\n      let translateMinX;\n      let translateMinY;\n      let translateMaxX;\n      let translateMaxY;\n      let slideWidth;\n      let slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left + window.scrollX;\n        offsetY = gesture.$slideEl.offset().top + window.scrollY;\n        diffX = offsetX + slideWidth / 2 - touchX;\n        diffY = offsetY + slideHeight / 2 - touchY;\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n        translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n        translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n\n      gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n      gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    }\n\n    function zoomOut() {\n      const zoom = swiper.zoom;\n      const params = swiper.params.zoom;\n\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n\n        gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.style.touchAction = '';\n      }\n\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n      gesture.$slideEl = undefined;\n    } // Toggle Zoom\n\n\n    function zoomToggle(e) {\n      const zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoomOut();\n      } else {\n        // Zoom In\n        zoomIn(e);\n      }\n    }\n\n    function getListeners() {\n      const support = swiper.support;\n      const passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      const activeListenerWithCapture = support.passiveListener ? {\n        passive: false,\n        capture: true\n      } : true;\n      return {\n        passiveListener,\n        activeListenerWithCapture\n      };\n    }\n\n    function getSlideSelector() {\n      return `.${swiper.params.slideClass}`;\n    }\n\n    function toggleGestures(method) {\n      const {\n        passiveListener\n      } = getListeners();\n      const slideSelector = getSlideSelector();\n      swiper.$wrapperEl[method]('gesturestart', slideSelector, onGestureStart, passiveListener);\n      swiper.$wrapperEl[method]('gesturechange', slideSelector, onGestureChange, passiveListener);\n      swiper.$wrapperEl[method]('gestureend', slideSelector, onGestureEnd, passiveListener);\n    }\n\n    function enableGestures() {\n      if (gesturesEnabled) return;\n      gesturesEnabled = true;\n      toggleGestures('on');\n    }\n\n    function disableGestures() {\n      if (!gesturesEnabled) return;\n      gesturesEnabled = false;\n      toggleGestures('off');\n    } // Attach/Detach Events\n\n\n    function enable() {\n      const zoom = swiper.zoom;\n      if (zoom.enabled) return;\n      zoom.enabled = true;\n      const support = swiper.support;\n      const {\n        passiveListener,\n        activeListenerWithCapture\n      } = getListeners();\n      const slideSelector = getSlideSelector(); // Scale image\n\n      if (support.gestures) {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n        }\n      } // Move image\n\n\n      swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n    }\n\n    function disable() {\n      const zoom = swiper.zoom;\n      if (!zoom.enabled) return;\n      const support = swiper.support;\n      zoom.enabled = false;\n      const {\n        passiveListener,\n        activeListenerWithCapture\n      } = getListeners();\n      const slideSelector = getSlideSelector(); // Scale image\n\n      if (support.gestures) {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n        }\n      } // Move image\n\n\n      swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n    }\n\n    on('init', () => {\n      if (swiper.params.zoom.enabled) {\n        enable();\n      }\n    });\n    on('destroy', () => {\n      disable();\n    });\n    on('touchStart', (_s, e) => {\n      if (!swiper.zoom.enabled) return;\n      onTouchStart(e);\n    });\n    on('touchEnd', (_s, e) => {\n      if (!swiper.zoom.enabled) return;\n      onTouchEnd();\n    });\n    on('doubleTap', (_s, e) => {\n      if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        zoomToggle(e);\n      }\n    });\n    on('transitionEnd', () => {\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        onTransitionEnd();\n      }\n    });\n    on('slideChange', () => {\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n        onTransitionEnd();\n      }\n    });\n    Object.assign(swiper.zoom, {\n      enable,\n      disable,\n      in: zoomIn,\n      out: zoomOut,\n      toggle: zoomToggle\n    });\n  }\n\n  function Lazy({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    extendParams({\n      lazy: {\n        checkInView: false,\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n        scrollingElement: '',\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader'\n      }\n    });\n    swiper.lazy = {};\n    let scrollHandlerAttached = false;\n    let initialImageLoaded = false;\n\n    function loadInSlide(index, loadInDuplicate = true) {\n      const params = swiper.params.lazy;\n      if (typeof index === 'undefined') return;\n      if (swiper.slides.length === 0) return;\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      const $slideEl = isVirtual ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`) : swiper.slides.eq(index);\n      const $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images.push($slideEl[0]);\n      }\n\n      if ($images.length === 0) return;\n      $images.each(imageEl => {\n        const $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n        const background = $imageEl.attr('data-background');\n        const src = $imageEl.attr('data-src');\n        const srcset = $imageEl.attr('data-srcset');\n        const sizes = $imageEl.attr('data-sizes');\n        const $pictureEl = $imageEl.parent('picture');\n        swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, () => {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\n\n          if (background) {\n            $imageEl.css('background-image', `url(\"${background}\")`);\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n\n            if ($pictureEl.length) {\n              $pictureEl.children('source').each(sourceEl => {\n                const $source = $(sourceEl);\n\n                if ($source.attr('data-srcset')) {\n                  $source.attr('srcset', $source.attr('data-srcset'));\n                  $source.removeAttr('data-srcset');\n                }\n              });\n            }\n\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find(`.${params.preloaderClass}`).remove();\n\n          if (swiper.params.loop && loadInDuplicate) {\n            const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n              loadInSlide(originalSlide.index(), false);\n            } else {\n              const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n              loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n\n          emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n\n          if (swiper.params.autoHeight) {\n            swiper.updateAutoHeight();\n          }\n        });\n        emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    }\n\n    function load() {\n      const {\n        $wrapperEl,\n        params: swiperParams,\n        slides,\n        activeIndex\n      } = swiper;\n      const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      const params = swiperParams.lazy;\n      let slidesPerView = swiperParams.slidesPerView;\n\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n            return true;\n          }\n        } else if (slides[index]) return true;\n\n        return false;\n      }\n\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n\n        return $(slideEl).index();\n      }\n\n      if (!initialImageLoaded) initialImageLoaded = true;\n\n      if (swiper.params.watchSlidesProgress) {\n        $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each(slideEl => {\n          const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) loadInSlide(i);\n        }\n      } else {\n        loadInSlide(activeIndex);\n      }\n\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n          const amount = params.loadPrevNextAmount;\n          const spv = slidesPerView;\n          const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n\n          for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n            if (slideExist(i)) loadInSlide(i);\n          } // Prev Slides\n\n\n          for (let i = minIndex; i < activeIndex; i += 1) {\n            if (slideExist(i)) loadInSlide(i);\n          }\n        } else {\n          const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n          if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide));\n          const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n          if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide));\n        }\n      }\n    }\n\n    function checkInViewOnLoad() {\n      const window = getWindow();\n      if (!swiper || swiper.destroyed) return;\n      const $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);\n      const isWindow = $scrollElement[0] === window;\n      const scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\n      const scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\n      const swiperOffset = swiper.$el.offset();\n      const {\n        rtlTranslate: rtl\n      } = swiper;\n      let inView = false;\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\n\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n\n        if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n          inView = true;\n        }\n      }\n\n      const passiveListener = swiper.touchEvents.start === 'touchstart' && swiper.support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n\n      if (inView) {\n        load();\n        $scrollElement.off('scroll', checkInViewOnLoad, passiveListener);\n      } else if (!scrollHandlerAttached) {\n        scrollHandlerAttached = true;\n        $scrollElement.on('scroll', checkInViewOnLoad, passiveListener);\n      }\n    }\n\n    on('beforeInit', () => {\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    });\n    on('init', () => {\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.checkInView) {\n          checkInViewOnLoad();\n        } else {\n          load();\n        }\n      }\n    });\n    on('scroll', () => {\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.freeMode.sticky) {\n        load();\n      }\n    });\n    on('scrollbarDragMove resize _freeModeNoMomentumRelease', () => {\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.checkInView) {\n          checkInViewOnLoad();\n        } else {\n          load();\n        }\n      }\n    });\n    on('transitionStart', () => {\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded) {\n          if (swiper.params.lazy.checkInView) {\n            checkInViewOnLoad();\n          } else {\n            load();\n          }\n        }\n      }\n    });\n    on('transitionEnd', () => {\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        if (swiper.params.lazy.checkInView) {\n          checkInViewOnLoad();\n        } else {\n          load();\n        }\n      }\n    });\n    on('slideChange', () => {\n      const {\n        lazy,\n        cssMode,\n        watchSlidesProgress,\n        touchReleaseOnEdges,\n        resistanceRatio\n      } = swiper.params;\n\n      if (lazy.enabled && (cssMode || watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0))) {\n        load();\n      }\n    });\n    Object.assign(swiper.lazy, {\n      load,\n      loadInSlide\n    });\n  }\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n\n  function Controller({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide' // or 'container'\n\n      }\n    });\n    swiper.controller = {\n      control: undefined\n    };\n\n    function LinearSpline(x, y) {\n      const binarySearch = function search() {\n        let maxIndex;\n        let minIndex;\n        let guess;\n        return (array, val) => {\n          minIndex = -1;\n          maxIndex = array.length;\n\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n\n          return maxIndex;\n        };\n      }();\n\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n\n      let i1;\n      let i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\n        return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n      };\n\n      return this;\n    } // xxx: for now i will just save one spline function to to\n\n\n    function getInterpolateFunction(c) {\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    }\n\n    function setTranslate(_t, byController) {\n      const controlled = swiper.controller.control;\n      let multiplier;\n      let controlledTranslate;\n      const Swiper = swiper.constructor;\n\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n\n        if (swiper.params.controller.by === 'slide') {\n          getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n\n      if (Array.isArray(controlled)) {\n        for (let i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    }\n\n    function setTransition(duration, byController) {\n      const Swiper = swiper.constructor;\n      const controlled = swiper.controller.control;\n      let i;\n\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n\n        if (duration !== 0) {\n          c.transitionStart();\n\n          if (c.params.autoHeight) {\n            nextTick(() => {\n              c.updateAutoHeight();\n            });\n          }\n\n          c.$wrapperEl.transitionEnd(() => {\n            if (!controlled) return;\n\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n\n            c.transitionEnd();\n          });\n        }\n      }\n\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    }\n\n    function removeSpline() {\n      if (!swiper.controller.control) return;\n\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    }\n\n    on('beforeInit', () => {\n      swiper.controller.control = swiper.params.controller.control;\n    });\n    on('update', () => {\n      removeSpline();\n    });\n    on('resize', () => {\n      removeSpline();\n    });\n    on('observerUpdate', () => {\n      removeSpline();\n    });\n    on('setTranslate', (_s, translate, byController) => {\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    });\n    on('setTransition', (_s, duration, byController) => {\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    });\n    Object.assign(swiper.controller, {\n      setTranslate,\n      setTransition\n    });\n  }\n\n  function A11y({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n        slideLabelMessage: '{{index}} / {{slidesLength}}',\n        containerMessage: null,\n        containerRoleDescriptionMessage: null,\n        itemRoleDescriptionMessage: null,\n        slideRole: 'group'\n      }\n    });\n    let liveRegion = null;\n\n    function notify(message) {\n      const notification = liveRegion;\n      if (notification.length === 0) return;\n      notification.html('');\n      notification.html(message);\n    }\n\n    function getRandomNumber(size = 16) {\n      const randomChar = () => Math.round(16 * Math.random()).toString(16);\n\n      return 'x'.repeat(size).replace(/x/g, randomChar);\n    }\n\n    function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n    }\n\n    function makeElNotFocusable($el) {\n      $el.attr('tabIndex', '-1');\n    }\n\n    function addElRole($el, role) {\n      $el.attr('role', role);\n    }\n\n    function addElRoleDescription($el, description) {\n      $el.attr('aria-roledescription', description);\n    }\n\n    function addElControls($el, controls) {\n      $el.attr('aria-controls', controls);\n    }\n\n    function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n    }\n\n    function addElId($el, id) {\n      $el.attr('id', id);\n    }\n\n    function addElLive($el, live) {\n      $el.attr('aria-live', live);\n    }\n\n    function disableEl($el) {\n      $el.attr('aria-disabled', true);\n    }\n\n    function enableEl($el) {\n      $el.attr('aria-disabled', false);\n    }\n\n    function onEnterOrSpaceKey(e) {\n      if (e.keyCode !== 13 && e.keyCode !== 32) return;\n      const params = swiper.params.a11y;\n      const $targetEl = $(e.target);\n\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n\n        if (swiper.isEnd) {\n          notify(params.lastSlideMessage);\n        } else {\n          notify(params.nextSlideMessage);\n        }\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n\n        if (swiper.isBeginning) {\n          notify(params.firstSlideMessage);\n        } else {\n          notify(params.prevSlideMessage);\n        }\n      }\n\n      if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {\n        $targetEl[0].click();\n      }\n    }\n\n    function updateNavigation() {\n      if (swiper.params.loop || !swiper.navigation) return;\n      const {\n        $nextEl,\n        $prevEl\n      } = swiper.navigation;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          disableEl($prevEl);\n          makeElNotFocusable($prevEl);\n        } else {\n          enableEl($prevEl);\n          makeElFocusable($prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          disableEl($nextEl);\n          makeElNotFocusable($nextEl);\n        } else {\n          enableEl($nextEl);\n          makeElFocusable($nextEl);\n        }\n      }\n    }\n\n    function hasPagination() {\n      return swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length;\n    }\n\n    function updatePagination() {\n      const params = swiper.params.a11y;\n\n      if (hasPagination()) {\n        swiper.pagination.bullets.each(bulletEl => {\n          const $bulletEl = $(bulletEl);\n          makeElFocusable($bulletEl);\n\n          if (!swiper.params.pagination.renderBullet) {\n            addElRole($bulletEl, 'button');\n            addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n          }\n        });\n      }\n    }\n\n    const initNavEl = ($el, wrapperId, message) => {\n      makeElFocusable($el);\n\n      if ($el[0].tagName !== 'BUTTON') {\n        addElRole($el, 'button');\n        $el.on('keydown', onEnterOrSpaceKey);\n      }\n\n      addElLabel($el, message);\n      addElControls($el, wrapperId);\n    };\n\n    function init() {\n      const params = swiper.params.a11y;\n      swiper.$el.append(liveRegion); // Container\n\n      const $containerEl = swiper.$el;\n\n      if (params.containerRoleDescriptionMessage) {\n        addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n      }\n\n      if (params.containerMessage) {\n        addElLabel($containerEl, params.containerMessage);\n      } // Wrapper\n\n\n      const $wrapperEl = swiper.$wrapperEl;\n      const wrapperId = $wrapperEl.attr('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n      const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n      addElId($wrapperEl, wrapperId);\n      addElLive($wrapperEl, live); // Slide\n\n      if (params.itemRoleDescriptionMessage) {\n        addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\n      }\n\n      addElRole($(swiper.slides), params.slideRole);\n      const slidesLength = swiper.params.loop ? swiper.slides.filter(el => !el.classList.contains(swiper.params.slideDuplicateClass)).length : swiper.slides.length;\n      swiper.slides.each((slideEl, index) => {\n        const $slideEl = $(slideEl);\n        const slideIndex = swiper.params.loop ? parseInt($slideEl.attr('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel($slideEl, ariaLabelMessage);\n      }); // Navigation\n\n      let $nextEl;\n      let $prevEl;\n\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n\n      if ($nextEl && $nextEl.length) {\n        initNavEl($nextEl, wrapperId, params.nextSlideMessage);\n      }\n\n      if ($prevEl && $prevEl.length) {\n        initNavEl($prevEl, wrapperId, params.prevSlideMessage);\n      } // Pagination\n\n\n      if (hasPagination()) {\n        swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n      }\n    }\n\n    function destroy() {\n      if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n      let $nextEl;\n      let $prevEl;\n\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n\n      if ($nextEl) {\n        $nextEl.off('keydown', onEnterOrSpaceKey);\n      }\n\n      if ($prevEl) {\n        $prevEl.off('keydown', onEnterOrSpaceKey);\n      } // Pagination\n\n\n      if (hasPagination()) {\n        swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n      }\n    }\n\n    on('beforeInit', () => {\n      liveRegion = $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`);\n    });\n    on('afterInit', () => {\n      if (!swiper.params.a11y.enabled) return;\n      init();\n      updateNavigation();\n    });\n    on('toEdge', () => {\n      if (!swiper.params.a11y.enabled) return;\n      updateNavigation();\n    });\n    on('fromEdge', () => {\n      if (!swiper.params.a11y.enabled) return;\n      updateNavigation();\n    });\n    on('paginationUpdate', () => {\n      if (!swiper.params.a11y.enabled) return;\n      updatePagination();\n    });\n    on('destroy', () => {\n      if (!swiper.params.a11y.enabled) return;\n      destroy();\n    });\n  }\n\n  function History({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      history: {\n        enabled: false,\n        root: '',\n        replaceState: false,\n        key: 'slides'\n      }\n    });\n    let initialized = false;\n    let paths = {};\n\n    const slugify = text => {\n      return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n    };\n\n    const getPathValues = urlOverride => {\n      const window = getWindow();\n      let location;\n\n      if (urlOverride) {\n        location = new URL(urlOverride);\n      } else {\n        location = window.location;\n      }\n\n      const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n      const total = pathArray.length;\n      const key = pathArray[total - 2];\n      const value = pathArray[total - 1];\n      return {\n        key,\n        value\n      };\n    };\n\n    const setHistory = (key, index) => {\n      const window = getWindow();\n      if (!initialized || !swiper.params.history.enabled) return;\n      let location;\n\n      if (swiper.params.url) {\n        location = new URL(swiper.params.url);\n      } else {\n        location = window.location;\n      }\n\n      const slide = swiper.slides.eq(index);\n      let value = slugify(slide.attr('data-history'));\n\n      if (swiper.params.history.root.length > 0) {\n        let root = swiper.params.history.root;\n        if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n        value = `${root}/${key}/${value}`;\n      } else if (!location.pathname.includes(key)) {\n        value = `${key}/${value}`;\n      }\n\n      const currentState = window.history.state;\n\n      if (currentState && currentState.value === value) {\n        return;\n      }\n\n      if (swiper.params.history.replaceState) {\n        window.history.replaceState({\n          value\n        }, null, value);\n      } else {\n        window.history.pushState({\n          value\n        }, null, value);\n      }\n    };\n\n    const scrollToSlide = (speed, value, runCallbacks) => {\n      if (value) {\n        for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n          const slide = swiper.slides.eq(i);\n          const slideHistory = slugify(slide.attr('data-history'));\n\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            const index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    };\n\n    const setHistoryPopState = () => {\n      paths = getPathValues(swiper.params.url);\n      scrollToSlide(swiper.params.speed, swiper.paths.value, false);\n    };\n\n    const init = () => {\n      const window = getWindow();\n      if (!swiper.params.history) return;\n\n      if (!window.history || !window.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n\n      initialized = true;\n      paths = getPathValues(swiper.params.url);\n      if (!paths.key && !paths.value) return;\n      scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n    };\n\n    const destroy = () => {\n      const window = getWindow();\n\n      if (!swiper.params.history.replaceState) {\n        window.removeEventListener('popstate', setHistoryPopState);\n      }\n    };\n\n    on('init', () => {\n      if (swiper.params.history.enabled) {\n        init();\n      }\n    });\n    on('destroy', () => {\n      if (swiper.params.history.enabled) {\n        destroy();\n      }\n    });\n    on('transitionEnd _freeModeNoMomentumRelease', () => {\n      if (initialized) {\n        setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    });\n    on('slideChange', () => {\n      if (initialized && swiper.params.cssMode) {\n        setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    });\n  }\n\n  function HashNavigation({\n    swiper,\n    extendParams,\n    emit,\n    on\n  }) {\n    let initialized = false;\n    const document = getDocument();\n    const window = getWindow();\n    extendParams({\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false\n      }\n    });\n\n    const onHashChange = () => {\n      emit('hashChange');\n      const newHash = document.location.hash.replace('#', '');\n      const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n\n      if (newHash !== activeSlideHash) {\n        const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n        if (typeof newIndex === 'undefined') return;\n        swiper.slideTo(newIndex);\n      }\n    };\n\n    const setHash = () => {\n      if (!initialized || !swiper.params.hashNavigation.enabled) return;\n\n      if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n        window.history.replaceState(null, null, `#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || '');\n        emit('hashSet');\n      } else {\n        const slide = swiper.slides.eq(swiper.activeIndex);\n        const hash = slide.attr('data-hash') || slide.attr('data-history');\n        document.location.hash = hash || '';\n        emit('hashSet');\n      }\n    };\n\n    const init = () => {\n      if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n      initialized = true;\n      const hash = document.location.hash.replace('#', '');\n\n      if (hash) {\n        const speed = 0;\n\n        for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n          const slide = swiper.slides.eq(i);\n          const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            const index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n\n      if (swiper.params.hashNavigation.watchState) {\n        $(window).on('hashchange', onHashChange);\n      }\n    };\n\n    const destroy = () => {\n      if (swiper.params.hashNavigation.watchState) {\n        $(window).off('hashchange', onHashChange);\n      }\n    };\n\n    on('init', () => {\n      if (swiper.params.hashNavigation.enabled) {\n        init();\n      }\n    });\n    on('destroy', () => {\n      if (swiper.params.hashNavigation.enabled) {\n        destroy();\n      }\n    });\n    on('transitionEnd _freeModeNoMomentumRelease', () => {\n      if (initialized) {\n        setHash();\n      }\n    });\n    on('slideChange', () => {\n      if (initialized && swiper.params.cssMode) {\n        setHash();\n      }\n    });\n  }\n  /* eslint no-underscore-dangle: \"off\" */\n\n\n  function Autoplay({\n    swiper,\n    extendParams,\n    on,\n    emit\n  }) {\n    let timeout;\n    swiper.autoplay = {\n      running: false,\n      paused: false\n    };\n    extendParams({\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n        pauseOnMouseEnter: false\n      }\n    });\n\n    function run() {\n      const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      let delay = swiper.params.autoplay.delay;\n\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n\n      clearTimeout(timeout);\n      timeout = nextTick(() => {\n        let autoplayResult;\n\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n            emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n            emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            emit('autoplay');\n          } else {\n            stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.isEnd) {\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n          emit('autoplay');\n        } else {\n          stop();\n        }\n\n        if (swiper.params.cssMode && swiper.autoplay.running) run();else if (autoplayResult === false) {\n          run();\n        }\n      }, delay);\n    }\n\n    function start() {\n      if (typeof timeout !== 'undefined') return false;\n      if (swiper.autoplay.running) return false;\n      swiper.autoplay.running = true;\n      emit('autoplayStart');\n      run();\n      return true;\n    }\n\n    function stop() {\n      if (!swiper.autoplay.running) return false;\n      if (typeof timeout === 'undefined') return false;\n\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n\n      swiper.autoplay.running = false;\n      emit('autoplayStop');\n      return true;\n    }\n\n    function pause(speed) {\n      if (!swiper.autoplay.running) return;\n      if (swiper.autoplay.paused) return;\n      if (timeout) clearTimeout(timeout);\n      swiper.autoplay.paused = true;\n\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        run();\n      } else {\n        ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n          swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);\n        });\n      }\n    }\n\n    function onVisibilityChange() {\n      const document = getDocument();\n\n      if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n        pause();\n      }\n\n      if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n        run();\n        swiper.autoplay.paused = false;\n      }\n    }\n\n    function onTransitionEnd(e) {\n      if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n      if (e.target !== swiper.$wrapperEl[0]) return;\n      ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n        swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n      });\n      swiper.autoplay.paused = false;\n\n      if (!swiper.autoplay.running) {\n        stop();\n      } else {\n        run();\n      }\n    }\n\n    function onMouseEnter() {\n      if (swiper.params.autoplay.disableOnInteraction) {\n        stop();\n      } else {\n        pause();\n      }\n\n      ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n        swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n      });\n    }\n\n    function onMouseLeave() {\n      if (swiper.params.autoplay.disableOnInteraction) {\n        return;\n      }\n\n      swiper.autoplay.paused = false;\n      run();\n    }\n\n    function attachMouseEvents() {\n      if (swiper.params.autoplay.pauseOnMouseEnter) {\n        swiper.$el.on('mouseenter', onMouseEnter);\n        swiper.$el.on('mouseleave', onMouseLeave);\n      }\n    }\n\n    function detachMouseEvents() {\n      swiper.$el.off('mouseenter', onMouseEnter);\n      swiper.$el.off('mouseleave', onMouseLeave);\n    }\n\n    on('init', () => {\n      if (swiper.params.autoplay.enabled) {\n        start();\n        const document = getDocument();\n        document.addEventListener('visibilitychange', onVisibilityChange);\n        attachMouseEvents();\n      }\n    });\n    on('beforeTransitionStart', (_s, speed, internal) => {\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          stop();\n        }\n      }\n    });\n    on('sliderFirstMove', () => {\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          stop();\n        } else {\n          pause();\n        }\n      }\n    });\n    on('touchEnd', () => {\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n        run();\n      }\n    });\n    on('destroy', () => {\n      detachMouseEvents();\n\n      if (swiper.autoplay.running) {\n        stop();\n      }\n\n      const document = getDocument();\n      document.removeEventListener('visibilitychange', onVisibilityChange);\n    });\n    Object.assign(swiper.autoplay, {\n      pause,\n      run,\n      start,\n      stop\n    });\n  }\n\n  function Thumb({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      thumbs: {\n        swiper: null,\n        multipleActiveThumbs: true,\n        autoScrollOffset: 0,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-thumbs'\n      }\n    });\n    let initialized = false;\n    let swiperCreated = false;\n    swiper.thumbs = {\n      swiper: null\n    };\n\n    function onThumbClick() {\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      const clickedIndex = thumbsSwiper.clickedIndex;\n      const clickedSlide = thumbsSwiper.clickedSlide;\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n      let slideToIndex;\n\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n\n      if (swiper.params.loop) {\n        let currentIndex = swiper.activeIndex;\n\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix(); // eslint-disable-next-line\n\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n\n        const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n        const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n        if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;\n      }\n\n      swiper.slideTo(slideToIndex);\n    }\n\n    function init() {\n      const {\n        thumbs: thumbsParams\n      } = swiper.params;\n      if (initialized) return false;\n      initialized = true;\n      const SwiperClass = swiper.constructor;\n\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        Object.assign(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n        Object.assign(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n      } else if (isObject(thumbsParams.swiper)) {\n        const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n        Object.assign(thumbsSwiperParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n        swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n        swiperCreated = true;\n      }\n\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', onThumbClick);\n      return true;\n    }\n\n    function update(initial) {\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n      const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n      const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n        let currentThumbsIndex = thumbsSwiper.activeIndex;\n        let newThumbsIndex;\n        let direction;\n\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix(); // eslint-disable-next-line\n\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          } // Find actual thumbs index to slide to\n\n\n          const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n          const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n\n          if (typeof prevThumbsIndex === 'undefined') {\n            newThumbsIndex = nextThumbsIndex;\n          } else if (typeof nextThumbsIndex === 'undefined') {\n            newThumbsIndex = prevThumbsIndex;\n          } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n            newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\n          } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n            newThumbsIndex = nextThumbsIndex;\n          } else {\n            newThumbsIndex = prevThumbsIndex;\n          }\n\n          direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n        } else {\n          newThumbsIndex = swiper.realIndex;\n          direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n        }\n\n        if (useOffset) {\n          newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n        }\n\n        if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) ;\n\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      } // Activate thumbs\n\n\n      let thumbsToActivate = 1;\n      const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      if (!swiper.params.thumbs.multipleActiveThumbs) {\n        thumbsToActivate = 1;\n      }\n\n      thumbsToActivate = Math.floor(thumbsToActivate);\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n\n      if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n        for (let i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n        }\n      } else {\n        for (let i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n        }\n      }\n    }\n\n    on('beforeInit', () => {\n      const {\n        thumbs\n      } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      init();\n      update(true);\n    });\n    on('slideChange update resize observerUpdate', () => {\n      if (!swiper.thumbs.swiper) return;\n      update();\n    });\n    on('setTransition', (_s, duration) => {\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    });\n    on('beforeDestroy', () => {\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n\n      if (swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    });\n    Object.assign(swiper.thumbs, {\n      init,\n      update\n    });\n  }\n\n  function freeMode({\n    swiper,\n    extendParams,\n    emit,\n    once\n  }) {\n    extendParams({\n      freeMode: {\n        enabled: false,\n        momentum: true,\n        momentumRatio: 1,\n        momentumBounce: true,\n        momentumBounceRatio: 1,\n        momentumVelocityRatio: 1,\n        sticky: false,\n        minimumVelocity: 0.02\n      }\n    });\n\n    function onTouchMove() {\n      const {\n        touchEventsData: data,\n        touches\n      } = swiper; // Velocity\n\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime\n        });\n      }\n\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: now()\n      });\n    }\n\n    function onTouchEnd({\n      currentPos\n    }) {\n      const {\n        params,\n        $wrapperEl,\n        rtlTranslate: rtl,\n        snapGrid,\n        touchEventsData: data\n      } = swiper; // Time diff\n\n      const touchEndTime = now();\n      const timeDiff = touchEndTime - data.touchStartTime;\n\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n\n        return;\n      }\n\n      if (params.freeMode.momentum) {\n        if (data.velocities.length > 1) {\n          const lastMoveEvent = data.velocities.pop();\n          const velocityEvent = data.velocities.pop();\n          const distance = lastMoveEvent.position - velocityEvent.position;\n          const time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n\n          if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n            swiper.velocity = 0;\n          } // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n\n\n          if (time > 150 || now() - lastMoveEvent.time > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n\n        swiper.velocity *= params.freeMode.momentumVelocityRatio;\n        data.velocities.length = 0;\n        let momentumDuration = 1000 * params.freeMode.momentumRatio;\n        const momentumDistance = swiper.velocity * momentumDuration;\n        let newPosition = swiper.translate + momentumDistance;\n        if (rtl) newPosition = -newPosition;\n        let doBounce = false;\n        let afterBouncePosition;\n        const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n        let needsLoopFix;\n\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeMode.momentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeMode.momentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\n        } else if (params.freeMode.sticky) {\n          let nextSlide;\n\n          for (let j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n\n          newPosition = -newPosition;\n        }\n\n        if (needsLoopFix) {\n          once('transitionEnd', () => {\n            swiper.loopFix();\n          });\n        } // Fix duration\n\n\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n\n          if (params.freeMode.sticky) {\n            // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n            // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n            // It's easy to see this when simulating touch with mouse events. To fix this,\n            // limit single-slide swipes to the default slide duration. This also has the\n            // nice side effect of matching slide speed if the user stopped moving before\n            // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n            // For faster swipes, also apply limits (albeit higher ones).\n            const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n            const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n            if (moveDistance < currentSlideSize) {\n              momentumDuration = params.speed;\n            } else if (moveDistance < 2 * currentSlideSize) {\n              momentumDuration = params.speed * 1.5;\n            } else {\n              momentumDuration = params.speed * 2.5;\n            }\n          }\n        } else if (params.freeMode.sticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeMode.momentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n            emit('momentumBounce');\n            swiper.setTransition(params.speed);\n            setTimeout(() => {\n              swiper.setTranslate(afterBouncePosition);\n              $wrapperEl.transitionEnd(() => {\n                if (!swiper || swiper.destroyed) return;\n                swiper.transitionEnd();\n              });\n            }, 0);\n          });\n        } else if (swiper.velocity) {\n          emit('_freeModeNoMomentumRelease');\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(() => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      } else if (params.freeMode) {\n        emit('_freeModeNoMomentumRelease');\n      }\n\n      if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n    }\n\n    Object.assign(swiper, {\n      freeMode: {\n        onTouchMove,\n        onTouchEnd\n      }\n    });\n  }\n\n  function Grid({\n    swiper,\n    extendParams\n  }) {\n    extendParams({\n      grid: {\n        rows: 1,\n        fill: 'column'\n      }\n    });\n    let slidesNumberEvenToRows;\n    let slidesPerRow;\n    let numFullColumns;\n\n    const initSlides = slidesLength => {\n      const {\n        slidesPerView\n      } = swiper.params;\n      const {\n        rows,\n        fill\n      } = swiper.params.grid;\n      slidesPerRow = slidesNumberEvenToRows / rows;\n      numFullColumns = Math.floor(slidesLength / rows);\n\n      if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n      }\n\n      if (slidesPerView !== 'auto' && fill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n      }\n    };\n\n    const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n      const {\n        slidesPerGroup,\n        spaceBetween\n      } = swiper.params;\n      const {\n        rows,\n        fill\n      } = swiper.params.grid; // Set slides order\n\n      let newSlideOrderIndex;\n      let column;\n      let row;\n\n      if (fill === 'row' && slidesPerGroup > 1) {\n        const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n        const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n        const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n        slide.css({\n          '-webkit-order': newSlideOrderIndex,\n          order: newSlideOrderIndex\n        });\n      } else if (fill === 'column') {\n        column = Math.floor(i / rows);\n        row = i - column * rows;\n\n        if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n          row += 1;\n\n          if (row >= rows) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - row * slidesPerRow;\n      }\n\n      slide.css(getDirectionLabel('margin-top'), row !== 0 ? spaceBetween && `${spaceBetween}px` : '');\n    };\n\n    const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n      const {\n        spaceBetween,\n        centeredSlides,\n        roundLengths\n      } = swiper.params;\n      const {\n        rows\n      } = swiper.params.grid;\n      swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n      swiper.$wrapperEl.css({\n        [getDirectionLabel('width')]: `${swiper.virtualSize + spaceBetween}px`\n      });\n\n      if (centeredSlides) {\n        snapGrid.splice(0, snapGrid.length);\n        const newSlidesGrid = [];\n\n        for (let i = 0; i < snapGrid.length; i += 1) {\n          let slidesGridItem = snapGrid[i];\n          if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n          if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n        }\n\n        snapGrid.push(...newSlidesGrid);\n      }\n    };\n\n    swiper.grid = {\n      initSlides,\n      updateSlide,\n      updateWrapperSize\n    };\n  }\n\n  function appendSlide(slides) {\n    const swiper = this;\n    const {\n      $wrapperEl,\n      params\n    } = swiper;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) $wrapperEl.append(slides[i]);\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!params.observer) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide(slides) {\n    const swiper = this;\n    const {\n      params,\n      $wrapperEl,\n      activeIndex\n    } = swiper;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    let newActiveIndex = activeIndex + 1;\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) $wrapperEl.prepend(slides[i]);\n      }\n\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!params.observer) {\n      swiper.update();\n    }\n\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide(index, slides) {\n    const swiper = this;\n    const {\n      $wrapperEl,\n      params,\n      activeIndex\n    } = swiper;\n    let activeIndexBuffer = activeIndex;\n\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n\n    const baseLength = swiper.slides.length;\n\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n\n    let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n    const slidesBuffer = [];\n\n    for (let i = baseLength - 1; i >= index; i -= 1) {\n      const currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) $wrapperEl.append(slides[i]);\n      }\n\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (let i = 0; i < slidesBuffer.length; i += 1) {\n      $wrapperEl.append(slidesBuffer[i]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!params.observer) {\n      swiper.update();\n    }\n\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide(slidesIndexes) {\n    const swiper = this;\n    const {\n      params,\n      $wrapperEl,\n      activeIndex\n    } = swiper;\n    let activeIndexBuffer = activeIndex;\n\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n\n    let newActiveIndex = activeIndexBuffer;\n    let indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (let i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n      }\n\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!params.observer) {\n      swiper.update();\n    }\n\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides() {\n    const swiper = this;\n    const slidesIndexes = [];\n\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  function Manipulation({\n    swiper\n  }) {\n    Object.assign(swiper, {\n      appendSlide: appendSlide.bind(swiper),\n      prependSlide: prependSlide.bind(swiper),\n      addSlide: addSlide.bind(swiper),\n      removeSlide: removeSlide.bind(swiper),\n      removeAllSlides: removeAllSlides.bind(swiper)\n    });\n  }\n\n  function effectInit(params) {\n    const {\n      effect,\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      overwriteParams,\n      perspective\n    } = params;\n    on('beforeInit', () => {\n      if (swiper.params.effect !== effect) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n\n      if (perspective && perspective()) {\n        swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      }\n\n      const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n      Object.assign(swiper.params, overwriteParamsResult);\n      Object.assign(swiper.originalParams, overwriteParamsResult);\n    });\n    on('setTranslate', () => {\n      if (swiper.params.effect !== effect) return;\n      setTranslate();\n    });\n    on('setTransition', (_s, duration) => {\n      if (swiper.params.effect !== effect) return;\n      setTransition(duration);\n    });\n  }\n\n  function effectTarget(effectParams, $slideEl) {\n    if (effectParams.transformEl) {\n      return $slideEl.find(effectParams.transformEl).css({\n        'backface-visibility': 'hidden',\n        '-webkit-backface-visibility': 'hidden'\n      });\n    }\n\n    return $slideEl;\n  }\n\n  function effectVirtualTransitionEnd({\n    swiper,\n    duration,\n    transformEl,\n    allSlides\n  }) {\n    const {\n      slides,\n      activeIndex,\n      $wrapperEl\n    } = swiper;\n\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      let $transitionEndTarget;\n\n      if (allSlides) {\n        $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;\n      } else {\n        $transitionEndTarget = transformEl ? slides.eq(activeIndex).find(transformEl) : slides.eq(activeIndex);\n      }\n\n      $transitionEndTarget.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  }\n\n  function EffectFade({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      fadeEffect: {\n        crossFade: false,\n        transformEl: null\n      }\n    });\n\n    const setTranslate = () => {\n      const {\n        slides\n      } = swiper;\n      const params = swiper.params.fadeEffect;\n\n      for (let i = 0; i < slides.length; i += 1) {\n        const $slideEl = swiper.slides.eq(i);\n        const offset = $slideEl[0].swiperSlideOffset;\n        let tx = -offset;\n        if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n        let ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n\n        const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        const $targetEl = effectTarget(params, $slideEl);\n        $targetEl.css({\n          opacity: slideOpacity\n        }).transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n      }\n    };\n\n    const setTransition = duration => {\n      const {\n        transformEl\n      } = swiper.params.fadeEffect;\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n      $transitionElements.transition(duration);\n      effectVirtualTransitionEnd({\n        swiper,\n        duration,\n        transformEl,\n        allSlides: true\n      });\n    };\n\n    effectInit({\n      effect: 'fade',\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      overwriteParams: () => ({\n        slidesPerView: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: !swiper.params.cssMode\n      })\n    });\n  }\n\n  function EffectCube({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94\n      }\n    });\n\n    const setTranslate = () => {\n      const {\n        $el,\n        $wrapperEl,\n        slides,\n        width: swiperWidth,\n        height: swiperHeight,\n        rtlTranslate: rtl,\n        size: swiperSize,\n        browser\n      } = swiper;\n      const params = swiper.params.cubeEffect;\n      const isHorizontal = swiper.isHorizontal();\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      let wrapperRotate = 0;\n      let $cubeShadowEl;\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n\n          $cubeShadowEl.css({\n            height: `${swiperWidth}px`\n          });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n\n      for (let i = 0; i < slides.length; i += 1) {\n        const $slideEl = slides.eq(i);\n        let slideIndex = i;\n\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n\n        let slideAngle = slideIndex * 90;\n        let round = Math.floor(slideAngle / 360);\n\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n\n        const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        let tx = 0;\n        let ty = 0;\n        let tz = 0;\n\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + round * 4 * swiperSize;\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = 3 * swiperSize + swiperSize * 4 * round;\n        }\n\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = slideIndex * 90 + progress * 90;\n          if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n        }\n\n        $slideEl.transform(transform);\n\n        if (params.slideShadows) {\n          // Set shadows\n          let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if (shadowBefore.length === 0) {\n            shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n            $slideEl.append(shadowBefore);\n          }\n\n          if (shadowAfter.length === 0) {\n            shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n            $slideEl.append(shadowAfter);\n          }\n\n          if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n          if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n        }\n      }\n\n      $wrapperEl.css({\n        '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n        'transform-origin': `50% 50% -${swiperSize / 2}px`\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n        } else {\n          const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n          const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n          const scale1 = params.shadowScale;\n          const scale2 = params.shadowScale / multiplier;\n          const offset = params.shadowOffset;\n          $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n        }\n      }\n\n      const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n      $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n    };\n\n    const setTransition = duration => {\n      const {\n        $el,\n        slides\n      } = swiper;\n      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    };\n\n    effectInit({\n      effect: 'cube',\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      perspective: () => true,\n      overwriteParams: () => ({\n        slidesPerView: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true\n      })\n    });\n  }\n\n  function createShadow(params, $slideEl, side) {\n    const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n    const $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;\n    let $shadowEl = $shadowContainer.children(`.${shadowClass}`);\n\n    if (!$shadowEl.length) {\n      $shadowEl = $(`<div class=\"swiper-slide-shadow${side ? `-${side}` : ''}\"></div>`);\n      $shadowContainer.append($shadowEl);\n    }\n\n    return $shadowEl;\n  }\n\n  function EffectFlip({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n        transformEl: null\n      }\n    });\n\n    const setTranslate = () => {\n      const {\n        slides,\n        rtlTranslate: rtl\n      } = swiper;\n      const params = swiper.params.flipEffect;\n\n      for (let i = 0; i < slides.length; i += 1) {\n        const $slideEl = slides.eq(i);\n        let progress = $slideEl[0].progress;\n\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n\n        const offset = $slideEl[0].swiperSlideOffset;\n        const rotate = -180 * progress;\n        let rotateY = rotate;\n        let rotateX = 0;\n        let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n        let ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (params.slideShadows) {\n          // Set shadows\n          let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if (shadowBefore.length === 0) {\n            shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\n          }\n\n          if (shadowAfter.length === 0) {\n            shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n          }\n\n          if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n          if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n        }\n\n        const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n        const $targetEl = effectTarget(params, $slideEl);\n        $targetEl.transform(transform);\n      }\n    };\n\n    const setTransition = duration => {\n      const {\n        transformEl\n      } = swiper.params.flipEffect;\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n      $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n      effectVirtualTransitionEnd({\n        swiper,\n        duration,\n        transformEl\n      });\n    };\n\n    effectInit({\n      effect: 'flip',\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      perspective: () => true,\n      overwriteParams: () => ({\n        slidesPerView: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: !swiper.params.cssMode\n      })\n    });\n  }\n\n  function EffectCoverflow({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        scale: 1,\n        modifier: 1,\n        slideShadows: true,\n        transformEl: null\n      }\n    });\n\n    const setTranslate = () => {\n      const {\n        width: swiperWidth,\n        height: swiperHeight,\n        slides,\n        slidesSizesGrid\n      } = swiper;\n      const params = swiper.params.coverflowEffect;\n      const isHorizontal = swiper.isHorizontal();\n      const transform = swiper.translate;\n      const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n      const rotate = isHorizontal ? params.rotate : -params.rotate;\n      const translate = params.depth; // Each slide offset from center\n\n      for (let i = 0, length = slides.length; i < length; i += 1) {\n        const $slideEl = slides.eq(i);\n        const slideSize = slidesSizesGrid[i];\n        const slideOffset = $slideEl[0].swiperSlideOffset;\n        const offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n        let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n        let translateZ = -translate * Math.abs(offsetMultiplier);\n        let stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n        if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n          stretch = parseFloat(params.stretch) / 100 * slideSize;\n        }\n\n        let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n        let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n        let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n        if (Math.abs(translateX) < 0.001) translateX = 0;\n        if (Math.abs(translateY) < 0.001) translateY = 0;\n        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n        if (Math.abs(scale) < 0.001) scale = 0;\n        const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n        const $targetEl = effectTarget(params, $slideEl);\n        $targetEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n        if (params.slideShadows) {\n          // Set shadows\n          let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');\n          }\n\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');\n          }\n\n          if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n          if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n        }\n      }\n    };\n\n    const setTransition = duration => {\n      const {\n        transformEl\n      } = swiper.params.coverflowEffect;\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n      $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    };\n\n    effectInit({\n      effect: 'coverflow',\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      perspective: () => true,\n      overwriteParams: () => ({\n        watchSlidesProgress: true\n      })\n    });\n  }\n\n  function EffectCreative({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      creativeEffect: {\n        transformEl: null,\n        limitProgress: 1,\n        shadowPerProgress: false,\n        progressMultiplier: 1,\n        perspective: true,\n        prev: {\n          translate: [0, 0, 0],\n          rotate: [0, 0, 0],\n          opacity: 1,\n          scale: 1\n        },\n        next: {\n          translate: [0, 0, 0],\n          rotate: [0, 0, 0],\n          opacity: 1,\n          scale: 1\n        }\n      }\n    });\n\n    const getTranslateValue = value => {\n      if (typeof value === 'string') return value;\n      return `${value}px`;\n    };\n\n    const setTranslate = () => {\n      const {\n        slides\n      } = swiper;\n      const params = swiper.params.creativeEffect;\n      const {\n        progressMultiplier: multiplier\n      } = params;\n\n      for (let i = 0; i < slides.length; i += 1) {\n        const $slideEl = slides.eq(i);\n        const slideProgress = $slideEl[0].progress;\n        const progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);\n        const offset = $slideEl[0].swiperSlideOffset;\n        const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n        const r = [0, 0, 0];\n        let custom = false;\n\n        if (!swiper.isHorizontal()) {\n          t[1] = t[0];\n          t[0] = 0;\n        }\n\n        let data = {\n          translate: [0, 0, 0],\n          rotate: [0, 0, 0],\n          scale: 1,\n          opacity: 1\n        };\n\n        if (progress < 0) {\n          data = params.next;\n          custom = true;\n        } else if (progress > 0) {\n          data = params.prev;\n          custom = true;\n        } // set translate\n\n\n        t.forEach((value, index) => {\n          t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n        }); // set rotates\n\n        r.forEach((value, index) => {\n          r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n        });\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n        const translateString = t.join(', ');\n        const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n        const scaleString = progress < 0 ? `scale(${1 + (1 - data.scale) * progress * multiplier})` : `scale(${1 - (1 - data.scale) * progress * multiplier})`;\n        const opacityString = progress < 0 ? 1 + (1 - data.opacity) * progress * multiplier : 1 - (1 - data.opacity) * progress * multiplier;\n        const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`; // Set shadows\n\n        if (custom && data.shadow || !custom) {\n          let $shadowEl = $slideEl.children('.swiper-slide-shadow');\n\n          if ($shadowEl.length === 0 && data.shadow) {\n            $shadowEl = createShadow(params, $slideEl);\n          }\n\n          if ($shadowEl.length) {\n            const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n            $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n          }\n        }\n\n        const $targetEl = effectTarget(params, $slideEl);\n        $targetEl.transform(transform).css({\n          opacity: opacityString\n        });\n\n        if (data.origin) {\n          $targetEl.css('transform-origin', data.origin);\n        }\n      }\n    };\n\n    const setTransition = duration => {\n      const {\n        transformEl\n      } = swiper.params.creativeEffect;\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n      $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n      effectVirtualTransitionEnd({\n        swiper,\n        duration,\n        transformEl,\n        allSlides: true\n      });\n    };\n\n    effectInit({\n      effect: 'creative',\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      perspective: () => swiper.params.creativeEffect.perspective,\n      overwriteParams: () => ({\n        watchSlidesProgress: true,\n        virtualTranslate: !swiper.params.cssMode\n      })\n    });\n  }\n\n  function EffectCards({\n    swiper,\n    extendParams,\n    on\n  }) {\n    extendParams({\n      cardsEffect: {\n        slideShadows: true,\n        transformEl: null\n      }\n    });\n\n    const setTranslate = () => {\n      const {\n        slides,\n        activeIndex\n      } = swiper;\n      const params = swiper.params.cardsEffect;\n      const {\n        startTranslate,\n        isTouched\n      } = swiper.touchEventsData;\n      const currentTranslate = swiper.translate;\n\n      for (let i = 0; i < slides.length; i += 1) {\n        const $slideEl = slides.eq(i);\n        const slideProgress = $slideEl[0].progress;\n        const progress = Math.min(Math.max(slideProgress, -4), 4);\n        let offset = $slideEl[0].swiperSlideOffset;\n\n        if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n          swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\n        }\n\n        if (swiper.params.centeredSlides && swiper.params.cssMode) {\n          offset -= slides[0].swiperSlideOffset;\n        }\n\n        let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n        let tY = 0;\n        const tZ = -100 * Math.abs(progress);\n        let scale = 1;\n        let rotate = -2 * progress;\n        let tXAdd = 8 - Math.abs(progress) * 0.75;\n        const isSwipeToNext = (i === activeIndex || i === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n        const isSwipeToPrev = (i === activeIndex || i === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n        if (isSwipeToNext || isSwipeToPrev) {\n          const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n          rotate += -28 * progress * subProgress;\n          scale += -0.5 * subProgress;\n          tXAdd += 96 * subProgress;\n          tY = `${-25 * subProgress * Math.abs(progress)}%`;\n        }\n\n        if (progress < 0) {\n          // next\n          tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n        } else if (progress > 0) {\n          // prev\n          tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n        } else {\n          tX = `${tX}px`;\n        }\n\n        if (!swiper.isHorizontal()) {\n          const prevY = tY;\n          tY = tX;\n          tX = prevY;\n        }\n\n        const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n        const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${rotate}deg)\n        scale(${scaleString})\n      `;\n\n        if (params.slideShadows) {\n          // Set shadows\n          let $shadowEl = $slideEl.find('.swiper-slide-shadow');\n\n          if ($shadowEl.length === 0) {\n            $shadowEl = createShadow(params, $slideEl);\n          }\n\n          if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n        const $targetEl = effectTarget(params, $slideEl);\n        $targetEl.transform(transform);\n      }\n    };\n\n    const setTransition = duration => {\n      const {\n        transformEl\n      } = swiper.params.cardsEffect;\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n      $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n      effectVirtualTransitionEnd({\n        swiper,\n        duration,\n        transformEl\n      });\n    };\n\n    effectInit({\n      effect: 'cards',\n      swiper,\n      on,\n      setTranslate,\n      setTransition,\n      perspective: () => true,\n      overwriteParams: () => ({\n        watchSlidesProgress: true,\n        virtualTranslate: !swiper.params.cssMode\n      })\n    });\n  } // Swiper Class\n\n\n  const modules = [Virtual, Keyboard, Mousewheel, Navigation, Pagination, Scrollbar, Parallax, Zoom, Lazy, Controller, A11y, History, HashNavigation, Autoplay, Thumb, freeMode, Grid, Manipulation, EffectFade, EffectCube, EffectFlip, EffectCoverflow, EffectCreative, EffectCards];\n  Swiper.use(modules);\n  return Swiper;\n});","map":{"version":3,"sources":["../node_modules/ssr-window/ssr-window.esm.js","../node_modules/dom7/dom7.esm.js","../src/shared/dom.js","../src/shared/utils.js","../src/shared/get-support.js","../src/shared/get-device.js","../src/shared/get-browser.js","../src/core/modules/resize/resize.js","../src/core/modules/observer/observer.js","../src/core/events-emitter.js","../src/core/update/updateSize.js","../src/core/update/updateSlides.js","../src/core/update/updateAutoHeight.js","../src/core/update/updateSlidesOffset.js","../src/core/update/updateSlidesProgress.js","../src/core/update/updateProgress.js","../src/core/update/updateSlidesClasses.js","../src/core/update/updateActiveIndex.js","../src/core/update/updateClickedSlide.js","../src/core/update/index.js","../src/core/translate/getTranslate.js","../src/core/translate/setTranslate.js","../src/core/translate/minTranslate.js","../src/core/translate/maxTranslate.js","../src/core/translate/translateTo.js","../src/core/translate/index.js","../src/core/transition/setTransition.js","../src/core/transition/transitionEmit.js","../src/core/transition/transitionStart.js","../src/core/transition/transitionEnd.js","../src/core/transition/index.js","../src/core/slide/slideTo.js","../src/core/slide/slideToLoop.js","../src/core/slide/slideNext.js","../src/core/slide/slidePrev.js","../src/core/slide/slideReset.js","../src/core/slide/slideToClosest.js","../src/core/slide/slideToClickedSlide.js","../src/core/slide/index.js","../src/core/loop/loopCreate.js","../src/core/loop/loopFix.js","../src/core/loop/loopDestroy.js","../src/core/loop/index.js","../src/core/grab-cursor/setGrabCursor.js","../src/core/grab-cursor/unsetGrabCursor.js","../src/core/grab-cursor/index.js","../src/core/events/onTouchStart.js","../src/core/events/onTouchMove.js","../src/core/events/onTouchEnd.js","../src/core/events/onResize.js","../src/core/events/onClick.js","../src/core/events/onScroll.js","../src/core/events/index.js","../src/core/breakpoints/setBreakpoint.js","../src/core/breakpoints/getBreakpoint.js","../src/core/breakpoints/index.js","../src/core/classes/addClasses.js","../src/core/classes/removeClasses.js","../src/core/classes/index.js","../src/core/images/loadImage.js","../src/core/images/preloadImages.js","../src/core/images/index.js","../src/core/check-overflow/index.js","../src/core/defaults.js","../src/core/moduleExtendParams.js","../src/core/core.js","../src/modules/virtual/virtual.js","../src/modules/keyboard/keyboard.js","../src/modules/mousewheel/mousewheel.js","../src/shared/create-element-if-not-defined.js","../src/modules/navigation/navigation.js","../src/shared/classes-to-selector.js","../src/modules/pagination/pagination.js","../src/modules/scrollbar/scrollbar.js","../src/modules/parallax/parallax.js","../src/modules/zoom/zoom.js","../src/modules/lazy/lazy.js","../src/modules/controller/controller.js","../src/modules/a11y/a11y.js","../src/modules/history/history.js","../src/modules/hash-navigation/hash-navigation.js","../src/modules/autoplay/autoplay.js","../src/modules/thumbs/thumbs.js","../src/modules/free-mode/free-mode.js","../src/modules/grid/grid.js","../src/modules/manipulation/methods/appendSlide.js","../src/modules/manipulation/methods/prependSlide.js","../src/modules/manipulation/methods/addSlide.js","../src/modules/manipulation/methods/removeSlide.js","../src/modules/manipulation/methods/removeAllSlides.js","../src/modules/manipulation/manipulation.js","../src/shared/effect-init.js","../src/shared/effect-target.js","../src/shared/effect-virtual-transition-end.js","../src/modules/effect-fade/effect-fade.js","../src/modules/effect-cube/effect-cube.js","../src/shared/create-shadow.js","../src/modules/effect-flip/effect-flip.js","../src/modules/effect-coverflow/effect-coverflow.js","../src/modules/effect-creative/effect-creative.js","../src/modules/effect-cards/effect-cards.js","../src/swiper.js"],"names":["obj","target","src","Object","key","isObject","extend","ssrDocument","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","doc","ssrWindow","document","navigator","userAgent","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","win","proto","get","set","constructor","items","makeReactive","arr","res","el","Array","arrayFlat","uniqueArray","i","a","context","window","getWindow","getDocument","selector","html","toCreate","tempParent","qsa","arrayUnique","$","Dom7","classNames","classes","c","className","arguments","attrs","duration","args","targetSelector","capture","e","eventData","listener","parents","k","events","eventType","j","event","proxyListener","handleEvent","handleLiveEvent","handlers","handler","evt","detail","bubbles","cancelable","dataIndex","dom","styles","parseFloat","box","clientTop","clientLeft","scrollTop","scrollLeft","top","left","props","result","arrayFilter","compareWith","child","length","index","returnIndex","els","newChild","tempDiv","nextEls","next","prevEls","prev","parent","closest","foundElements","found","Methods","transition","transitionEnd","remove","methodName","value","writable","object","delay","axis","curStyle","curTransform","transformMatrix","matrix","o","node","to","noExtend","nextSource","isNode","keysArray","nextIndex","len","nextKey","desc","side","startPosition","swiper","startTime","dir","targetPosition","isOutOfBound","current","animate","time","progress","Math","easeProgress","currentPosition","smoothScroll","touch","passiveListener","supportsPassive","opts","gestures","support","calcSupport","getSupport","platform","ua","device","ios","android","screenWidth","screenHeight","ipad","ipod","iphone","windows","macos","iPadScreens","overrides","deviceCached","calcDevice","isSafari","isWebView","browser","calcBrowser","emit","observer","resizeHandler","createObserver","entries","height","newWidth","newHeight","contentRect","contentBoxSize","removeObserver","orientationChangeHandler","on","observers","attach","options","ObserverFunc","mutations","observerUpdate","attributes","childList","characterData","init","containerParents","observeSlideChildren","destroy","extendParams","observeParents","self","method","priority","once","onceHandler","onAny","offAny","off","eventHandler","data","eventsArray","$el","width","parseInt","Number","size","getDirectionLabel","params","rtlTranslate","wrongRTL","isVirtual","previousSlidesLength","slides","$wrapperEl","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","offsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","marginLeft","marginBottom","marginTop","marginRight","setCSSProperty","gridEnabled","shouldResetSlideSize","slideSize","slide","slideStyles","currentTransform","currentWebKitTransform","getDirectionPropertyValue","paddingLeft","paddingRight","boxSizing","offsetWidth","swiperSize","rtl","newSlidesGrid","slidesGridItem","slideIndex","allSlidesSize","slideSizeValue","maxSnap","snap","allSlidesOffset","addToSnapGrid","addToSlidesGrid","v","activeSlides","speed","getSlideByIndex","translate","offsetCenter","slideOffset","slideProgress","slideBefore","slideAfter","isVisible","multiplier","translatesDiff","isEnd","wasBeginning","wasEnd","isBeginning","realIndex","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","activeSlide","activeIndex","slideDuplicateClass","nextSlide","prevSlide","snapIndex","previousSnapIndex","skip","previousRealIndex","slideFound","updateClickedSlide","currentTranslate","getTranslate","x","y","z","wrapperEl","newProgress","runCallbacks","translateBounds","minTranslate","maxTranslate","newTranslate","isH","animateCSSModeScroll","behavior","translateTo","step","previousIndex","transitionEmit","indexAsNumber","isValidNumber","isFinite","enabled","normalizedTranslate","normalizedGrid","normalizedGridNext","direction","t","newIndex","perGroup","increment","animating","val","normalize","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","threshold","currentSnap","nextSnap","slidesPerView","slideToIndex","nextTick","slideToClickedSlide","blankSlidesNum","blankNode","slideBlankClass","prependSlides","appendSlides","snapTranslate","diff","loopedSlides","slideChanged","loopDestroy","moving","unsetGrabCursor","base","__closestFrom","$targetEl","swipingClassHasValue","noSwipingSelector","noSwipingClass","isTargetShadow","closestElement","touches","startX","startY","edgeSwipeDetection","edgeSwipeThreshold","isTouched","isMoved","allowTouchCallbacks","isScrolling","startMoving","undefined","now","preventDefault","shouldPreventDefault","targetTouch","pageX","pageY","currentX","currentY","diffX","diffY","touchAngle","disableParentSwiper","resistanceRatio","touchEndTime","timeDiff","currentPos","stopIndex","groupSize","ratio","isNavButtonTarget","dummyEventAttached","domMethod","swiperMethod","touchEvents","passive","onTouchStart","onTouchMove","onTouchEnd","onScroll","onClick","detachEvents","isGridEnabled","breakpoints","breakpoint","breakpointOnlyParams","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","containerModifierClass","directionChanged","needsReLoop","isEnabled","allowTouchMove","allowSlideNext","allowSlidePrev","currentHeight","containerEl","points","point","minRatio","b","getBreakpoint","resultClasses","item","prefix","suffixes","prepareClasses","autoHeight","cssMode","centeredSlides","removeClasses","isPicture","imageEl","image","onReady","preloadImages","isLocked","slidesOffsetBefore","lastSlideIndex","lastSlideRightEdge","wasLocked","checkOverflow","touchEventsTarget","initialSlide","updateOnWindowResize","resizeObserver","nested","createElements","focusableElements","preventInteractionOnTransition","url","setWrapperSize","virtualTranslate","effect","breakpointsBase","slidesPerGroup","slidesPerGroupSkip","slidesPerGroupAuto","centeredSlidesBounds","slidesOffsetAfter","normalizeSlideIndex","centerInsufficientSlides","watchOverflow","roundLengths","touchRatio","simulateTouch","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","watchSlidesProgress","grabCursor","preventClicks","preventClicksPropagation","updateOnImagesReady","loop","loopAdditionalSlides","loopFillGroupWithBlank","loopPreventsSlide","swipeHandler","noSwiping","passiveListeners","slideVisibleClass","wrapperClass","runCallbacksOnInit","_emitClasses","moduleParamName","moduleParams","auto","prototypes","images","extendedDefaults","swipers","newParams","getDevice","getBrowser","allModulesParams","mod","moduleExtendParams","swiperParams","eventName","isHorizontal","isVertical","previousTranslate","velocity","desktop","start","move","end","cancel","touchEventsData","touchStartTime","startTranslate","allowThresholdMove","lastClickTime","clickTimeout","velocities","allowMomentumBounce","isTouchEvent","allowClick","imagesToLoad","imagesLoaded","enable","disable","setProgress","min","max","emitContainerClasses","cls","getSlideClasses","emitSlidesClasses","updates","slideEl","slidesPerViewDynamic","view","exact","spv","breakLoop","slideInView","update","translateValue","setTranslate","translated","changeDirection","needUpdate","currentDirection","newDirection","mount","getWrapperSelector","getWrapper","wrapper","mounted","deleteInstance","cleanStyles","deleteProps","extendDefaults","defaults","installModule","Swiper","modules","use","module","m","prototypeGroup","protoMethod","virtual","cache","renderSlide","renderExternal","renderExternalUpdate","addSlidesBefore","addSlidesAfter","from","offset","$slideEl","previousOffset","offsetProp","slidesAfter","slidesBefore","previousFrom","previousTo","slidesToRender","onRendered","prependIndexes","appendIndexes","newActiveIndex","numberOfNewSlides","newCache","cachedIndex","$cachedEl","cachedElIndex","slidesIndexes","cssModeTimeout","virtualSize","keyboard","onlyInViewport","pageUpDown","kc","isPageUp","isPageDown","isArrowLeft","isArrowRight","isArrowUp","isArrowDown","inView","swiperWidth","swiperHeight","windowWidth","windowHeight","swiperOffset","swiperCoord","mousewheel","releaseOnEdges","invert","forceToAxis","sensitivity","eventsTarget","thresholdDelta","thresholdTime","lastScrollTime","recentWheelEvents","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","spinX","spinY","pixelX","pixelY","newEvent","delta","rtlFactor","positions","raw","prevEvent","animateSlider","releaseScroll","ignoreWheelEvents","lastEventBeforeSnap","position","timeout","firstEvent","snapToThreshold","element","checkProps","originalParams","navigation","nextEl","prevEl","hideOnClick","disabledClass","hiddenClass","lockClass","$nextEl","$prevEl","disabled","toggleEl","createElementIfNotDefined","getEl","targetEl","isHidden","pfx","pagination","bulletElement","clickable","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","type","dynamicBullets","dynamicMainBullets","formatFractionCurrent","number","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","progressbarFillClass","progressbarOppositeClass","clickableClass","horizontalClass","verticalClass","bullets","dynamicBulletIndex","$bulletEl","isPaginationDisabled","total","bulletSize","firstIndex","lastIndex","midIndex","suffix","bullet","$bullet","bulletIndex","setSideBullets","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","classesToSelector","progressbarDirection","scale","scaleX","scaleY","paginationHTML","numberOfBullets","render","dragTimeout","scrollbar","dragSize","hide","draggable","snapOnRelease","dragClass","dragEl","$dragEl","newSize","newPos","trackSize","divider","positionRatio","getPointerPosition","dragStartPos","setDragPosition","activeListener","eventMethod","touchEventsDesktop","touchEventsTouch","$swiperEl","enableDraggable","disableDraggable","updateSize","setTransition","parallax","setTransform","p","opacity","currentOpacity","currentScale","parallaxEl","$parallaxEl","parallaxDuration","zoom","maxRatio","toggle","containerClass","zoomedSlideClass","isScaling","gesture","slideWidth","slideHeight","$imageEl","$imageWrapEl","minX","minY","maxX","maxY","touchesStart","touchesCurrent","prevPositionX","prevPositionY","prevTime","x1","y1","x2","y2","distance","fakeGestureTouched","fakeGestureMoved","getDistanceBetweenTouches","onGestureStart","scaledWidth","scaledHeight","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","momentumDuration","touchX","touchY","offsetX","offsetY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","translateX","translateY","zoomOut","zoomIn","activeListenerWithCapture","getListeners","slideSelector","getSlideSelector","gesturesEnabled","toggleGestures","zoomToggle","onTransitionEnd","in","out","lazy","checkInView","loadPrevNext","loadPrevNextAmount","loadOnTransitionStart","scrollingElement","elementClass","loadingClass","loadedClass","preloaderClass","scrollHandlerAttached","initialImageLoaded","loadInDuplicate","$images","background","srcset","sizes","$pictureEl","sourceEl","$source","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","amount","maxIndex","minIndex","$scrollElement","isWindow","scrollElementWidth","scrollElementHeight","load","checkInViewOnLoad","controller","control","inverse","by","binarySearch","array","guess","i3","i1","controlled","getInterpolateFunction","controlledTranslate","setControlledTranslate","byController","setControlledTransition","removeSpline","a11y","notificationClass","prevSlideMessage","nextSlideMessage","firstSlideMessage","lastSlideMessage","paginationBulletMessage","slideLabelMessage","containerMessage","containerRoleDescriptionMessage","itemRoleDescriptionMessage","slideRole","liveRegion","notification","randomChar","notify","disableEl","makeElNotFocusable","enableEl","makeElFocusable","hasPagination","bulletEl","addElRole","addElLabel","initNavEl","addElControls","$containerEl","addElRoleDescription","wrapperId","getRandomNumber","live","addElId","addElLive","ariaLabelMessage","updateNavigation","updatePagination","root","initialized","paths","slugify","text","getPathValues","urlOverride","pathArray","part","setHistory","currentState","scrollToSlide","slideHistory","setHistoryPopState","hashNavigation","watchState","onHashChange","newHash","activeSlideHash","setHash","slideHash","running","paused","autoplay","waitForTransition","disableOnInteraction","stopOnLastSlide","reverseDirection","pauseOnMouseEnter","$activeSlideEl","autoplayResult","stop","run","pause","attachMouseEvents","internal","detachMouseEvents","thumbs","multipleActiveThumbs","autoScrollOffset","slideThumbActiveClass","thumbsContainerClass","swiperCreated","thumbsSwiper","clickedIndex","clickedSlide","currentIndex","thumbsParams","SwiperClass","thumbsSwiperParams","useOffset","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","newThumbsIndex","initial","thumbsToActivate","thumbActiveClass","freeMode","momentum","momentumRatio","momentumBounce","momentumBounceRatio","momentumVelocityRatio","sticky","minimumVelocity","lastMoveEvent","velocityEvent","momentumDistance","newPosition","doBounce","bounceAmount","afterBouncePosition","needsLoopFix","moveDistance","currentSlideSize","grid","rows","fill","initSlides","slidesPerRow","slidesNumberEvenToRows","numFullColumns","updateSlide","groupIndex","slideIndexInGroup","columnsInGroup","row","column","newSlideOrderIndex","order","updateWrapperSize","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","indexToRemove","appendSlide","prependSlide","addSlide","removeSlide","removeAllSlides","perspective","overwriteParamsResult","overwriteParams","effectParams","allSlides","eventTriggered","$transitionEndTarget","transformEl","triggerEvents","fadeEffect","crossFade","tx","ty","slideOpacity","effectTarget","$transitionElements","effectVirtualTransitionEnd","effectInit","cubeEffect","slideShadows","shadow","shadowOffset","shadowScale","wrapperRotate","$cubeShadowEl","slideAngle","round","tz","transform","shadowBefore","shadowAfter","shadowAngle","scale1","scale2","zFactor","shadowClass","$shadowContainer","$shadowEl","flipEffect","limitRotation","rotate","rotateY","rotateX","createShadow","coverflowEffect","stretch","depth","modifier","center","offsetMultiplier","translateZ","slideTransform","$shadowBeforeEl","$shadowAfterEl","creativeEffect","limitProgress","shadowPerProgress","progressMultiplier","getTranslateValue","r","custom","translateString","rotateString","scaleString","opacityString","shadowOpacity","cardsEffect","tX","tY","tZ","tXAdd","isSwipeToNext","isSwipeToPrev","subProgress","prevY"],"mappings":"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","sourcesContent":["/**\n * SSR Window 4.0.0\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: August 25, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","/**\n * Dom7 4.0.0\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * https://framework7.io/docs/dom7.html\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: August 25, 2021\n */\nimport { getWindow, getDocument } from 'ssr-window';\n\n/* eslint-disable no-proto */\nfunction makeReactive(obj) {\n  const proto = obj.__proto__;\n  Object.defineProperty(obj, '__proto__', {\n    get() {\n      return proto;\n    },\n\n    set(value) {\n      proto.__proto__ = value;\n    }\n\n  });\n}\n\nclass Dom7 extends Array {\n  constructor(items) {\n    super(...(items || []));\n    makeReactive(this);\n  }\n\n}\n\nfunction arrayFlat(arr = []) {\n  const res = [];\n  arr.forEach(el => {\n    if (Array.isArray(el)) {\n      res.push(...arrayFlat(el));\n    } else {\n      res.push(el);\n    }\n  });\n  return res;\n}\nfunction arrayFilter(arr, callback) {\n  return Array.prototype.filter.call(arr, callback);\n}\nfunction arrayUnique(arr) {\n  const uniqueArray = [];\n\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group) => group.toUpperCase());\n}\n\n// eslint-disable-next-line\n\nfunction qsa(selector, context) {\n  if (typeof selector !== 'string') {\n    return [selector];\n  }\n\n  const a = [];\n  const res = context.querySelectorAll(selector);\n\n  for (let i = 0; i < res.length; i += 1) {\n    a.push(res[i]);\n  }\n\n  return a;\n}\n\nfunction $(selector, context) {\n  const window = getWindow();\n  const document = getDocument();\n  let arr = [];\n\n  if (!context && selector instanceof Dom7) {\n    return selector;\n  }\n\n  if (!selector) {\n    return new Dom7(arr);\n  }\n\n  if (typeof selector === 'string') {\n    const html = selector.trim();\n\n    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n      let toCreate = 'div';\n      if (html.indexOf('<li') === 0) toCreate = 'ul';\n      if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n      if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n      if (html.indexOf('<tbody') === 0) toCreate = 'table';\n      if (html.indexOf('<option') === 0) toCreate = 'select';\n      const tempParent = document.createElement(toCreate);\n      tempParent.innerHTML = html;\n\n      for (let i = 0; i < tempParent.childNodes.length; i += 1) {\n        arr.push(tempParent.childNodes[i]);\n      }\n    } else {\n      arr = qsa(selector.trim(), context || document);\n    } // arr = qsa(selector, document);\n\n  } else if (selector.nodeType || selector === window || selector === document) {\n    arr.push(selector);\n  } else if (Array.isArray(selector)) {\n    if (selector instanceof Dom7) return selector;\n    arr = selector;\n  }\n\n  return new Dom7(arrayUnique(arr));\n}\n\n$.fn = Dom7.prototype;\n\n// eslint-disable-next-line\n\nfunction addClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    el.classList.add(...classNames);\n  });\n  return this;\n}\n\nfunction removeClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    el.classList.remove(...classNames);\n  });\n  return this;\n}\n\nfunction toggleClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    classNames.forEach(className => {\n      el.classList.toggle(className);\n    });\n  });\n}\n\nfunction hasClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  return arrayFilter(this, el => {\n    return classNames.filter(className => el.classList.contains(className)).length > 0;\n  }).length > 0;\n}\n\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  } // Set attrs\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n\n  return this;\n}\n\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction data(key, value) {\n  let el;\n\n  if (typeof value === 'undefined') {\n    el = this[0];\n    if (!el) return undefined; // Get value\n\n    if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {\n      return el.dom7ElementDataStorage[key];\n    }\n\n    const dataKey = el.getAttribute(`data-${key}`);\n\n    if (dataKey) {\n      return dataKey;\n    }\n\n    return undefined;\n  } // Set value\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n\n  return this;\n}\n\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\n\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n\n  if (el.dataset) {\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      const attr = el.attributes[i];\n\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;else if (dataset[key] === 'true') dataset[key] = true;else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n\n  return dataset;\n}\n\nfunction val(value) {\n  if (typeof value === 'undefined') {\n    // get value\n    const el = this[0];\n    if (!el) return undefined;\n\n    if (el.multiple && el.nodeName.toLowerCase() === 'select') {\n      const values = [];\n\n      for (let i = 0; i < el.selectedOptions.length; i += 1) {\n        values.push(el.selectedOptions[i].value);\n      }\n\n      return values;\n    }\n\n    return el.value;\n  } // set value\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n\n  return this;\n}\n\nfunction value(value) {\n  return this.val(value);\n}\n\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.transform = transform;\n  }\n\n  return this;\n}\n\nfunction transition(duration) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.transitionDuration = typeof duration !== 'string' ? `${duration}ms` : duration;\n  }\n\n  return this;\n}\n\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n      const parents = $(target).parents(); // eslint-disable-line\n\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    listener.apply(this, eventData);\n  }\n\n  const events = eventType.split(' ');\n  let j;\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n  const events = eventType.split(' ');\n\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\n\nfunction trigger(...args) {\n  const window = getWindow();\n  const events = args[0].split(' ');\n  const eventData = args[1];\n\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n\n      if (window.CustomEvent) {\n        const evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true\n        });\n        el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction transitionEnd(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('transitionend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('transitionend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction animationEnd(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('animationend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('animationend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction width() {\n  const window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\n\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n\n    return this[0].offsetWidth;\n  }\n\n  return null;\n}\n\nfunction height() {\n  const window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\n\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n\n    return this[0].offsetHeight;\n  }\n\n  return null;\n}\n\nfunction offset() {\n  if (this.length > 0) {\n    const window = getWindow();\n    const document = getDocument();\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: box.top + scrollTop - clientTop,\n      left: box.left + scrollLeft - clientLeft\n    };\n  }\n\n  return null;\n}\n\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n\n  return this;\n}\n\nfunction show() {\n  const window = getWindow();\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n\n  return this;\n}\n\nfunction styles() {\n  const window = getWindow();\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\n\nfunction css(props, value) {\n  const window = getWindow();\n  let i;\n\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      // .css('width')\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      // .css({ width: '100px' })\n      for (i = 0; i < this.length; i += 1) {\n        for (const prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n\n      return this;\n    }\n  }\n\n  if (arguments.length === 2 && typeof props === 'string') {\n    // .css('width', '100px')\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction each(callback) {\n  if (!callback) return this;\n  this.forEach((el, index) => {\n    callback.apply(el, [el, index]);\n  });\n  return this;\n}\n\nfunction filter(callback) {\n  const result = arrayFilter(this, callback);\n  return $(result);\n}\n\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n\n  return this;\n}\n\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    return this[0] ? this[0].textContent.trim() : null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n\n  return this;\n}\n\nfunction is(selector) {\n  const window = getWindow();\n  const document = getDocument();\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n    compareWith = $(selector);\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  if (selector === document) {\n    return el === document;\n  }\n\n  if (selector === window) {\n    return el === window;\n  }\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  return false;\n}\n\nfunction index() {\n  let child = this[0];\n  let i;\n\n  if (child) {\n    i = 0; // eslint-disable-next-line\n\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n\n    return i;\n  }\n\n  return undefined;\n}\n\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n\n  if (index > length - 1) {\n    return $([]);\n  }\n\n  if (index < 0) {\n    const returnIndex = length + index;\n    if (returnIndex < 0) return $([]);\n    return $([this[returnIndex]]);\n  }\n\n  return $([this[index]]);\n}\n\nfunction append(...els) {\n  let newChild;\n  const document = getDocument();\n\n  for (let k = 0; k < els.length; k += 1) {\n    newChild = els[k];\n\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\n\nfunction prepend(newChild) {\n  const document = getDocument();\n  let i;\n  let j;\n\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n\n  return this;\n}\n\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\n\nfunction insertBefore(selector) {\n  const before = $(selector);\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\n\nfunction insertAfter(selector) {\n  const after = $(selector);\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\n\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return $([this[0].nextElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return $([]);\n\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n\n    el = next;\n  }\n\n  return $(nextEls);\n}\n\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return $([el.previousElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (el.previousElementSibling) return $([el.previousElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return $([]);\n\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n\n    el = prev;\n  }\n\n  return $(prevEls);\n}\n\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\n\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n\n  return $(parents);\n}\n\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n\n      parent = parent.parentNode;\n    }\n  }\n\n  return $(parents);\n}\n\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n\n  if (typeof selector === 'undefined') {\n    return $([]);\n  }\n\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n\n  return closest;\n}\n\nfunction find(selector) {\n  const foundElements = [];\n\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n\n  return $(foundElements);\n}\n\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].children;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector || $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n\n  return $(children);\n}\n\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n\n  return this;\n}\n\nfunction detach() {\n  return this.remove();\n}\n\nfunction add(...els) {\n  const dom = this;\n  let i;\n  let j;\n\n  for (i = 0; i < els.length; i += 1) {\n    const toAdd = $(els[i]);\n\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom.push(toAdd[j]);\n    }\n  }\n\n  return dom;\n}\n\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n\n      el.textContent = '';\n    }\n  }\n\n  return this;\n}\n\n// eslint-disable-next-line\n\nfunction scrollTo(...args) {\n  const window = getWindow();\n  let [left, top, duration, easing, callback] = args;\n\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n\n  if (typeof easing === 'undefined') easing = 'swing';\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n\n    let scrollLeft; // eslint-disable-line\n\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n\n    if (animateTop) {\n      currentTop = el.scrollTop;\n\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n\n    if (!duration) return;\n\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : 0.5 - Math.cos(progress * Math.PI) / 2;\n      let done;\n      if (animateTop) scrollTop = currentTop + easeProgress * (newTop - currentTop);\n      if (animateLeft) scrollLeft = currentLeft + easeProgress * (newLeft - currentLeft);\n\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      window.requestAnimationFrame(render);\n    }\n\n    window.requestAnimationFrame(render);\n  });\n} // scrollTop(top, duration, easing, callback) {\n\n\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n\n  const dom = this;\n\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\n\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n\n  const dom = this;\n\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\n// eslint-disable-next-line\n\nfunction animate(initialProps, initialParams) {\n  const window = getWindow();\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing' // or 'linear'\n\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n\n    }, initialParams),\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - Math.cos(progress * Math.PI) / 2;\n      }\n\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n\n      return progress;\n    },\n\n    stop() {\n      if (a.frameId) {\n        window.cancelAnimationFrame(a.frameId);\n      }\n\n      a.animating = false;\n      a.elements.each(el => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n\n    done(complete) {\n      a.animating = false;\n      a.elements.each(el => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n\n      const elements = []; // Define & Cache Initials & Units\n\n      a.elements.each((el, index) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n        elements[index] = {\n          container: el\n        };\n        Object.keys(props).forEach(prop => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue\n          };\n        });\n      });\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress; // let el;\n\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n\n        if (startTime === null) {\n          startTime = time;\n        }\n\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), startTime + params.duration - time < 0 ? 0 : startTime + params.duration - time, startTime);\n        }\n\n        elements.forEach(element => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach(prop => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const {\n              initialValue,\n              finalValue,\n              unit\n            } = el[prop];\n            el[prop].currentValue = initialValue + easeProgress * (finalValue - initialValue);\n            const currentValue = el[prop].currentValue;\n\n            if (finalValue > initialValue && currentValue >= finalValue || finalValue < initialValue && currentValue <= finalValue) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return; // Then call\n\n        a.frameId = window.requestAnimationFrame(render);\n      }\n\n      a.frameId = window.requestAnimationFrame(render);\n      return a;\n    }\n\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = 'resize scroll'.split(' ');\n\nfunction shortcut(name) {\n  function eventHandler(...args) {\n    if (typeof args[0] === 'undefined') {\n      for (let i = 0; i < this.length; i += 1) {\n        if (noTrigger.indexOf(name) < 0) {\n          if (name in this[i]) this[i][name]();else {\n            $(this[i]).trigger(name);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    return this.on(name, ...args);\n  }\n\n  return eventHandler;\n}\n\nconst click = shortcut('click');\nconst blur = shortcut('blur');\nconst focus = shortcut('focus');\nconst focusin = shortcut('focusin');\nconst focusout = shortcut('focusout');\nconst keyup = shortcut('keyup');\nconst keydown = shortcut('keydown');\nconst keypress = shortcut('keypress');\nconst submit = shortcut('submit');\nconst change = shortcut('change');\nconst mousedown = shortcut('mousedown');\nconst mousemove = shortcut('mousemove');\nconst mouseup = shortcut('mouseup');\nconst mouseenter = shortcut('mouseenter');\nconst mouseleave = shortcut('mouseleave');\nconst mouseout = shortcut('mouseout');\nconst mouseover = shortcut('mouseover');\nconst touchstart = shortcut('touchstart');\nconst touchend = shortcut('touchend');\nconst touchmove = shortcut('touchmove');\nconst resize = shortcut('resize');\nconst scroll = shortcut('scroll');\n\nexport default $;\nexport { $, add, addClass, animate, animationEnd, append, appendTo, attr, blur, change, children, click, closest, css, data, dataset, detach, each, empty, eq, filter, find, focus, focusin, focusout, hasClass, height, hide, html, index, insertAfter, insertBefore, is, keydown, keypress, keyup, mousedown, mouseenter, mouseleave, mousemove, mouseout, mouseover, mouseup, next, nextAll, off, offset, on, once, outerHeight, outerWidth, parent, parents, prepend, prependTo, prev, prevAll, prop, remove, removeAttr, removeClass, removeData, resize, scroll, scrollLeft, scrollTo, scrollTop, show, siblings, stop, styles, submit, text, toggleClass, touchend, touchmove, touchstart, transform, transition, transitionEnd, trigger, val, value, width };\n","import {\n  $,\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  styles,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove,\n} from 'dom7';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  styles,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  Object.defineProperty($.fn, methodName, { value: Methods[methodName], writable: true });\n});\n\nexport default $;\n","import { getWindow } from 'ssr-window';\n\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach((key) => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n\n  const curStyle = getComputedStyle(el, null);\n\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform\n        .split(', ')\n        .map((a) => a.replace(',', '.'))\n        .join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix =\n      curStyle.MozTransform ||\n      curStyle.OTransform ||\n      curStyle.MsTransform ||\n      curStyle.msTransform ||\n      curStyle.transform ||\n      curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return (\n    typeof o === 'object' &&\n    o !== null &&\n    o.constructor &&\n    Object.prototype.toString.call(o).slice(8, -1) === 'Object'\n  );\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter((key) => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\n\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\n\nfunction animateCSSModeScroll({ swiper, targetPosition, side }) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n\n  const isOutOfBound = (current, target) => {\n    return (dir === 'next' && current >= target) || (dir === 'prev' && current <= target);\n  };\n\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition,\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition,\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\n\nexport {\n  animateCSSModeScroll,\n  deleteProps,\n  nextTick,\n  now,\n  getTranslate,\n  isObject,\n  extend,\n  getComputedStyle,\n  setCSSProperty,\n};\n","import { getWindow, getDocument } from 'ssr-window';\n\nlet support;\n\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n\n    touch: !!(\n      'ontouchstart' in window ||\n      (window.DocumentTouch && document instanceof window.DocumentTouch)\n    ),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    })(),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    })(),\n  };\n}\n\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\n\nexport { getSupport };\n","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\n\nlet deviceCached;\n\nfunction calcDevice({ userAgent } = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n  };\n\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = [\n    '1024x1366',\n    '1366x1024',\n    '834x1194',\n    '1194x834',\n    '834x1112',\n    '1112x834',\n    '768x1024',\n    '1024x768',\n    '820x1180',\n    '1180x820',\n    '810x1080',\n    '1080x810',\n  ];\n  if (\n    !ipad &&\n    macos &&\n    support.touch &&\n    iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0\n  ) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\n\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\n\nexport { getDevice };\n","import { getWindow } from 'ssr-window';\n\nlet browser;\n\nfunction calcBrowser() {\n  const window = getWindow();\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  return {\n    isSafari: isSafari(),\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}\n\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\n\nexport { getBrowser };\n","import { getWindow } from 'ssr-window';\n\nexport default function Resize({ swiper, on, emit }) {\n  const window = getWindow();\n  let observer = null;\n\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver((entries) => {\n      const { width, height } = swiper;\n      let newWidth = width;\n      let newHeight = height;\n      entries.forEach(({ contentBoxSize, contentRect, target }) => {\n        if (target && target !== swiper.el) return;\n        newWidth = contentRect\n          ? contentRect.width\n          : (contentBoxSize[0] || contentBoxSize).inlineSize;\n        newHeight = contentRect\n          ? contentRect.height\n          : (contentBoxSize[0] || contentBoxSize).blockSize;\n      });\n      if (newWidth !== width || newHeight !== height) {\n        resizeHandler();\n      }\n    });\n    observer.observe(swiper.el);\n  };\n\n  const removeObserver = () => {\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}\n","import { getWindow } from 'ssr-window';\n\nexport default function Observer({ swiper, extendParams, on, emit }) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.$el[0], {\n      childList: swiper.params.observeSlideChildren,\n    });\n\n    // Observe wrapper\n    attach(swiper.$wrapperEl[0], { attributes: false });\n  };\n  const destroy = () => {\n    observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  });\n  on('init', init);\n  on('destroy', destroy);\n}\n","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n\n  onAny(handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (\n            eventHandler === handler ||\n            (eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler)\n          ) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n\n    eventsArray.forEach((event) => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach((eventHandler) => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  },\n};\n","export default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width =\n    width -\n    parseInt($el.css('padding-left') || 0, 10) -\n    parseInt($el.css('padding-right') || 0, 10);\n  height =\n    height -\n    parseInt($el.css('padding-top') || 0, 10) -\n    parseInt($el.css('padding-bottom') || 0, 10);\n\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n","import { setCSSProperty } from '../../shared/utils.js';\n\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom',\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n\n  const params = swiper.params;\n\n  const { $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginBottom: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '', marginTop: '' });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', '');\n  }\n\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n\n  const shouldResetSlideSize =\n    params.slidesPerView === 'auto' &&\n    params.breakpoints &&\n    Object.keys(params.breakpoints).filter((key) => {\n      return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n    }).length > 0;\n\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide[0]);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const { clientWidth, offsetWidth } = slide[0];\n          slideSize =\n            width +\n            paddingLeft +\n            paddingRight +\n            marginLeft +\n            marginRight +\n            (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0)\n        slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (\n        (index - Math.min(swiper.params.slidesPerGroupSkip, index)) %\n          swiper.params.slidesPerGroup ===\n        0\n      )\n        snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (params.setWrapperSize) {\n    $wrapperEl.css({\n      [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`,\n    });\n  }\n\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n\n    if (\n      Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) >\n      1\n    ) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides\n      .filter((_, slideIndex) => {\n        if (!params.cssMode) return true;\n        if (slideIndex === slides.length - 1) {\n          return false;\n        }\n        return true;\n      })\n      .css({ [key]: `${spaceBetween}px` });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map((snap) => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(\n      swiper.wrapperEl,\n      '--swiper-centered-offset-after',\n      `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`,\n    );\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map((v) => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map((v) => v + addToSlidesGrid);\n  }\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n}\n","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n\n  const getSlideByIndex = (index) => {\n    if (isVirtual) {\n      return swiper.slides.filter(\n        (el) => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index,\n      )[0];\n    }\n    return swiper.slides.eq(index)[0];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      swiper.visibleSlides.each((slide) => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal()\n      ? slides[i].offsetLeft\n      : slides[i].offsetTop;\n  }\n}\n","import $ from '../../shared/dom.js';\n\nexport default function updateSlidesProgress(translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n\n    const slideProgress =\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) /\n      (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible =\n      (slideBefore >= 0 && slideBefore < swiper.size - 1) ||\n      (slideAfter > 1 && slideAfter <= swiper.size) ||\n      (slideBefore <= 0 && slideAfter >= swiper.size);\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides.eq(i).addClass(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = (swiper && swiper.translate && swiper.translate * multiplier) || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || (params.centeredSlides && params.autoHeight))\n    swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n","export default function updateSlidesClasses() {\n  const swiper = this;\n\n  const { slides, params, $wrapperEl, activeIndex, realIndex } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(\n    `${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`,\n  );\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(\n      `.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`,\n    );\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(\n          `.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`,\n        )\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(\n          `.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`,\n        )\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide\n    .nextAll(`.${params.slideClass}`)\n    .eq(0)\n    .addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide\n    .prevAll(`.${params.slideClass}`)\n    .eq(0)\n    .addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(\n          `.${params.slideClass}:not(.${\n            params.slideDuplicateClass\n          })[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`,\n        )\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(\n          `.${params.slideClass}.${\n            params.slideDuplicateClass\n          }[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`,\n        )\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(\n          `.${params.slideClass}:not(.${\n            params.slideDuplicateClass\n          })[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`,\n        )\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(\n          `.${params.slideClass}.${\n            params.slideDuplicateClass\n          }[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`,\n        )\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}\n","export default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid,\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (\n          translate >= slidesGrid[i] &&\n          translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2\n        ) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(\n    swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex,\n    10,\n  );\n\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n","import $ from '../../shared/dom.js';\n\nexport default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  let slideIndex;\n\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (\n    params.slideToClickedSlide &&\n    swiper.clickedIndex !== undefined &&\n    swiper.clickedIndex !== swiper.activeIndex\n  ) {\n    swiper.slideToClickedSlide();\n  }\n}\n","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\n\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n","import { getTranslate } from '../../shared/utils.js';\n\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const { params, rtlTranslate: rtl, translate, $wrapperEl } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const { rtlTranslate: rtl, params, $wrapperEl, wrapperEl, progress } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n","export default function minTranslate() {\n  return -this.snapGrid[0];\n}\n","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}\n","import { animateCSSModeScroll } from '../../shared/utils.js';\n\nexport default function translateTo(\n  translate = 0,\n  speed = this.params.speed,\n  runCallbacks = true,\n  translateBounds = true,\n  internal,\n) {\n  const swiper = this;\n\n  const { params, wrapperEl } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n  else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n  else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({ swiper, targetPosition: -newTranslate, side: isH ? 'left' : 'top' });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth',\n      });\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener(\n            'transitionend',\n            swiper.onTranslateToWrapperTransitionEnd,\n          );\n          swiper.$wrapperEl[0].removeEventListener(\n            'webkitTransitionEnd',\n            swiper.onTranslateToWrapperTransitionEnd,\n          );\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener(\n        'transitionend',\n        swiper.onTranslateToWrapperTransitionEnd,\n      );\n      swiper.$wrapperEl[0].addEventListener(\n        'webkitTransitionEnd',\n        swiper.onTranslateToWrapperTransitionEnd,\n      );\n    }\n  }\n\n  return true;\n}\n","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\n\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo,\n};\n","export default function setTransition(duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}\n","export default function transitionEmit({ swiper, runCallbacks, direction, step }) {\n  const { activeIndex, previousIndex } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit(`transition${step}`);\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}\n","import transitionEmit from './transitionEmit.js';\n\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const { params } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  transitionEmit({ swiper, runCallbacks, direction, step: 'Start' });\n}\n","import transitionEmit from './transitionEmit.js';\n\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const { params } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n\n  transitionEmit({ swiper, runCallbacks, direction, step: 'End' });\n}\n","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\n\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n","import { animateCSSModeScroll } from '../../shared/utils.js';\n\nexport default function slideTo(\n  index = 0,\n  speed = this.params.speed,\n  runCallbacks = true,\n  internal,\n  initial,\n) {\n  if (typeof index !== 'number' && typeof index !== 'string') {\n    throw new Error(\n      `The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`,\n    );\n  }\n\n  if (typeof index === 'string') {\n    /**\n     * The `index` argument converted from `string` to `number`.\n     * @type {number}\n     */\n    const indexAsNumber = parseInt(index, 10);\n\n    /**\n     * Determines whether the `index` argument is a valid `number`\n     * after being converted from the `string` type.\n     * @type {boolean}\n     */\n    const isValidNumber = isFinite(indexAsNumber);\n\n    if (!isValidNumber) {\n      throw new Error(\n        `The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`,\n      );\n    }\n\n    // Knowing that the converted `index` is a valid number,\n    // we can update the original argument's value.\n    index = indexAsNumber;\n  }\n\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled,\n  } = swiper;\n\n  if (\n    (swiper.animating && params.preventInteractionOnTransition) ||\n    (!enabled && !internal && !initial)\n  ) {\n    return false;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (\n          normalizedTranslate >= normalizedGrid &&\n          normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2\n        ) {\n          slideIndex = i;\n        } else if (\n          normalizedTranslate >= normalizedGrid &&\n          normalizedTranslate < normalizedGridNext\n        ) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (\n      !swiper.allowSlideNext &&\n      translate < swiper.translate &&\n      translate < swiper.minTranslate()\n    ) {\n      return false;\n    }\n    if (\n      !swiper.allowSlidePrev &&\n      translate > swiper.translate &&\n      translate > swiper.maxTranslate()\n    ) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._swiperImmediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({ swiper, targetPosition: t, side: isH ? 'left' : 'top' });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth',\n      });\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener(\n            'transitionend',\n            swiper.onSlideToWrapperTransitionEnd,\n          );\n          swiper.$wrapperEl[0].removeEventListener(\n            'webkitTransitionEnd',\n            swiper.onSlideToWrapperTransitionEnd,\n          );\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener(\n        'webkitTransitionEnd',\n        swiper.onSlideToWrapperTransitionEnd,\n      );\n    }\n  }\n\n  return true;\n}\n","export default function slideToLoop(\n  index = 0,\n  speed = this.params.speed,\n  runCallbacks = true,\n  internal,\n) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { animating, enabled, params } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating, snapGrid, slidesGrid, rtlTranslate, enabled } = swiper;\n  if (!enabled) return swiper;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (\n      params.slidesPerView === 'auto' &&\n      params.slidesPerGroup === 1 &&\n      params.slidesPerGroupAuto\n    ) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(\n  speed = this.params.speed,\n  runCallbacks = true,\n  internal,\n  threshold = 0.5,\n) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n","import $ from '../../shared/dom.js';\nimport { nextTick } from '../../shared/utils.js';\n\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView =\n    params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        slideToIndex < swiper.loopedSlides - slidesPerView / 2 ||\n        slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(\n            `.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`,\n          )\n          .eq(0)\n          .index();\n\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(\n          `.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`,\n        )\n        .eq(0)\n        .index();\n\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\n\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\n\nexport default function loopCreate() {\n  const swiper = this;\n  const document = getDocument();\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(\n          `${params.slideClass} ${params.slideBlankClass}`,\n        );\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((el, index) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) {\n      appendSlides.push(el);\n    }\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\n      prependSlides.push(el);\n    }\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n","export default function loopFix() {\n  const swiper = this;\n\n  swiper.emit('beforeLoopFix');\n\n  const {\n    activeIndex,\n    slides,\n    loopedSlides,\n    allowSlidePrev,\n    allowSlideNext,\n    snapGrid,\n    rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = slides.length - loopedSlides * 3 + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  swiper.emit('loopFix');\n}\n","export default function loopDestroy() {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl\n    .children(\n      `.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`,\n    )\n    .remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\n\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (\n    swiper.support.touch ||\n    !swiper.params.simulateTouch ||\n    (swiper.params.watchOverflow && swiper.isLocked) ||\n    swiper.params.cssMode\n  )\n    return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (\n    swiper.support.touch ||\n    (swiper.params.watchOverflow && swiper.isLocked) ||\n    swiper.params.cssMode\n  ) {\n    return;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n}\n","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\n\nexport default {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n","import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\n\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n\n  const data = swiper.touchEventsData;\n  const { params, touches, enabled } = swiper;\n  if (!enabled) return;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {\n    $targetEl = $(event.path[0]);\n  }\n\n  const noSwipingSelector = params.noSwipingSelector\n    ? params.noSwipingSelector\n    : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (\n    params.noSwiping &&\n    (isTargetShadow\n      ? closestElement(noSwipingSelector, e.target)\n      : $targetEl.closest(noSwipingSelector)[0])\n  ) {\n    swiper.allowClick = true;\n    return;\n  }\n\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection &&\n    (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)\n  ) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($targetEl.is(data.focusableElements)) preventDefault = false;\n    if (\n      document.activeElement &&\n      $(document.activeElement).is(data.focusableElements) &&\n      document.activeElement !== $targetEl[0]\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault =\n      preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (\n      (params.touchStartForcePreventDefault || shouldPreventDefault) &&\n      !$targetEl[0].isContentEditable\n    ) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now } from '../../shared/utils.js';\n\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl, enabled } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type !== 'touchmove') return;\n  const targetTouch =\n    e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate()) ||\n        (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate()) ||\n      (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold)\n    return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (\n      (swiper.isHorizontal() && touches.currentY === touches.startY) ||\n      (swiper.isVertical() && touches.currentX === touches.startX)\n    ) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal()\n          ? touchAngle > params.touchAngle\n          : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop && !params.cssMode) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance)\n      data.currentTranslate =\n        swiper.minTranslate() -\n        1 +\n        (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance)\n      data.currentTranslate =\n        swiper.maxTranslate() +\n        1 -\n        (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (\n    !swiper.allowSlideNext &&\n    swiper.swipeDirection === 'next' &&\n    data.currentTranslate < data.startTranslate\n  ) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (\n    !swiper.allowSlidePrev &&\n    swiper.swipeDirection === 'prev' &&\n    data.currentTranslate > data.startTranslate\n  ) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal()\n          ? touches.currentX - touches.startX\n          : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (\n    (params.freeMode && params.freeMode.enabled && swiper.freeMode) ||\n    params.watchSlidesProgress\n  ) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n","import { now, nextTick } from '../../shared/utils.js';\n\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const { params, touches, rtlTranslate: rtl, slidesGrid, enabled } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (\n    params.grabCursor &&\n    data.isMoved &&\n    data.isTouched &&\n    (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)\n  ) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (\n    !data.isTouched ||\n    !data.isMoved ||\n    !swiper.swipeDirection ||\n    touches.diff === 0 ||\n    data.currentTranslate === data.startTranslate\n  ) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({ currentPos });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (\n    let i = 0;\n    i < slidesGrid.length;\n    i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup\n  ) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget =\n      swiper.navigation &&\n      (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n","export default function onResize() {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  swiper.updateSlidesClasses();\n  if (\n    (params.slidesPerView === 'auto' || params.slidesPerView > 1) &&\n    swiper.isEnd &&\n    !swiper.isBeginning &&\n    !swiper.params.centeredSlides\n  ) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n","export default function onScroll() {\n  const swiper = this;\n  const { wrapperEl, rtlTranslate, enabled } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === -0) swiper.translate = 0;\n\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n","import { getDocument } from 'ssr-window';\n\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\n\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\n\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const { params, touchEvents, el, wrapperEl, device, support } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  if (!support.touch) {\n    el[domMethod](touchEvents.start, swiper.onTouchStart, false);\n    document[domMethod](touchEvents.move, swiper.onTouchMove, capture);\n    document[domMethod](touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    const passiveListener =\n      touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners\n        ? { passive: true, capture: false }\n        : false;\n    el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);\n    el[domMethod](\n      touchEvents.move,\n      swiper.onTouchMove,\n      support.passiveListener ? { passive: false, capture } : capture,\n    );\n    el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);\n    if (touchEvents.cancel) {\n      el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](\n      device.ios || device.android\n        ? 'resize orientationchange observerUpdate'\n        : 'resize observerUpdate',\n      onResize,\n      true,\n    );\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n};\n\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const { params, support } = swiper;\n\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  if (support.touch && !dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n\n  events(swiper, 'on');\n}\n\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\n\nexport default {\n  attachEvents,\n  detachEvents,\n};\n","import { extend } from '../../shared/utils.js';\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\n\nexport default function setBreakpoint() {\n  const swiper = this;\n  const { activeIndex, initialized, loopedSlides = 0, params, $el } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n\n  const wasEnabled = params.enabled;\n\n  if (wasMultiRow && !isMultiRow) {\n    $el.removeClass(\n      `${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`,\n    );\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    $el.addClass(`${params.containerModifierClass}grid`);\n    if (\n      (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column') ||\n      (!breakpointParams.grid.fill && params.grid.fill === 'column')\n    ) {\n      $el.addClass(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  const directionChanged =\n    breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop =\n    params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n\n  const isEnabled = swiper.params.enabled;\n\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev,\n  });\n\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n\n  swiper.currentBreakpoint = breakpoint;\n\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate();\n    swiper.updateSlides();\n    swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n  }\n\n  swiper.emit('breakpoint', breakpointParams);\n}\n","import { getWindow } from 'ssr-window';\n\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || (base === 'container' && !containerEl)) return undefined;\n  let breakpoint = false;\n\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n\n  const points = Object.keys(breakpoints).map((point) => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return { value, point };\n    }\n    return { value: point, point };\n  });\n\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const { point, value } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\n\nexport default { setBreakpoint, getBreakpoint };\n","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach((item) => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach((classNames) => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\n\nexport default function addClasses() {\n  const swiper = this;\n  const { classNames, params, rtl, $el, device, support } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses([\n    'initialized',\n    params.direction,\n    { 'pointer-events': !support.touch },\n    { 'free-mode': swiper.params.freeMode && params.freeMode.enabled },\n    { 'autoheight': params.autoHeight },\n    { 'rtl': rtl },\n    { 'grid': params.grid && params.grid.rows > 1 },\n    { 'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column' },\n    { 'android': device.android },\n    { 'ios': device.ios },\n    { 'css-mode': params.cssMode },\n    { 'centered': params.cssMode && params.centeredSlides },\n  ], params.containerModifierClass);\n  classNames.push(...suffixes);\n  $el.addClass([...classNames].join(' '));\n  swiper.emitContainerClasses();\n}\n","export default function removeClasses() {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n  swiper.emitContainerClasses();\n}\n","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\n\nexport default { addClasses, removeClasses };\n","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\n\nexport default function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n  const window = getWindow();\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  const isPicture = $(imageEl).parent('picture')[0];\n\n  if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n","export default function preloadImages() {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady,\n    );\n  }\n}\n","import loadImage from './loadImage.js';\nimport preloadImages from './preloadImages.js';\n\nexport default {\n  loadImage,\n  preloadImages,\n};\n","function checkOverflow() {\n  const swiper = this;\n  const { isLocked: wasLocked, params } = swiper;\n  const { slidesOffsetBefore } = params;\n\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge =\n      swiper.slidesGrid[lastSlideIndex] +\n      swiper.slidesSizesGrid[lastSlideIndex] +\n      slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\n\nexport default { checkOverflow };\n","export default {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n\n  // Overrides\n  width: null,\n  height: null,\n\n  //\n  preventInteractionOnTransition: false,\n\n  // ssr\n  userAgent: null,\n  url: null,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n  loopPreventsSlide: true,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n\n  // Internals\n  _emitClasses: false,\n};\n","import { extend } from '../shared/utils.js';\n\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (\n      ['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 &&\n      params[moduleParamName] === true\n    ) {\n      params[moduleParamName] = { auto: true };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = { enabled: true };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n    extend(allModulesParams, obj);\n  };\n}\n","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport $ from '../shared/dom.js';\nimport { extend, now, deleteProps } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\n\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\n\nimport eventsEmitter from './events-emitter.js';\n\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport images from './images/index.js';\nimport checkOverflow from './check-overflow/index.js';\n\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\n\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (\n      args.length === 1 &&\n      args[0].constructor &&\n      Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object'\n    ) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    if (params.el && $(params.el).length > 1) {\n      const swipers = [];\n      $(params.el).each((containerEl) => {\n        const newParams = extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({ userAgent: params.userAgent });\n    swiper.browser = getBrowser();\n\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n\n    const allModulesParams = {};\n\n    swiper.modules.forEach((mod) => {\n      mod({\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper),\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach((eventName) => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        const desktop = ['pointerdown', 'pointermove', 'pointerup'];\n\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return swiper.support.touch || !swiper.params.simulateTouch\n          ? swiper.touchEventsTouch\n          : swiper.touchEventsDesktop;\n      })(),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n    });\n\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter((className) => {\n      return (\n        className.indexOf('swiper') === 0 ||\n        className.indexOf(swiper.params.containerModifierClass) === 0\n      );\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n\n  getSlideClasses(slideEl) {\n    const swiper = this;\n\n    return slideEl.className\n      .split(' ')\n      .filter((className) => {\n        return (\n          className.indexOf('swiper-slide') === 0 ||\n          className.indexOf(swiper.params.slideClass) === 0\n        );\n      })\n      .join(' ');\n  }\n\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.each((slideEl) => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({ slideEl, classNames });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const { params, slides, slidesGrid, slidesSizesGrid, size: swiperSize, activeIndex } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact\n            ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize\n            : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(\n        Math.max(translateValue, swiper.maxTranslate()),\n        swiper.minTranslate(),\n      );\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if (\n        (swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) &&\n        swiper.isEnd &&\n        !swiper.params.centeredSlides\n      ) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (\n      newDirection === currentDirection ||\n      (newDirection !== 'horizontal' && newDirection !== 'vertical')\n    ) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  mount(el) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    const $el = $(el || swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return false;\n    }\n\n    el.swiper = swiper;\n\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = $(el.shadowRoot.querySelector(getWrapperSelector()));\n        // Children needs to return slot items\n        res.children = (options) => $el.children(options);\n        return res;\n      }\n      return $el.children(getWrapperSelector());\n    };\n    // Find Wrapper\n    let $wrapperEl = getWrapper();\n    if ($wrapperEl.length === 0 && swiper.params.createElements) {\n      const document = getDocument();\n      const wrapper = document.createElement('div');\n      $wrapperEl = $(wrapper);\n      wrapper.className = swiper.params.wrapperClass;\n      $el.append(wrapper);\n      $el.children(`.${swiper.params.slideClass}`).each((slideEl) => {\n        $wrapperEl.append(slideEl);\n      });\n    }\n\n    Object.assign(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n      mounted: true,\n\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n      rtlTranslate:\n        swiper.params.direction === 'horizontal' &&\n        (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n    });\n\n    return true;\n  }\n\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(\n        swiper.params.initialSlide + swiper.loopedSlides,\n        0,\n        swiper.params.runCallbacksOnInit,\n        false,\n        true,\n      );\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n\n    return swiper;\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const { params, $el, $wrapperEl, slides } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass(\n            [\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass,\n            ].join(' '),\n          )\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach((m) => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\n\nObject.keys(prototypes).forEach((prototypeGroup) => {\n  Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\n\nSwiper.use([Resize, Observer]);\n\nexport default Swiper;\n","import $ from '../../shared/dom.js';\nimport { setCSSProperty } from '../../shared/utils.js';\n\nexport default function Virtual({ swiper, extendParams, on }) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  });\n\n  let cssModeTimeout;\n\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: [],\n  };\n\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(\n          `<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`,\n        );\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  }\n\n  function update(force) {\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset,\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = slidesPerGroup + addSlidesBefore;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        })(),\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl\n            .find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`)\n            .remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes\n      .sort((a, b) => b - a)\n      .forEach((index) => {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  }\n\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n        if (cachedElIndex) {\n          $cachedEl.attr(\n            'data-swiper-slide-index',\n            parseInt(cachedElIndex, 10) + numberOfNewSlides,\n          );\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    swiper.virtual.slides = swiper.params.virtual.slides;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update,\n  });\n}\n","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\n\nexport default function Keyboard({ swiper, extendParams, on, emit }) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false,\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true,\n    },\n  });\n\n  function handle(event) {\n    if (!swiper.enabled) return;\n\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (\n      !swiper.allowSlideNext &&\n      ((swiper.isHorizontal() && isArrowRight) ||\n        (swiper.isVertical() && isArrowDown) ||\n        isPageDown)\n    ) {\n      return false;\n    }\n    if (\n      !swiper.allowSlidePrev &&\n      ((swiper.isHorizontal() && isArrowLeft) || (swiper.isVertical() && isArrowUp) || isPageUp)\n    ) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (\n      document.activeElement &&\n      document.activeElement.nodeName &&\n      (document.activeElement.nodeName.toLowerCase() === 'input' ||\n        document.activeElement.nodeName.toLowerCase() === 'textarea')\n    ) {\n      return undefined;\n    }\n    if (\n      swiper.params.keyboard.onlyInViewport &&\n      (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)\n    ) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (\n        swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 &&\n        swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0\n      ) {\n        return undefined;\n      }\n\n      const $el = swiper.$el;\n      const swiperWidth = $el[0].clientWidth;\n      const swiperHeight = $el[0].clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiperWidth, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiperHeight],\n        [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((isPageDown || isArrowRight) && !rtl) || ((isPageUp || isArrowLeft) && rtl))\n        swiper.slideNext();\n      if (((isPageUp || isArrowLeft) && !rtl) || ((isPageDown || isArrowRight) && rtl))\n        swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable,\n  });\n}\n","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now, nextTick } from '../../shared/utils.js';\n\nexport default function Mousewheel({ swiper, extendParams, on, emit }) {\n  const window = getWindow();\n\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null,\n    },\n  });\n\n  swiper.mousewheel = {\n    enabled: false,\n  };\n\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (\n      swiper.params.mousewheel.thresholdDelta &&\n      newEvent.delta < swiper.params.mousewheel.thresholdDelta\n    ) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n\n    if (\n      swiper.params.mousewheel.thresholdTime &&\n      now() - lastScrollTime < swiper.params.mousewheel.thresholdTime\n    ) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarget);\n    }\n    if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges)\n      return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;\n      else return true;\n    } else {\n      delta =\n        Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop\n      ? true\n      : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event,\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n      const prevEvent = recentWheelEvents.length\n        ? recentWheelEvents[recentWheelEvents.length - 1]\n        : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (\n          newEvent.direction !== prevEvent.direction ||\n          newEvent.delta > prevEvent.delta ||\n          newEvent.time > prevEvent.time + 150\n        ) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n      };\n      const ignoreWheelEvents =\n        lastEventBeforeSnap &&\n        newEvent.time < lastEventBeforeSnap.time + 500 &&\n        newEvent.delta <= lastEventBeforeSnap.delta &&\n        newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n          const prevEvent = recentWheelEvents.length\n            ? recentWheelEvents[recentWheelEvents.length - 1]\n            : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (\n            prevEvent &&\n            (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)\n          ) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (\n            recentWheelEvents.length >= 15 &&\n            newEvent.time - firstEvent.time < 500 &&\n            firstEvent.delta - newEvent.delta >= 1 &&\n            newEvent.delta <= 6\n          ) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction)\n          swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  }\n\n  function events(method) {\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarget);\n    }\n    target[method]('mouseenter', handleMouseEnter);\n    target[method]('mouseleave', handleMouseLeave);\n    target[method]('wheel', handle);\n  }\n\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('on');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('off');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable,\n  });\n}\n","import { getDocument } from 'ssr-window';\n\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  const document = getDocument();\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach((key) => {\n      if (!params[key] && params.auto === true) {\n        let element = swiper.$el.children(`.${checkProps[key]}`)[0];\n        if (!element) {\n          element = document.createElement('div');\n          element.className = checkProps[key];\n          swiper.$el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}\n","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport $ from '../../shared/dom.js';\n\nexport default function Navigation({ swiper, extendParams, on, emit }) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  });\n\n  swiper.navigation = {\n    nextEl: null,\n    $nextEl: null,\n    prevEl: null,\n    $prevEl: null,\n  };\n\n  function getEl(el) {\n    let $el;\n    if (el) {\n      $el = $(el);\n      if (\n        swiper.params.uniqueNavElements &&\n        typeof el === 'string' &&\n        $el.length > 1 &&\n        swiper.$el.find(el).length === 1\n      ) {\n        $el = swiper.$el.find(el);\n      }\n    }\n    return $el;\n  }\n\n  function toggleEl($el, disabled) {\n    const params = swiper.params.navigation;\n    if ($el && $el.length > 0) {\n      $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);\n      if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    }\n  }\n  function update() {\n    // Update Navigation Buttons\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    toggleEl($prevEl, swiper.isBeginning);\n    toggleEl($nextEl, swiper.isEnd);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  }\n  function init() {\n    const params = swiper.params.navigation;\n\n    swiper.params.navigation = createElementIfNotDefined(\n      swiper,\n      swiper.originalParams.navigation,\n      swiper.params.navigation,\n      {\n        nextEl: 'swiper-button-next',\n        prevEl: 'swiper-button-prev',\n      },\n    );\n    if (!(params.nextEl || params.prevEl)) return;\n\n    const $nextEl = getEl(params.nextEl);\n    const $prevEl = getEl(params.prevEl);\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', onPrevClick);\n    }\n\n    Object.assign(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n\n    if (!swiper.enabled) {\n      if ($nextEl) $nextEl.addClass(params.lockClass);\n      if ($prevEl) $prevEl.addClass(params.lockClass);\n    }\n  }\n  function destroy() {\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  }\n\n  on('init', () => {\n    init();\n    update();\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl) {\n      $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n    }\n    if ($prevEl) {\n      $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n    }\n  });\n  on('click', (_s, e) => {\n    const { $nextEl, $prevEl } = swiper.navigation;\n    const targetEl = e.target;\n    if (\n      swiper.params.navigation.hideOnClick &&\n      !$(targetEl).is($prevEl) &&\n      !$(targetEl).is($nextEl)\n    ) {\n      if (\n        swiper.pagination &&\n        swiper.params.pagination &&\n        swiper.params.pagination.clickable &&\n        (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))\n      )\n        return;\n      let isHidden;\n      if ($nextEl) {\n        isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n      } else if ($prevEl) {\n        isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      if ($nextEl) {\n        $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n      if ($prevEl) {\n        $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    }\n  });\n\n  Object.assign(swiper.navigation, {\n    update,\n    init,\n    destroy,\n  });\n}\n","export default function classesToSelector(classes = '') {\n  return `.${classes\n    .trim()\n    .replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\n    .replace(/ /g, '.')}`;\n}\n","import $ from '../../shared/dom.js';\nimport classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\n\nexport default function Pagination({ swiper, extendParams, on, emit }) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n    },\n  });\n\n  swiper.pagination = {\n    el: null,\n    $el: null,\n    bullets: [],\n  };\n\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n\n  function isPaginationDisabled() {\n    return (\n      !swiper.params.pagination.el ||\n      !swiper.pagination.el ||\n      !swiper.pagination.$el ||\n      swiper.pagination.$el.length === 0\n    );\n  }\n\n  function setSideBullets($bulletEl, position) {\n    const { bulletActiveClass } = swiper.params.pagination;\n    $bulletEl[position]()\n      .addClass(`${bulletActiveClass}-${position}`)\n      [position]()\n      .addClass(`${bulletActiveClass}-${position}-${position}`);\n  }\n\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength =\n      swiper.virtual && swiper.params.virtual.enabled\n        ? swiper.virtual.slides.length\n        : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop\n      ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup)\n      : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil(\n        (swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup,\n      );\n      if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n        current -= slidesLength - swiper.loopedSlides * 2;\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (\n      params.type === 'bullets' &&\n      swiper.pagination.bullets &&\n      swiper.pagination.bullets.length > 0\n    ) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(\n          swiper.isHorizontal() ? 'width' : 'height',\n          `${bulletSize * (params.dynamicMainBullets + 4)}px`,\n        );\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          dynamicBulletIndex += current - swiper.previousIndex;\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(\n        ['', '-next', '-next-next', '-prev', '-prev-prev', '-main']\n          .map((suffix) => `${params.bulletActiveClass}${suffix}`)\n          .join(' '),\n      );\n      if ($el.length > 1) {\n        bullets.each((bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets($bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets($bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n              bullets\n                .eq(bullets.length - params.dynamicMainBullets - 1)\n                .addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              setSideBullets($firstDisplayedBullet, 'prev');\n              setSideBullets($lastDisplayedBullet, 'next');\n            }\n          } else {\n            setSideBullets($firstDisplayedBullet, 'prev');\n            setSideBullets($lastDisplayedBullet, 'next');\n          }\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset =\n          (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el\n        .find(classesToSelector(params.currentClass))\n        .text(params.formatFractionCurrent(current + 1));\n      $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el\n        .find(classesToSelector(params.progressbarFillClass))\n        .transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`)\n        .transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      emit('paginationRender', $el[0]);\n    } else {\n      emit('paginationUpdate', $el[0]);\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength =\n      swiper.virtual && swiper.params.virtual.enabled\n        ? swiper.virtual.slides.length\n        : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop\n        ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup)\n        : swiper.snapGrid.length;\n      if (\n        swiper.params.freeMode &&\n        swiper.params.freeMode.enabled &&\n        !swiper.params.loop &&\n        numberOfBullets > slidesLength\n      ) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n\n      swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML =\n          `<span class=\"${params.currentClass}\"></span>` +\n          ' / ' +\n          `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(\n      swiper,\n      swiper.originalParams.pagination,\n      swiper.params.pagination,\n      { el: 'swiper-pagination' },\n    );\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\n      $el = swiper.$el.find(params.el);\n      // check if it belongs to another nested Swiper\n      if ($el.length > 1) {\n        $el = $el.filter((el) => {\n          if ($(el).parents('.swiper')[0] !== swiper.el) return false;\n          return true;\n        });\n      }\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n    $el.addClass(params.modifierClass + swiper.params.direction);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Object.assign(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n\n    if (!swiper.enabled) {\n      $el.addClass(params.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    $el.removeClass(params.modifierClass + swiper.params.direction);\n    if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass)\n      swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', classesToSelector(params.bulletClass));\n    }\n  }\n\n  on('init', () => {\n    init();\n    render();\n    update();\n  });\n  on('activeIndexChange', () => {\n    if (swiper.params.loop) {\n      update();\n    } else if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    if (!swiper.params.loop) {\n      update();\n    }\n  });\n  on('slidesLengthChange', () => {\n    if (swiper.params.loop) {\n      render();\n      update();\n    }\n  });\n  on('snapGridLengthChange', () => {\n    if (!swiper.params.loop) {\n      render();\n      update();\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    const { $el } = swiper.pagination;\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    const { $el } = swiper.pagination;\n    if (\n      swiper.params.pagination.el &&\n      swiper.params.pagination.hideOnClick &&\n      $el.length > 0 &&\n      !$(targetEl).hasClass(swiper.params.pagination.bulletClass)\n    ) {\n      if (\n        swiper.navigation &&\n        ((swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) ||\n          (swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl))\n      )\n        return;\n      const isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      $el.toggleClass(swiper.params.pagination.hiddenClass);\n    }\n  });\n\n  Object.assign(swiper.pagination, {\n    render,\n    update,\n    init,\n    destroy,\n  });\n}\n","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\n\nexport default function Scrollbar({ swiper, extendParams, on, emit }) {\n  const document = getDocument();\n\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  });\n\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null,\n    $el: null,\n    $dragEl: null,\n  };\n\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const { $dragEl, $el } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      $el[0].style.opacity = 1;\n      timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    divider =\n      swiper.size /\n      (swiper.virtualSize +\n        swiper.params.slidesOffsetBefore -\n        (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](\n        swiper.params.scrollbar.lockClass,\n      );\n    }\n  }\n  function getPointerPosition(e) {\n    if (swiper.isHorizontal()) {\n      return e.type === 'touchstart' || e.type === 'touchmove'\n        ? e.targetTouches[0].clientX\n        : e.clientX;\n    }\n    return e.type === 'touchstart' || e.type === 'touchmove'\n      ? e.targetTouches[0].clientY\n      : e.clientY;\n  }\n  function setDragPosition(e) {\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el } = scrollbar;\n\n    let positionRatio;\n    positionRatio =\n      (getPointerPosition(e) -\n        $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] -\n        (dragStartPos !== null ? dragStartPos : dragSize / 2)) /\n      (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position =\n      swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    isTouched = true;\n    dragStartPos =\n      e.target === $dragEl[0] || e.target === $dragEl\n        ? getPointerPosition(e) -\n          e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top']\n        : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    setDragPosition(e);\n\n    clearTimeout(dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el } = scrollbar;\n\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n\n  function events(method) {\n    const { scrollbar, touchEventsTouch, touchEventsDesktop, params, support } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener =\n      support.passiveListener && params.passiveListeners\n        ? { passive: false, capture: false }\n        : false;\n    const passiveListener =\n      support.passiveListener && params.passiveListeners\n        ? { passive: true, capture: false }\n        : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    if (!support.touch) {\n      target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);\n      document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);\n      document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);\n    } else {\n      target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);\n      target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);\n      target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);\n    }\n  }\n\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const { scrollbar, $el: $swiperEl } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(\n      swiper,\n      swiper.originalParams.scrollbar,\n      swiper.params.scrollbar,\n      { el: 'swiper-scrollbar' },\n    );\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if (\n      swiper.params.uniqueNavElements &&\n      typeof params.el === 'string' &&\n      $el.length > 1 &&\n      $swiperEl.find(params.el).length === 1\n    ) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Object.assign(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      enableDraggable();\n    }\n\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    disableDraggable();\n  }\n\n  on('init', () => {\n    init();\n    updateSize();\n    setTranslate();\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const { $el } = swiper.scrollbar;\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n\n  Object.assign(swiper.scrollbar, {\n    updateSize,\n    setTranslate,\n    init,\n    destroy,\n  });\n}\n","import $ from '../../shared/dom.js';\n\nexport default function Parallax({ swiper, extendParams, on }) {\n  extendParams({\n    parallax: {\n      enabled: false,\n    },\n  });\n\n  const setTransform = (el, progress) => {\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  };\n\n  const setTranslate = () => {\n    const { $el, slides, progress, snapGrid } = swiper;\n    $el\n      .children(\n        '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]',\n      )\n      .each((el) => {\n        setTransform(el, progress);\n      });\n    slides.each((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl)\n        .find(\n          '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]',\n        )\n        .each((el) => {\n          setTransform(el, slideProgress);\n        });\n    });\n  };\n\n  const setTransition = (duration = swiper.params.speed) => {\n    const { $el } = swiper;\n    $el\n      .find(\n        '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]',\n      )\n      .each((parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration =\n          parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  };\n\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}\n","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { getTranslate } from '../../shared/utils.js';\n\nexport default function Zoom({ swiper, extendParams, on, emit }) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  });\n\n  swiper.zoom = {\n    enabled: false,\n  };\n\n  let currentScale = 1;\n  let isScaling = false;\n  let gesturesEnabled;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const gesture = {\n    $slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    $imageEl: undefined,\n    $imageWrapEl: undefined,\n    maxRatio: 3,\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {},\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined,\n  };\n\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;\n        const slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    },\n  });\n\n  function getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      fakeGestureTouched = true;\n      gesture.scaleStart = getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl\n        .find(`.${params.containerClass}`)\n        .eq(0)\n        .find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    if (gesture.$imageEl) {\n      gesture.$imageEl.transition(0);\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    if (!support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      fakeGestureMoved = true;\n      gesture.scaleMove = getDistanceBetweenTouches(e);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n      if (e.type === 'gesturechange') onGestureStart(e);\n      return;\n    }\n    if (support.gestures) {\n      zoom.scale = e.scale * currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  }\n  function onGestureEnd(e) {\n    const device = swiper.device;\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    if (!support.gestures) {\n      if (!fakeGestureTouched || !fakeGestureMoved) {\n        return;\n      }\n      if (\n        e.type !== 'touchend' ||\n        (e.type === 'touchend' && e.changedTouches.length < 2 && !device.android)\n      ) {\n        return;\n      }\n      fakeGestureTouched = false;\n      fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl\n      .transition(swiper.params.speed)\n      .transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  }\n  function onTouchMove(e) {\n    const zoom = swiper.zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !isScaling) {\n      if (\n        swiper.isHorizontal() &&\n        ((Math.floor(image.minX) === Math.floor(image.startX) &&\n          image.touchesCurrent.x < image.touchesStart.x) ||\n          (Math.floor(image.maxX) === Math.floor(image.startX) &&\n            image.touchesCurrent.x > image.touchesStart.x))\n      ) {\n        image.isTouched = false;\n        return;\n      }\n      if (\n        !swiper.isHorizontal() &&\n        ((Math.floor(image.minY) === Math.floor(image.startY) &&\n          image.touchesCurrent.y < image.touchesStart.y) ||\n          (Math.floor(image.maxY) === Math.floor(image.startY) &&\n            image.touchesCurrent.y > image.touchesStart.y))\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x =\n      (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y =\n      (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0)\n      momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0)\n      momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl\n      .transition(momentumDuration)\n      .transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      }\n      if (gesture.$imageWrapEl) {\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      }\n\n      zoom.scale = 1;\n      currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  }\n\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n\n    if (!gesture.$slideEl) {\n      if (e && e.target) {\n        gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      }\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n      }\n\n      gesture.$imageEl = gesture.$slideEl\n        .find(`.${params.containerClass}`)\n        .eq(0)\n        .find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (\n      !gesture.$imageEl ||\n      gesture.$imageEl.length === 0 ||\n      !gesture.$imageWrapEl ||\n      gesture.$imageWrapEl.length === 0\n    )\n      return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left + window.scrollX;\n      offsetY = gesture.$slideEl.offset().top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl\n      .transition(300)\n      .transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n\n    if (!gesture.$slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n      } else {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      }\n      gesture.$imageEl = gesture.$slideEl\n        .find(`.${params.containerClass}`)\n        .eq(0)\n        .find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (\n      !gesture.$imageEl ||\n      gesture.$imageEl.length === 0 ||\n      !gesture.$imageWrapEl ||\n      gesture.$imageWrapEl.length === 0\n    )\n      return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n\n  function getListeners() {\n    const support = swiper.support;\n    const passiveListener =\n      swiper.touchEvents.start === 'touchstart' &&\n      support.passiveListener &&\n      swiper.params.passiveListeners\n        ? { passive: true, capture: false }\n        : false;\n    const activeListenerWithCapture = support.passiveListener\n      ? { passive: false, capture: true }\n      : true;\n    return { passiveListener, activeListenerWithCapture };\n  }\n\n  function getSlideSelector() {\n    return `.${swiper.params.slideClass}`;\n  }\n\n  function toggleGestures(method) {\n    const { passiveListener } = getListeners();\n    const slideSelector = getSlideSelector();\n    swiper.$wrapperEl[method]('gesturestart', slideSelector, onGestureStart, passiveListener);\n    swiper.$wrapperEl[method]('gesturechange', slideSelector, onGestureChange, passiveListener);\n    swiper.$wrapperEl[method]('gestureend', slideSelector, onGestureEnd, passiveListener);\n  }\n  function enableGestures() {\n    if (gesturesEnabled) return;\n    gesturesEnabled = true;\n    toggleGestures('on');\n  }\n  function disableGestures() {\n    if (!gesturesEnabled) return;\n    gesturesEnabled = false;\n    toggleGestures('off');\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const support = swiper.support;\n    const { passiveListener, activeListenerWithCapture } = getListeners();\n    const slideSelector = getSlideSelector();\n\n    // Scale image\n    if (support.gestures) {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(\n        swiper.touchEvents.start,\n        slideSelector,\n        onGestureStart,\n        passiveListener,\n      );\n      swiper.$wrapperEl.on(\n        swiper.touchEvents.move,\n        slideSelector,\n        onGestureChange,\n        activeListenerWithCapture,\n      );\n      swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(\n          swiper.touchEvents.cancel,\n          slideSelector,\n          onGestureEnd,\n          passiveListener,\n        );\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(\n      swiper.touchEvents.move,\n      `.${swiper.params.zoom.containerClass}`,\n      onTouchMove,\n      activeListenerWithCapture,\n    );\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    const support = swiper.support;\n    zoom.enabled = false;\n\n    const { passiveListener, activeListenerWithCapture } = getListeners();\n    const slideSelector = getSlideSelector();\n\n    // Scale image\n    if (support.gestures) {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(\n        swiper.touchEvents.start,\n        slideSelector,\n        onGestureStart,\n        passiveListener,\n      );\n      swiper.$wrapperEl.off(\n        swiper.touchEvents.move,\n        slideSelector,\n        onGestureChange,\n        activeListenerWithCapture,\n      );\n      swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(\n          swiper.touchEvents.cancel,\n          slideSelector,\n          onGestureEnd,\n          passiveListener,\n        );\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(\n      swiper.touchEvents.move,\n      `.${swiper.params.zoom.containerClass}`,\n      onTouchMove,\n      activeListenerWithCapture,\n    );\n  }\n\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (\n      !swiper.animating &&\n      swiper.params.zoom.enabled &&\n      swiper.zoom.enabled &&\n      swiper.params.zoom.toggle\n    ) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle,\n  });\n}\n","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\n\nexport default function Lazy({ swiper, extendParams, on, emit }) {\n  extendParams({\n    lazy: {\n      checkInView: false,\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n      scrollingElement: '',\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  });\n\n  swiper.lazy = {};\n\n  let scrollHandlerAttached = false;\n  let initialImageLoaded = false;\n\n  function loadInSlide(index, loadInDuplicate = true) {\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(\n          `.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`,\n        )\n      : swiper.slides.eq(index);\n\n    const $images = $slideEl.find(\n      `.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`,\n    );\n    if (\n      $slideEl.hasClass(params.elementClass) &&\n      !$slideEl.hasClass(params.loadedClass) &&\n      !$slideEl.hasClass(params.loadingClass)\n    ) {\n      $images.push($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n      const $pictureEl = $imageEl.parent('picture');\n\n      swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, () => {\n        if (\n          typeof swiper === 'undefined' ||\n          swiper === null ||\n          !swiper ||\n          (swiper && !swiper.params) ||\n          swiper.destroyed\n        )\n          return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if ($pictureEl.length) {\n            $pictureEl.children('source').each((sourceEl) => {\n              const $source = $(sourceEl);\n\n              if ($source.attr('data-srcset')) {\n                $source.attr('srcset', $source.attr('data-srcset'));\n                $source.removeAttr('data-srcset');\n              }\n            });\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(\n              `[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`,\n            );\n            loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(\n              `.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`,\n            );\n            loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      });\n\n      emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  }\n\n  function load() {\n    const { $wrapperEl, params: swiperParams, slides, activeIndex } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if (\n          $wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n            .length\n        ) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!initialImageLoaded) initialImageLoaded = true;\n    if (swiper.params.watchSlidesProgress) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) loadInSlide(i);\n      }\n    } else {\n      loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  }\n  function checkInViewOnLoad() {\n    const window = getWindow();\n    if (!swiper || swiper.destroyed) return;\n    const $scrollElement = swiper.params.lazy.scrollingElement\n      ? $(swiper.params.lazy.scrollingElement)\n      : $(window);\n    const isWindow = $scrollElement[0] === window;\n    const scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\n    const scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\n    const swiperOffset = swiper.$el.offset();\n    const { rtlTranslate: rtl } = swiper;\n\n    let inView = false;\n\n    if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n    const swiperCoord = [\n      [swiperOffset.left, swiperOffset.top],\n      [swiperOffset.left + swiper.width, swiperOffset.top],\n      [swiperOffset.left, swiperOffset.top + swiper.height],\n      [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n    ];\n    for (let i = 0; i < swiperCoord.length; i += 1) {\n      const point = swiperCoord[i];\n      if (\n        point[0] >= 0 &&\n        point[0] <= scrollElementWidth &&\n        point[1] >= 0 &&\n        point[1] <= scrollElementHeight\n      ) {\n        if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n        inView = true;\n      }\n    }\n\n    const passiveListener =\n      swiper.touchEvents.start === 'touchstart' &&\n      swiper.support.passiveListener &&\n      swiper.params.passiveListeners\n        ? { passive: true, capture: false }\n        : false;\n\n    if (inView) {\n      load();\n      $scrollElement.off('scroll', checkInViewOnLoad, passiveListener);\n    } else if (!scrollHandlerAttached) {\n      scrollHandlerAttached = true;\n      $scrollElement.on('scroll', checkInViewOnLoad, passiveListener);\n    }\n  }\n\n  on('beforeInit', () => {\n    if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n      swiper.params.preloadImages = false;\n    }\n  });\n  on('init', () => {\n    if (swiper.params.lazy.enabled) {\n      if (swiper.params.lazy.checkInView) {\n        checkInViewOnLoad();\n      } else {\n        load();\n      }\n    }\n  });\n  on('scroll', () => {\n    if (\n      swiper.params.freeMode &&\n      swiper.params.freeMode.enabled &&\n      !swiper.params.freeMode.sticky\n    ) {\n      load();\n    }\n  });\n  on('scrollbarDragMove resize _freeModeNoMomentumRelease', () => {\n    if (swiper.params.lazy.enabled) {\n      if (swiper.params.lazy.checkInView) {\n        checkInViewOnLoad();\n      } else {\n        load();\n      }\n    }\n  });\n  on('transitionStart', () => {\n    if (swiper.params.lazy.enabled) {\n      if (\n        swiper.params.lazy.loadOnTransitionStart ||\n        (!swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded)\n      ) {\n        if (swiper.params.lazy.checkInView) {\n          checkInViewOnLoad();\n        } else {\n          load();\n        }\n      }\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n      if (swiper.params.lazy.checkInView) {\n        checkInViewOnLoad();\n      } else {\n        load();\n      }\n    }\n  });\n  on('slideChange', () => {\n    const { lazy, cssMode, watchSlidesProgress, touchReleaseOnEdges, resistanceRatio } =\n      swiper.params;\n    if (\n      lazy.enabled &&\n      (cssMode || (watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0)))\n    ) {\n      load();\n    }\n  });\n\n  Object.assign(swiper.lazy, {\n    load,\n    loadInSlide,\n  });\n}\n","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { nextTick } from '../../shared/utils.js';\n\nexport default function Controller({ swiper, extendParams, on }) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  });\n\n  swiper.controller = {\n    control: undefined,\n  };\n\n  function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = (maxIndex + minIndex) >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    })();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (\n        ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1]) + this.y[i1]\n      );\n    };\n    return this;\n  }\n  // xxx: for now i will just save one spline function to to\n  function getInterpolateFunction(c) {\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier =\n          (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition,\n  });\n}\n","import classesToSelector from '../../shared/classes-to-selector.js';\nimport $ from '../../shared/dom.js';\n\nexport default function A11y({ swiper, extendParams, on }) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n    },\n  });\n\n  let liveRegion = null;\n\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  }\n\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n  }\n  function makeElNotFocusable($el) {\n    $el.attr('tabIndex', '-1');\n  }\n  function addElRole($el, role) {\n    $el.attr('role', role);\n  }\n  function addElRoleDescription($el, description) {\n    $el.attr('aria-roledescription', description);\n  }\n  function addElControls($el, controls) {\n    $el.attr('aria-controls', controls);\n  }\n  function addElLabel($el, label) {\n    $el.attr('aria-label', label);\n  }\n  function addElId($el, id) {\n    $el.attr('id', id);\n  }\n  function addElLive($el, live) {\n    $el.attr('aria-live', live);\n  }\n  function disableEl($el) {\n    $el.attr('aria-disabled', true);\n  }\n  function enableEl($el) {\n    $el.attr('aria-disabled', false);\n  }\n\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n\n    if (\n      swiper.pagination &&\n      $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))\n    ) {\n      $targetEl[0].click();\n    }\n  }\n\n  function updateNavigation() {\n    if (swiper.params.loop || !swiper.navigation) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        disableEl($prevEl);\n        makeElNotFocusable($prevEl);\n      } else {\n        enableEl($prevEl);\n        makeElFocusable($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        disableEl($nextEl);\n        makeElNotFocusable($nextEl);\n      } else {\n        enableEl($nextEl);\n        makeElFocusable($nextEl);\n      }\n    }\n  }\n\n  function hasPagination() {\n    return (\n      swiper.pagination &&\n      swiper.params.pagination.clickable &&\n      swiper.pagination.bullets &&\n      swiper.pagination.bullets.length\n    );\n  }\n\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (hasPagination()) {\n      swiper.pagination.bullets.each((bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        makeElFocusable($bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole($bulletEl, 'button');\n          addElLabel(\n            $bulletEl,\n            params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1),\n          );\n        }\n      });\n    }\n  }\n\n  const initNavEl = ($el, wrapperId, message) => {\n    makeElFocusable($el);\n    if ($el[0].tagName !== 'BUTTON') {\n      addElRole($el, 'button');\n      $el.on('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel($el, message);\n    addElControls($el, wrapperId);\n  };\n\n  function init() {\n    const params = swiper.params.a11y;\n\n    swiper.$el.append(liveRegion);\n\n    // Container\n    const $containerEl = swiper.$el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel($containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const $wrapperEl = swiper.$wrapperEl;\n    const wrapperId = $wrapperEl.attr('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId($wrapperEl, wrapperId);\n    addElLive($wrapperEl, live);\n\n    // Slide\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\n    }\n    addElRole($(swiper.slides), params.slideRole);\n\n    const slidesLength = swiper.params.loop\n      ? swiper.slides.filter((el) => !el.classList.contains(swiper.params.slideDuplicateClass))\n          .length\n      : swiper.slides.length;\n    swiper.slides.each((slideEl, index) => {\n      const $slideEl = $(slideEl);\n      const slideIndex = swiper.params.loop\n        ? parseInt($slideEl.attr('data-swiper-slide-index'), 10)\n        : index;\n      const ariaLabelMessage = params.slideLabelMessage\n        .replace(/\\{\\{index\\}\\}/, slideIndex + 1)\n        .replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n      addElLabel($slideEl, ariaLabelMessage);\n    });\n\n    // Navigation\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n\n    if ($nextEl && $nextEl.length) {\n      initNavEl($nextEl, wrapperId, params.nextSlideMessage);\n    }\n    if ($prevEl && $prevEl.length) {\n      initNavEl($prevEl, wrapperId, params.prevSlideMessage);\n    }\n\n    // Pagination\n    if (hasPagination()) {\n      swiper.pagination.$el.on(\n        'keydown',\n        classesToSelector(swiper.params.pagination.bulletClass),\n        onEnterOrSpaceKey,\n      );\n    }\n  }\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', onEnterOrSpaceKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', onEnterOrSpaceKey);\n    }\n\n    // Pagination\n    if (hasPagination()) {\n      swiper.pagination.$el.off(\n        'keydown',\n        classesToSelector(swiper.params.pagination.bulletClass),\n        onEnterOrSpaceKey,\n      );\n    }\n  }\n\n  on('beforeInit', () => {\n    liveRegion = $(\n      `<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`,\n    );\n  });\n\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n    updateNavigation();\n  });\n  on('toEdge', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('fromEdge', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}\n","import { getWindow } from 'ssr-window';\n\nexport default function History({ swiper, extendParams, on }) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n    },\n  });\n\n  let initialized = false;\n  let paths = {};\n\n  const slugify = (text) => {\n    return text\n      .toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  };\n\n  const getPathValues = (urlOverride) => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname\n      .slice(1)\n      .split('/')\n      .filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides.eq(index);\n    let value = slugify(slide.attr('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key}/${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  };\n\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, swiper.paths.value, false);\n  };\n\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) return;\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}\n","import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\n\nexport default function HashNavigation({ swiper, extendParams, emit, on }) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl\n        .children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`)\n        .index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    if (\n      swiper.params.hashNavigation.replaceState &&\n      window.history &&\n      window.history.replaceState\n    ) {\n      window.history.replaceState(\n        null,\n        null,\n        `#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || '',\n      );\n      emit('hashSet');\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (\n      !swiper.params.hashNavigation.enabled ||\n      (swiper.params.history && swiper.params.history.enabled)\n    )\n      return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', onHashChange);\n    }\n  };\n\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}\n","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { nextTick } from '../../shared/utils.js';\n\nexport default function Autoplay({ swiper, extendParams, on, emit }) {\n  let timeout;\n\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n  };\n\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false,\n    },\n  });\n\n  function run() {\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(timeout);\n    timeout = nextTick(() => {\n      let autoplayResult;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          autoplayResult = swiper.slideTo(\n            swiper.slides.length - 1,\n            swiper.params.speed,\n            true,\n            true,\n          );\n          emit('autoplay');\n        } else {\n          stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n        emit('autoplay');\n      } else if (!swiper.isEnd) {\n        autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n        emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n        emit('autoplay');\n      } else {\n        stop();\n      }\n      if (swiper.params.cssMode && swiper.autoplay.running) run();\n      else if (autoplayResult === false) {\n        run();\n      }\n    }, delay);\n  }\n  function start() {\n    if (typeof timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    emit('autoplayStart');\n    run();\n    return true;\n  }\n  function stop() {\n    if (!swiper.autoplay.running) return false;\n    if (typeof timeout === 'undefined') return false;\n\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    emit('autoplayStop');\n    return true;\n  }\n  function pause(speed) {\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (timeout) clearTimeout(timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      run();\n    } else {\n      ['transitionend', 'webkitTransitionEnd'].forEach((event) => {\n        swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);\n      });\n    }\n  }\n  function onVisibilityChange() {\n    const document = getDocument();\n    if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n      pause();\n    }\n    if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n      run();\n      swiper.autoplay.paused = false;\n    }\n  }\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n    if (e.target !== swiper.$wrapperEl[0]) return;\n    ['transitionend', 'webkitTransitionEnd'].forEach((event) => {\n      swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n    });\n    swiper.autoplay.paused = false;\n    if (!swiper.autoplay.running) {\n      stop();\n    } else {\n      run();\n    }\n  }\n  function onMouseEnter() {\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n    } else {\n      pause();\n    }\n\n    ['transitionend', 'webkitTransitionEnd'].forEach((event) => {\n      swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n    });\n  }\n  function onMouseLeave() {\n    if (swiper.params.autoplay.disableOnInteraction) {\n      return;\n    }\n    swiper.autoplay.paused = false;\n    run();\n  }\n  function attachMouseEvents() {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.$el.on('mouseenter', onMouseEnter);\n      swiper.$el.on('mouseleave', onMouseLeave);\n    }\n  }\n  function detachMouseEvents() {\n    swiper.$el.off('mouseenter', onMouseEnter);\n    swiper.$el.off('mouseleave', onMouseLeave);\n  }\n\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      start();\n      const document = getDocument();\n      document.addEventListener('visibilitychange', onVisibilityChange);\n      attachMouseEvents();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.autoplay.running) {\n      if (internal || !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.pause(speed);\n      } else {\n        stop();\n      }\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.autoplay.running) {\n      if (swiper.params.autoplay.disableOnInteraction) {\n        stop();\n      } else {\n        pause();\n      }\n    }\n  });\n  on('touchEnd', () => {\n    if (\n      swiper.params.cssMode &&\n      swiper.autoplay.paused &&\n      !swiper.params.autoplay.disableOnInteraction\n    ) {\n      run();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  });\n\n  Object.assign(swiper.autoplay, {\n    pause,\n    run,\n    start,\n    stop,\n  });\n}\n","import { isObject } from '../../shared/utils.js';\nimport $ from '../../shared/dom.js';\n\nexport default function Thumb({ swiper, extendParams, on }) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs',\n    },\n  });\n\n  let initialized = false;\n  let swiperCreated = false;\n\n  swiper.thumbs = {\n    swiper: null,\n  };\n\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass))\n      return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides\n        .eq(currentIndex)\n        .prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`)\n        .eq(0)\n        .index();\n      const nextIndex = swiper.slides\n        .eq(currentIndex)\n        .nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`)\n        .eq(0)\n        .index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  }\n\n  function init() {\n    const { thumbs: thumbsParams } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView =\n      thumbsSwiper.params.slidesPerView === 'auto'\n        ? thumbsSwiper.slidesPerViewDynamic()\n        : thumbsSwiper.params.slidesPerView;\n\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        if (\n          thumbsSwiper.slides\n            .eq(currentThumbsIndex)\n            .hasClass(thumbsSwiper.params.slideDuplicateClass)\n        ) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides\n          .eq(currentThumbsIndex)\n          .prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`)\n          .eq(0)\n          .index();\n        const nextThumbsIndex = thumbsSwiper.slides\n          .eq(currentThumbsIndex)\n          .nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`)\n          .eq(0)\n          .index();\n        if (typeof prevThumbsIndex === 'undefined') {\n          newThumbsIndex = nextThumbsIndex;\n        } else if (typeof nextThumbsIndex === 'undefined') {\n          newThumbsIndex = prevThumbsIndex;\n        } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n          newThumbsIndex =\n            thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\n        } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n          newThumbsIndex = nextThumbsIndex;\n        } else {\n          newThumbsIndex = prevThumbsIndex;\n        }\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n\n      if (\n        thumbsSwiper.visibleSlidesIndexes &&\n        thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0\n      ) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (\n          newThumbsIndex > currentThumbsIndex &&\n          thumbsSwiper.params.slidesPerGroup === 1\n        ) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (\n      thumbsSwiper.params.loop ||\n      (thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled)\n    ) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl\n          .children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`)\n          .addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  }\n\n  on('beforeInit', () => {\n    const { thumbs } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    init();\n    update(true);\n  });\n  on('slideChange update resize observerUpdate', () => {\n    if (!swiper.thumbs.swiper) return;\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    if (swiperCreated && thumbsSwiper) {\n      thumbsSwiper.destroy();\n    }\n  });\n\n  Object.assign(swiper.thumbs, {\n    init,\n    update,\n  });\n}\n","import { now } from '../../shared/utils.js';\n\nexport default function freeMode({ swiper, extendParams, emit, once }) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02,\n    },\n  });\n\n  function onTouchMove() {\n    const { touchEventsData: data, touches } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now(),\n    });\n  }\n\n  function onTouchEnd({ currentPos }) {\n    const { params, $wrapperEl, rtlTranslate: rtl, snapGrid, touchEventsData: data } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (\n          Math.abs(snapGrid[nextSlide] - newPosition) <\n            Math.abs(snapGrid[nextSlide - 1] - newPosition) ||\n          swiper.swipeDirection === 'next'\n        ) {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(() => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchMove,\n      onTouchEnd,\n    },\n  });\n}\n","export default function Grid({ swiper, extendParams }) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column',\n    },\n  });\n\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n\n  const initSlides = (slidesLength) => {\n    const { slidesPerView } = swiper.params;\n    const { rows, fill } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const { slidesPerGroup, spaceBetween } = swiper.params;\n    const { rows, fill } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup =\n        groupIndex === 0\n          ? slidesPerGroup\n          : Math.min(\n              Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows),\n              slidesPerGroup,\n            );\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n\n      newSlideOrderIndex = column + (row * slidesNumberEvenToRows) / rows;\n      slide.css({\n        '-webkit-order': newSlideOrderIndex,\n        order: newSlideOrderIndex,\n      });\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || (column === numFullColumns && row === rows - 1)) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.css(\n      getDirectionLabel('margin-top'),\n      row !== 0 ? spaceBetween && `${spaceBetween}px` : '',\n    );\n  };\n\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const { spaceBetween, centeredSlides, roundLengths } = swiper.params;\n    const { rows } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.$wrapperEl.css({\n      [getDirectionLabel('width')]: `${swiper.virtualSize + spaceBetween}px`,\n    });\n    if (centeredSlides) {\n      snapGrid.splice(0, snapGrid.length);\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize,\n  };\n}\n","export default function appendSlide(slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer) {\n    swiper.update();\n  }\n}\n","export default function prependSlide(slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n","export default function addSlide(index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex =\n      activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n","export default function removeAllSlides() {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\n\nexport default function Manipulation({ swiper }) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper),\n  });\n}\n","export default function effectInit(params) {\n  const { effect, swiper, on, setTranslate, setTransition, overwriteParams, perspective } = params;\n\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n}\n","export default function effectTarget(effectParams, $slideEl) {\n  if (effectParams.transformEl) {\n    return $slideEl.find(effectParams.transformEl).css({\n      'backface-visibility': 'hidden',\n      '-webkit-backface-visibility': 'hidden',\n    });\n  }\n  return $slideEl;\n}\n","export default function effectVirtualTransitionEnd({ swiper, duration, transformEl, allSlides }) {\n  const { slides, activeIndex, $wrapperEl } = swiper;\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let $transitionEndTarget;\n    if (allSlides) {\n      $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;\n    } else {\n      $transitionEndTarget = transformEl\n        ? slides.eq(activeIndex).find(transformEl)\n        : slides.eq(activeIndex);\n    }\n    $transitionEndTarget.transitionEnd(() => {\n      if (eventTriggered) return;\n      if (!swiper || swiper.destroyed) return;\n      eventTriggered = true;\n      swiper.animating = false;\n      const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n      for (let i = 0; i < triggerEvents.length; i += 1) {\n        $wrapperEl.trigger(triggerEvents[i]);\n      }\n    });\n  }\n}\n","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\n\nexport default function EffectFade({ swiper, extendParams, on }) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false,\n      transformEl: null,\n    },\n  });\n\n  const setTranslate = () => {\n    const { slides } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  };\n  const setTransition = (duration) => {\n    const { transformEl } = swiper.params.fadeEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration);\n    effectVirtualTransitionEnd({ swiper, duration, transformEl, allSlides: true });\n  };\n\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode,\n    }),\n  });\n}\n","import $ from '../../shared/dom.js';\nimport effectInit from '../../shared/effect-init.js';\n\nexport default function EffectCube({ swiper, extendParams, on }) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  });\n\n  const setTranslate = () => {\n    const {\n      $el,\n      $wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${\n        isHorizontal ? slideAngle : 0\n      }deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal\n          ? $slideEl.find('.swiper-slide-shadow-left')\n          : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal\n          ? $slideEl.find('.swiper-slide-shadow-right')\n          : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(\n            `<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`,\n          );\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(\n            `<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`,\n          );\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(\n          `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${\n            -swiperWidth / 2\n          }px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`,\n        );\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier =\n          1.5 -\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2 +\n            Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(\n          `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${\n            -swiperHeight / 2 / scale2\n          }px) rotateX(-90deg)`,\n        );\n      }\n    }\n    const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n    $wrapperEl.transform(\n      `translate3d(0px,0,${zFactor}px) rotateX(${\n        swiper.isHorizontal() ? 0 : wrapperRotate\n      }deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`,\n    );\n  };\n  const setTransition = (duration) => {\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find(\n        '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left',\n      )\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  };\n\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true,\n    }),\n  });\n}\n","import $ from './dom.js';\n\nexport default function createShadow(params, $slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;\n  let $shadowEl = $shadowContainer.children(`.${shadowClass}`);\n\n  if (!$shadowEl.length) {\n    $shadowEl = $(`<div class=\"swiper-slide-shadow${side ? `-${side}` : ''}\"></div>`);\n    $shadowContainer.append($shadowEl);\n  }\n  return $shadowEl;\n}\n","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\n\nexport default function EffectFlip({ swiper, extendParams, on }) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n      transformEl: null,\n    },\n  });\n\n  const setTranslate = () => {\n    const { slides, rtlTranslate: rtl } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal()\n          ? $slideEl.find('.swiper-slide-shadow-left')\n          : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal()\n          ? $slideEl.find('.swiper-slide-shadow-right')\n          : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = (duration) => {\n    const { transformEl } = swiper.params.flipEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements\n      .transition(duration)\n      .find(\n        '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left',\n      )\n      .transition(duration);\n    effectVirtualTransitionEnd({ swiper, duration, transformEl });\n  };\n\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode,\n    }),\n  });\n}\n","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\n\nexport default function EffectCoverflow({ swiper, extendParams, on }) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true,\n      transformEl: null,\n    },\n  });\n\n  const setTranslate = () => {\n    const { width: swiperWidth, height: swiperHeight, slides, slidesSizesGrid } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier =\n        ((center - slideOffset - slideSize / 2) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = (parseFloat(params.stretch) / 100) * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(slideTransform);\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal\n          ? $slideEl.find('.swiper-slide-shadow-left')\n          : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal\n          ? $slideEl.find('.swiper-slide-shadow-right')\n          : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if ($shadowBeforeEl.length)\n          $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length)\n          $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = (duration) => {\n    const { transformEl } = swiper.params.coverflowEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements\n      .transition(duration)\n      .find(\n        '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left',\n      )\n      .transition(duration);\n  };\n\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n    }),\n  });\n}\n","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\n\nexport default function EffectCreative({ swiper, extendParams, on }) {\n  extendParams({\n    creativeEffect: {\n      transformEl: null,\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1,\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1,\n      },\n    },\n  });\n\n  const getTranslateValue = (value) => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n\n  const setTranslate = () => {\n    const { slides } = swiper;\n    const params = swiper.params.creativeEffect;\n    const { progressMultiplier: multiplier } = params;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(\n        Math.max($slideEl[0].progress, -params.limitProgress),\n        params.limitProgress,\n      );\n      const offset = $slideEl[0].swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1,\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(\n          progress * multiplier,\n        )}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString =\n        progress < 0\n          ? `scale(${1 + (1 - data.scale) * progress * multiplier})`\n          : `scale(${1 - (1 - data.scale) * progress * multiplier})`;\n      const opacityString =\n        progress < 0\n          ? 1 + (1 - data.opacity) * progress * multiplier\n          : 1 - (1 - data.opacity) * progress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if ((custom && data.shadow) || !custom) {\n        let $shadowEl = $slideEl.children('.swiper-slide-shadow');\n        if ($shadowEl.length === 0 && data.shadow) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n        if ($shadowEl.length) {\n          const shadowOpacity = params.shadowPerProgress\n            ? progress * (1 / params.limitProgress)\n            : progress;\n          $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform).css({ opacity: opacityString });\n      if (data.origin) {\n        $targetEl.css('transform-origin', data.origin);\n      }\n    }\n  };\n\n  const setTransition = (duration) => {\n    const { transformEl } = swiper.params.creativeEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n\n    effectVirtualTransitionEnd({ swiper, duration, transformEl, allSlides: true });\n  };\n\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode,\n    }),\n  });\n}\n","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\n\nexport default function EffectCards({ swiper, extendParams, on }) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      transformEl: null,\n    },\n  });\n\n  const setTranslate = () => {\n    const { slides, activeIndex } = swiper;\n    const params = swiper.params.cardsEffect;\n    const { startTranslate, isTouched } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = $slideEl[0].swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -2 * progress;\n\n      let tXAdd = 8 - Math.abs(progress) * 0.75;\n\n      const isSwipeToNext =\n        (i === activeIndex || i === activeIndex - 1) &&\n        progress > 0 &&\n        progress < 1 &&\n        (isTouched || swiper.params.cssMode) &&\n        currentTranslate < startTranslate;\n      const isSwipeToPrev =\n        (i === activeIndex || i === activeIndex + 1) &&\n        progress < 0 &&\n        progress > -1 &&\n        (isTouched || swiper.params.cssMode) &&\n        currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n\n      const scaleString =\n        progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${rotate}deg)\n        scale(${scaleString})\n      `;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowEl = $slideEl.find('.swiper-slide-shadow');\n        if ($shadowEl.length === 0) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n        if ($shadowEl.length)\n          $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = (duration) => {\n    const { transformEl } = swiper.params.cardsEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n\n    effectVirtualTransitionEnd({ swiper, duration, transformEl });\n  };\n\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode,\n    }),\n  });\n}\n","// Swiper Class\nimport Swiper from './core/core.js';\n\n//IMPORT_MODULES\n\nconst modules = [\n  //INSTALL_MODULES\n];\n\nSwiper.use(modules);\n\n//EXPORT\n"]},"metadata":{},"sourceType":"script"}