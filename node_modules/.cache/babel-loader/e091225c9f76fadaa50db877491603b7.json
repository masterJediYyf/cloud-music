{"ast":null,"code":"import axios from \"axios\";\nexport const baseUrl = \"https://music-api-five.vercel.app/\"; // axios的实例及拦截器配置\n\nconst axiosInstance = axios.create({\n  baseURL: baseUrl\n});\naxiosInstance.interceptors.response.use(res => res.data, err => {\n  console.log(err, \"网络错误\");\n});\nexport { axiosInstance }; //歌手种类\n\nexport const categoryTypes = [{\n  name: \"华语男\",\n  key: \"1001\"\n}, {\n  name: \"华语女\",\n  key: \"1002\"\n}, {\n  name: \"华语组合\",\n  key: \"1003\"\n}, {\n  name: \"欧美男\",\n  key: \"2001\"\n}, {\n  name: \"欧美女\",\n  key: \"2002\"\n}, {\n  name: \"欧美组合\",\n  key: \"2003\"\n}, {\n  name: \"日本男\",\n  key: \"6001\"\n}, {\n  name: \"日本女\",\n  key: \"6002\"\n}, {\n  name: \"日本组合\",\n  key: \"6003\"\n}, {\n  name: \"韩国男\",\n  key: \"7001\"\n}, {\n  name: \"韩国女\",\n  key: \"7002\"\n}, {\n  name: \"韩国组合\",\n  key: \"7003\"\n}, {\n  name: \"其他男歌手\",\n  key: \"4001\"\n}, {\n  name: \"其他女歌手\",\n  key: \"4002\"\n}, {\n  name: \"其他组合\",\n  key: \"4003\"\n}]; // export const categoryTypes = new Map([\n//     ['1001', { type: 1, area: 7 }],\n//     ['1002', { type: 2, area: 7 }],\n//     ['1003', { type: 3, area: 7 }],\n//     ['2001', { type: 1, area: 96 }],\n//     ['2002', { type: 2, area: 96 }],\n//     ['2003', { type: 3, area: 96 }],\n//     ['6001', { type: 1, area: 8 }],\n//     ['6002', { type: 2, area: 8 }],\n//     ['6003', { type: 3, area: 8 }],\n//     ['7001', { type: 1, area: 16 }],\n//     ['7002', { type: 2, area: 16 }],\n//     ['7003', { type: 3, area: 16 }],\n//     ['4001', { type: 1, area: 0 }],\n//     ['4002', { type: 2, area: 0 }],\n//     ['4003', { type: 3, area: 0 }],\n// ]);\n//歌手首字母\n\nexport const alphaTypes = [{\n  key: \"A\",\n  name: \"A\"\n}, {\n  key: \"B\",\n  name: \"B\"\n}, {\n  key: \"C\",\n  name: \"C\"\n}, {\n  key: \"D\",\n  name: \"D\"\n}, {\n  key: \"E\",\n  name: \"E\"\n}, {\n  key: \"F\",\n  name: \"F\"\n}, {\n  key: \"G\",\n  name: \"G\"\n}, {\n  key: \"H\",\n  name: \"H\"\n}, {\n  key: \"I\",\n  name: \"I\"\n}, {\n  key: \"J\",\n  name: \"J\"\n}, {\n  key: \"K\",\n  name: \"K\"\n}, {\n  key: \"L\",\n  name: \"L\"\n}, {\n  key: \"M\",\n  name: \"M\"\n}, {\n  key: \"N\",\n  name: \"N\"\n}, {\n  key: \"O\",\n  name: \"O\"\n}, {\n  key: \"P\",\n  name: \"P\"\n}, {\n  key: \"Q\",\n  name: \"Q\"\n}, {\n  key: \"R\",\n  name: \"R\"\n}, {\n  key: \"S\",\n  name: \"S\"\n}, {\n  key: \"T\",\n  name: \"T\"\n}, {\n  key: \"U\",\n  name: \"U\"\n}, {\n  key: \"V\",\n  name: \"V\"\n}, {\n  key: \"W\",\n  name: \"W\"\n}, {\n  key: \"X\",\n  name: \"X\"\n}, {\n  key: \"Y\",\n  name: \"Y\"\n}, {\n  key: \"Z\",\n  name: \"Z\"\n}]; //排行榜编号\n\nexport const RankTypes = {\n  \"0\": \"云音乐新歌榜\",\n  \"1\": \"云音乐热歌榜\",\n  \"2\": \"网易原创歌曲榜\",\n  \"3\": \"云音乐飙升榜\",\n  \"4\": \"云音乐国电榜\",\n  \"5\": \"UK排行榜周榜\",\n  \"6\": \"美国Billboard周榜\",\n  \"7\": \"KTV唛榜\",\n  \"8\": \"iTunes榜\",\n  \"9\": \"Hit FM Top榜\",\n  \"10\": \"日本Oricon周榜\",\n  \"11\": \"韩国Melon排行榜周榜\",\n  \"12\": \"韩国Mnet排行榜周榜\",\n  \"13\": \"韩国Melon原声周榜\",\n  \"14\": \"中国TOP排行榜（港台榜）\",\n  \"15\": \"中国TOP排行榜（内地榜）\",\n  \"16\": \"香港电台中文歌曲龙虎榜\",\n  \"17\": \"华语金曲榜\",\n  \"18\": \"中国嘻哈榜\",\n  \"19\": \"法国 NRJ Vos Hits 周榜\",\n  \"20\": \"台湾Hito排行榜\",\n  \"21\": \"Beatport全球电子舞曲榜\",\n  \"22\": \"云音乐ACG音乐榜\",\n  \"23\": \"江小白YOLO云音乐说唱榜\"\n}; //歌单一页限定歌曲数量\n\nexport const ONE_PAGE_COUNT = 50; //顶部的高度\n\nexport const HEADER_HEIGHT = 45; //播放模式\n\nexport const playMode = {\n  sequence: 0,\n  loop: 1,\n  random: 2\n}; // 倍速播放配置\n\nexport const list = [{\n  key: 0.75,\n  name: \"x0.75\"\n}, {\n  key: 1,\n  name: \"x1\"\n}, {\n  key: 1.25,\n  name: \"x1.25\"\n}, {\n  key: 1.5,\n  name: \"x1.5\"\n}, {\n  key: 2,\n  name: \"x2\"\n}];","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/api/config.js"],"names":["axios","baseUrl","axiosInstance","create","baseURL","interceptors","response","use","res","data","err","console","log","categoryTypes","name","key","alphaTypes","RankTypes","ONE_PAGE_COUNT","HEADER_HEIGHT","playMode","sequence","loop","random","list"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const baseUrl = \"https://music-api-five.vercel.app/\";\r\n\r\n// axios的实例及拦截器配置\r\nconst axiosInstance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n    res => res.data,\r\n    err => {\r\n        console.log(err, \"网络错误\");\r\n    }\r\n);\r\n\r\nexport { axiosInstance };\r\n\r\n//歌手种类\r\nexport const categoryTypes = [{\r\n        name: \"华语男\",\r\n        key: \"1001\"\r\n    },\r\n    {\r\n        name: \"华语女\",\r\n        key: \"1002\"\r\n    },\r\n    {\r\n        name: \"华语组合\",\r\n        key: \"1003\"\r\n    },\r\n    {\r\n        name: \"欧美男\",\r\n        key: \"2001\"\r\n    },\r\n    {\r\n        name: \"欧美女\",\r\n        key: \"2002\"\r\n    },\r\n    {\r\n        name: \"欧美组合\",\r\n        key: \"2003\"\r\n    },\r\n    {\r\n        name: \"日本男\",\r\n        key: \"6001\"\r\n    },\r\n    {\r\n        name: \"日本女\",\r\n        key: \"6002\"\r\n    },\r\n    {\r\n        name: \"日本组合\",\r\n        key: \"6003\"\r\n    },\r\n    {\r\n        name: \"韩国男\",\r\n        key: \"7001\"\r\n    },\r\n    {\r\n        name: \"韩国女\",\r\n        key: \"7002\"\r\n    },\r\n    {\r\n        name: \"韩国组合\",\r\n        key: \"7003\"\r\n    },\r\n    {\r\n        name: \"其他男歌手\",\r\n        key: \"4001\"\r\n    },\r\n    {\r\n        name: \"其他女歌手\",\r\n        key: \"4002\"\r\n    },\r\n    {\r\n        name: \"其他组合\",\r\n        key: \"4003\"\r\n    }\r\n];\r\n// export const categoryTypes = new Map([\r\n//     ['1001', { type: 1, area: 7 }],\r\n//     ['1002', { type: 2, area: 7 }],\r\n//     ['1003', { type: 3, area: 7 }],\r\n//     ['2001', { type: 1, area: 96 }],\r\n//     ['2002', { type: 2, area: 96 }],\r\n//     ['2003', { type: 3, area: 96 }],\r\n//     ['6001', { type: 1, area: 8 }],\r\n//     ['6002', { type: 2, area: 8 }],\r\n//     ['6003', { type: 3, area: 8 }],\r\n//     ['7001', { type: 1, area: 16 }],\r\n//     ['7002', { type: 2, area: 16 }],\r\n//     ['7003', { type: 3, area: 16 }],\r\n//     ['4001', { type: 1, area: 0 }],\r\n//     ['4002', { type: 2, area: 0 }],\r\n//     ['4003', { type: 3, area: 0 }],\r\n// ]);\r\n\r\n//歌手首字母\r\nexport const alphaTypes = [{\r\n        key: \"A\",\r\n        name: \"A\"\r\n    },\r\n    {\r\n        key: \"B\",\r\n        name: \"B\"\r\n    },\r\n    {\r\n        key: \"C\",\r\n        name: \"C\"\r\n    },\r\n    {\r\n        key: \"D\",\r\n        name: \"D\"\r\n    },\r\n    {\r\n        key: \"E\",\r\n        name: \"E\"\r\n    },\r\n    {\r\n        key: \"F\",\r\n        name: \"F\"\r\n    },\r\n    {\r\n        key: \"G\",\r\n        name: \"G\"\r\n    },\r\n    {\r\n        key: \"H\",\r\n        name: \"H\"\r\n    },\r\n    {\r\n        key: \"I\",\r\n        name: \"I\"\r\n    },\r\n    {\r\n        key: \"J\",\r\n        name: \"J\"\r\n    },\r\n    {\r\n        key: \"K\",\r\n        name: \"K\"\r\n    },\r\n    {\r\n        key: \"L\",\r\n        name: \"L\"\r\n    },\r\n    {\r\n        key: \"M\",\r\n        name: \"M\"\r\n    },\r\n    {\r\n        key: \"N\",\r\n        name: \"N\"\r\n    },\r\n    {\r\n        key: \"O\",\r\n        name: \"O\"\r\n    },\r\n    {\r\n        key: \"P\",\r\n        name: \"P\"\r\n    },\r\n    {\r\n        key: \"Q\",\r\n        name: \"Q\"\r\n    },\r\n    {\r\n        key: \"R\",\r\n        name: \"R\"\r\n    },\r\n    {\r\n        key: \"S\",\r\n        name: \"S\"\r\n    },\r\n    {\r\n        key: \"T\",\r\n        name: \"T\"\r\n    },\r\n    {\r\n        key: \"U\",\r\n        name: \"U\"\r\n    },\r\n    {\r\n        key: \"V\",\r\n        name: \"V\"\r\n    },\r\n    {\r\n        key: \"W\",\r\n        name: \"W\"\r\n    },\r\n    {\r\n        key: \"X\",\r\n        name: \"X\"\r\n    },\r\n    {\r\n        key: \"Y\",\r\n        name: \"Y\"\r\n    },\r\n    {\r\n        key: \"Z\",\r\n        name: \"Z\"\r\n    }\r\n];\r\n\r\n//排行榜编号\r\nexport const RankTypes = {\r\n    \"0\": \"云音乐新歌榜\",\r\n    \"1\": \"云音乐热歌榜\",\r\n    \"2\": \"网易原创歌曲榜\",\r\n    \"3\": \"云音乐飙升榜\",\r\n    \"4\": \"云音乐国电榜\",\r\n    \"5\": \"UK排行榜周榜\",\r\n    \"6\": \"美国Billboard周榜\",\r\n    \"7\": \"KTV唛榜\",\r\n    \"8\": \"iTunes榜\",\r\n    \"9\": \"Hit FM Top榜\",\r\n    \"10\": \"日本Oricon周榜\",\r\n    \"11\": \"韩国Melon排行榜周榜\",\r\n    \"12\": \"韩国Mnet排行榜周榜\",\r\n    \"13\": \"韩国Melon原声周榜\",\r\n    \"14\": \"中国TOP排行榜（港台榜）\",\r\n    \"15\": \"中国TOP排行榜（内地榜）\",\r\n    \"16\": \"香港电台中文歌曲龙虎榜\",\r\n    \"17\": \"华语金曲榜\",\r\n    \"18\": \"中国嘻哈榜\",\r\n    \"19\": \"法国 NRJ Vos Hits 周榜\",\r\n    \"20\": \"台湾Hito排行榜\",\r\n    \"21\": \"Beatport全球电子舞曲榜\",\r\n    \"22\": \"云音乐ACG音乐榜\",\r\n    \"23\": \"江小白YOLO云音乐说唱榜\"\r\n};\r\n\r\n//歌单一页限定歌曲数量\r\nexport const ONE_PAGE_COUNT = 50;\r\n\r\n//顶部的高度\r\nexport const HEADER_HEIGHT = 45;\r\n\r\n//播放模式\r\nexport const playMode = {\r\n    sequence: 0,\r\n    loop: 1,\r\n    random: 2\r\n};\r\n\r\n// 倍速播放配置\r\nexport const list = [{\r\n        key: 0.75,\r\n        name: \"x0.75\"\r\n    },\r\n    {\r\n        key: 1,\r\n        name: \"x1\"\r\n    },\r\n    {\r\n        key: 1.25,\r\n        name: \"x1.25\"\r\n    },\r\n    {\r\n        key: 1.5,\r\n        name: \"x1.5\"\r\n    },\r\n    {\r\n        key: 2,\r\n        name: \"x2\"\r\n    }\r\n]"]},"metadata":{},"sourceType":"module"}