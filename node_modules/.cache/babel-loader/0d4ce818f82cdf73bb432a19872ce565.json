{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\application\\\\Recommend\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Slider from '../../components/slider';\nimport { connect } from 'react-redux';\nimport * as actionTypes from './store/actionCreators';\nimport RecommendList from '../../components/list';\nimport Scroll from '../../baseUI/scroll';\nimport { Content } from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Recommend(props) {\n  _s();\n\n  const {\n    bannerList,\n    recommendList\n  } = props;\n  const {\n    getBannerDataDispatch,\n    getRecommendListDataDispatch\n  } = props;\n  useEffect(() => {\n    getBannerDataDispatch();\n    getRecommendListDataDispatch();\n  }, []);\n  const bannerListJS = bannerList ? bannerList.toJS() : [];\n  const recommendListJS = recommendList ? recommendList.toJS() : [];\n  return /*#__PURE__*/_jsxDEV(Content, {\n    children: /*#__PURE__*/_jsxDEV(Scroll, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          bannerList: bannerList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecommendList, {\n          recommendList: recommendList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n} // 映射 Redux 全局的 state 到组件的 props 上\n\n\n_s(Recommend, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Recommend;\n\nconst mapStateToProps = state => ({\n  // 不要在这里将数据 toJS\n  // 不然每次 diff 比对 props 的时候都是不一样的引用，还是导致不必要的重渲染，属于滥用 immutable\n  bannerList: state.getIn(['recommend', 'bannerList']),\n  recommendList: state.getIn(['recommend', 'recommendList'])\n}); // 映射 dispatch 到 props 上\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getBannerDataDispatch() {\n      dispatch(actionTypes.getBannerList());\n    },\n\n    getRecommendListDataDispatch() {\n      dispatch(actionTypes.getRecommendList());\n    }\n\n  };\n};\n\nexport default _c2 = /*#__PURE__*/React.memo(Recommend);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Recommend\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/application/Recommend/index.js"],"names":["React","useEffect","Slider","connect","actionTypes","RecommendList","Scroll","Content","Recommend","props","bannerList","recommendList","getBannerDataDispatch","getRecommendListDataDispatch","bannerListJS","toJS","recommendListJS","mapStateToProps","state","getIn","mapDispatchToProps","dispatch","getBannerList","getRecommendList","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,OAAT,QAAwB,SAAxB;;;AAEA,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM;AAACC,IAAAA,UAAD;AAAYC,IAAAA;AAAZ,MAA6BF,KAAnC;AAEA,QAAM;AAACG,IAAAA,qBAAD;AAAuBC,IAAAA;AAAvB,MAAwDJ,KAA9D;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,qBAAqB;AACrBC,IAAAA,4BAA4B;AAC7B,GAHQ,EAGP,EAHO,CAAT;AAKA,QAAMC,YAAY,GAAGJ,UAAU,GAAGA,UAAU,CAACK,IAAX,EAAH,GAAuB,EAAtD;AACA,QAAMC,eAAe,GAAGL,aAAa,GAAGA,aAAa,CAACI,IAAd,EAAH,GAA0B,EAA/D;AAGA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,UAAU,EAAEL;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAe,UAAA,aAAa,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,C,CAED;;;GA1BSH,S;;KAAAA,S;;AA2BT,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAClC;AACA;AACAR,EAAAA,UAAU,EAAEQ,KAAK,CAACC,KAAN,CAAa,CAAC,WAAD,EAAc,YAAd,CAAb,CAHsB;AAIlCR,EAAAA,aAAa,EAAEO,KAAK,CAACC,KAAN,CAAa,CAAC,WAAD,EAAc,eAAd,CAAb;AAJmB,CAAZ,CAAxB,C,CAMA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLT,IAAAA,qBAAqB,GAAI;AACvBS,MAAAA,QAAQ,CAAEjB,WAAW,CAACkB,aAAZ,EAAF,CAAR;AACD,KAHI;;AAILT,IAAAA,4BAA4B,GAAI;AAC9BQ,MAAAA,QAAQ,CAAEjB,WAAW,CAACmB,gBAAZ,EAAF,CAAR;AACD;;AANI,GAAP;AAQD,CATD;;AAWA,kCAAevB,KAAK,CAACwB,IAAN,CAAYhB,SAAZ,CAAf","sourcesContent":["import React,{useEffect} from 'react';\r\nimport Slider from '../../components/slider';\r\nimport {connect} from 'react-redux';\r\nimport * as actionTypes from './store/actionCreators';\r\nimport RecommendList from '../../components/list';\r\nimport Scroll from '../../baseUI/scroll';\r\nimport { Content } from './style';\r\n\r\nfunction Recommend (props) {\r\n  const {bannerList,recommendList} = props;\r\n\r\n  const {getBannerDataDispatch,getRecommendListDataDispatch } = props;\r\n\r\n  useEffect(() => {\r\n    getBannerDataDispatch();\r\n    getRecommendListDataDispatch();\r\n  },[]);\r\n\r\n  const bannerListJS = bannerList ? bannerList.toJS() : [];\r\n  const recommendListJS = recommendList ? recommendList.toJS() : [];\r\n\r\n\r\n  return (\r\n    <Content>\r\n      <Scroll>\r\n        <div>\r\n          <Slider bannerList={bannerList}></Slider>\r\n          <RecommendList recommendList={recommendList}></RecommendList> \r\n        </div>\r\n      </Scroll>\r\n    </Content>\r\n  )\r\n}\r\n\r\n// 映射 Redux 全局的 state 到组件的 props 上\r\nconst mapStateToProps = (state) => ({\r\n  // 不要在这里将数据 toJS\r\n  // 不然每次 diff 比对 props 的时候都是不一样的引用，还是导致不必要的重渲染，属于滥用 immutable\r\n  bannerList: state.getIn (['recommend', 'bannerList']),\r\n  recommendList: state.getIn (['recommend', 'recommendList']),\r\n});\r\n// 映射 dispatch 到 props 上\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getBannerDataDispatch () {\r\n      dispatch (actionTypes.getBannerList ());\r\n    },\r\n    getRecommendListDataDispatch () {\r\n      dispatch (actionTypes.getRecommendList ());\r\n    },\r\n  }\r\n};\r\n\r\nexport default React.memo (Recommend);"]},"metadata":{},"sourceType":"module"}