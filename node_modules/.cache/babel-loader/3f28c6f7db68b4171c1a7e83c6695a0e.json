{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\baseUI\\\\horizen-item\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, memo } from \"react\";\nimport styled from 'styled-components';\nimport Scroll from '../scroll/index';\nimport { PropTypes } from 'prop-types';\nimport style from '../../assets/global-style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Horizen(props) {\n  _s();\n\n  const {\n    list,\n    oldVal,\n    title\n  } = props;\n  const {\n    handleClick\n  } = props; //加入声明\n\n  const Category = useRef(null);\n  const [innerWidth, setInnerWidth] = useState('');\n  useEffect(() => {\n    let categoryDOM = Category.current;\n    let tagElems = categoryDOM.querySelectorAll('span');\n    let totalWidth = 0;\n    Array.from(tagElems).forEach(ele => {\n      totalWidth += ele.offsetWidth;\n    });\n    categoryDOM.style.width = `${totalWidth}px`;\n    setInnerWidth(totalWidth);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Scroll, {\n    direction: \"horizental\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: Category,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), list.map(item => {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            className: `${oldVal === item.key ? 'selected' : ''}`,\n            onClick: () => handleClick(item.key),\n            children: item.name\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n} // 首先考虑接受的参数\n//list 为接受的列表数据\n//oldVal 为当前的 item 值\n//title 为列表左边的标题\n//handleClick 为点击不同的 item 执行的方法\n\n\n_s(Horizen, \"cdGWeWKeL80hODvHgG6Q+HEJB7E=\");\n\n_c = Horizen;\nHorizen.defaultProps = {\n  list: [],\n  oldVal: '',\n  title: '',\n  handleClick: null\n};\nHorizen.propTypes = {\n  list: PropTypes.array,\n  oldVal: PropTypes.string,\n  title: PropTypes.string,\n  handleClick: PropTypes.func\n}; // 由于基础组件样式较少，直接写在 index.js 中\n\nconst List = styled.div`\n  display: flex;\n  align-items: center;\n  height: 30px;\n  overflow: hidden;\n  >span:first-of-type {\n    display: block;\n    flex: 0 0 auto;\n    padding: 5px 0;\n    margin-right: 5px;\n    color: grey;\n    font-size: ${style[\"font-size-m\"]};\n    vertical-align: middle;\n  }\n`;\n_c2 = List;\nconst ListItem = styled.span`\n  flex: 0 0 auto;\n  font-size: ${style[\"font-size-m\"]};\n  padding: 5px 8px;\n  border-radius: 10px;\n  &.selected {\n    color: ${style[\"theme-color\"]};\n    border: 1px solid ${style[\"theme-color\"]};\n    opacity: 0.8;\n  }\n`;\n_c3 = ListItem;\nexport default _c4 = /*#__PURE__*/memo(Horizen);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Horizen\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"ListItem\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/baseUI/horizen-item/index.js"],"names":["React","useState","useRef","useEffect","memo","styled","Scroll","PropTypes","style","Horizen","props","list","oldVal","title","handleClick","Category","innerWidth","setInnerWidth","categoryDOM","current","tagElems","querySelectorAll","totalWidth","Array","from","forEach","ele","offsetWidth","width","map","item","key","name","defaultProps","propTypes","array","string","func","List","div","ListItem","span"],"mappings":"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","sourcesContent":["import React,{useState,useRef,useEffect,memo} from \"react\";\r\nimport styled from 'styled-components';\r\nimport Scroll from '../scroll/index';\r\nimport {PropTypes} from 'prop-types';\r\nimport style from '../../assets/global-style';\r\n\r\nfunction Horizen(props){\r\n    const {list,oldVal,title} = props;\r\n    const {handleClick} = props;\r\n    //加入声明\r\n    const Category = useRef(null);\r\n\r\n    const [innerWidth, setInnerWidth] = useState(''); \r\n    useEffect (() => { \r\n        let categoryDOM = Category.current; \r\n        let tagElems = categoryDOM.querySelectorAll('span');\r\n        let totalWidth = 0;\r\n        Array.from (tagElems).forEach (ele => {totalWidth += ele.offsetWidth}); \r\n        categoryDOM.style.width = `${totalWidth}px`; \r\n        setInnerWidth(totalWidth); \r\n    }, [])\r\n\r\n    return(\r\n        <Scroll direction={\"horizental\"}>\r\n            <div ref={Category}>\r\n                <List>\r\n                    <span>{title}</span>\r\n                    {\r\n                        list.map((item) => {\r\n                            return (\r\n                                <ListItem \r\n                                    key={item.key}\r\n                                    className={`${oldVal === item.key ? 'selected': ''}`} \r\n                                    onClick={() => handleClick (item.key)}>\r\n                                        {item.name}\r\n                                </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </div>\r\n        </Scroll>\r\n    )\r\n}\r\n\r\n// 首先考虑接受的参数\r\n//list 为接受的列表数据\r\n//oldVal 为当前的 item 值\r\n//title 为列表左边的标题\r\n//handleClick 为点击不同的 item 执行的方法\r\nHorizen.defaultProps = {\r\n    list:[],\r\n    oldVal: '',\r\n    title: '',\r\n    handleClick: null\r\n};\r\n\r\nHorizen.propTypes = {\r\n    list: PropTypes.array,\r\n    oldVal: PropTypes.string,\r\n    title: PropTypes.string,\r\n    handleClick: PropTypes.func\r\n};\r\n\r\n// 由于基础组件样式较少，直接写在 index.js 中\r\nconst List = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 30px;\r\n  overflow: hidden;\r\n  >span:first-of-type {\r\n    display: block;\r\n    flex: 0 0 auto;\r\n    padding: 5px 0;\r\n    margin-right: 5px;\r\n    color: grey;\r\n    font-size: ${style [\"font-size-m\"]};\r\n    vertical-align: middle;\r\n  }\r\n`\r\nconst ListItem = styled.span`\r\n  flex: 0 0 auto;\r\n  font-size: ${style [\"font-size-m\"]};\r\n  padding: 5px 8px;\r\n  border-radius: 10px;\r\n  &.selected {\r\n    color: ${style [\"theme-color\"]};\r\n    border: 1px solid ${style [\"theme-color\"]};\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\n\r\n\r\nexport default memo(Horizen);"]},"metadata":{},"sourceType":"module"}