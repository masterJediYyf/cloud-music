{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\\\u5B66\\u4E60\\u8FDB\\u5EA6\\\\new_html\\\\fullstack_yyf\\\\react\\\\cloud-music\\\\src\\\\baseUI\\\\progressBar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport style from '../../assets/global-style';\nimport { prefixStyle } from '../../api/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBarWrapper = styled.div`\n  margin:0 10px;\n  height: 30px;\n  .bar-inner {\n    position: relative;\n    top: 13px;\n    height: 4px;\n    background: rgba(0, 0, 0, .3);\n    .progress {\n      position: absolute;\n      height: 100%;\n      background: ${style[\"theme-color\"]};\n    }\n    .progress-btn-wrapper {\n      position: absolute;\n      left: -15px;\n      top: -13px;\n      width: 30px;\n      height: 30px;\n      .progress-btn {\n        position: relative;\n        top: 7px;\n        left: 7px;\n        box-sizing: border-box;\n        width: 16px;\n        height: 16px;\n        border: 3px solid ${style[\"border-color\"]};\n        border-radius: 50%;\n        background: ${style[\"theme-color\"]};\n      }\n    }\n  }\n`;\n_c = ProgressBarWrapper;\n\nfunction ProgressBar(props) {\n  _s();\n\n  const progressBar = useRef();\n  const progress = useRef();\n  const progressBtn = useRef();\n  const [touch, setTouch] = useState({});\n\n  const _offset = offsetWidth => {\n    progress.current.style.width = `${offsetWidth}px`;\n    progressBtn.current.style.transform = `translate3d(${offsetWidth}px, 0, 0)`;\n  };\n\n  const progressTouchStart = e => {\n    const startTouch = {};\n    startTouch.initiated = true; //initial 为 true 表示滑动动作开始了\n\n    startTouch.startX = e.touches[0].pageX; // 滑动开始时横向坐标\n\n    startTouch.left = progress.current.clientWidth; // 当前 progress 长度\n\n    setTouch(startTouch);\n  };\n\n  const progressTouchMove = e => {\n    if (!touch.initiated) return; // 滑动距离   \n\n    const deltaX = e.touches[0].pageX - touch.startX;\n    const barWidth = progressBar.current.clientWidth - progressBtnWidth;\n    const offsetWidth = Math.min(Math.max(0, touch.left + deltaX), barWidth);\n\n    _offset(offsetWidth);\n  };\n\n  const progressTouchEnd = e => {\n    const endTouch = JSON.parse(JSON.stringify(touch));\n    endTouch.initiated = false;\n    setTouch(endTouch);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProgressBarWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-inner\",\n      ref: progressBar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        ref: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-btn-wrapper\",\n        ref: progressBtn,\n        onTouchStart: progressTouchStart,\n        onTouchMove: progressTouchMove,\n        onTouchEnd: progressTouchEnd,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ProgressBar, \"SynhhExLWFIOYif/bFUCqg6L8v4=\");\n\n_c2 = ProgressBar;\nexport default _c3 = /*#__PURE__*/React.memo(ProgressBar);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProgressBarWrapper\");\n$RefreshReg$(_c2, \"ProgressBar\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["C:/Users/86136/Desktop/学习进度/new_html/fullstack_yyf/react/cloud-music/src/baseUI/progressBar/index.js"],"names":["React","useEffect","useRef","useState","styled","style","prefixStyle","ProgressBarWrapper","div","ProgressBar","props","progressBar","progress","progressBtn","touch","setTouch","_offset","offsetWidth","current","width","transform","progressTouchStart","e","startTouch","initiated","startX","touches","pageX","left","clientWidth","progressTouchMove","deltaX","barWidth","progressBtnWidth","Math","min","max","progressTouchEnd","endTouch","JSON","parse","stringify","memo"],"mappings":"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","sourcesContent":["import React ,{ useEffect, useRef, useState }from 'react';\r\nimport styled from 'styled-components';\r\nimport style from '../../assets/global-style';\r\nimport { prefixStyle } from '../../api/utils'\r\n\r\nconst ProgressBarWrapper = styled.div`\r\n  margin:0 10px;\r\n  height: 30px;\r\n  .bar-inner {\r\n    position: relative;\r\n    top: 13px;\r\n    height: 4px;\r\n    background: rgba(0, 0, 0, .3);\r\n    .progress {\r\n      position: absolute;\r\n      height: 100%;\r\n      background: ${style [\"theme-color\"]};\r\n    }\r\n    .progress-btn-wrapper {\r\n      position: absolute;\r\n      left: -15px;\r\n      top: -13px;\r\n      width: 30px;\r\n      height: 30px;\r\n      .progress-btn {\r\n        position: relative;\r\n        top: 7px;\r\n        left: 7px;\r\n        box-sizing: border-box;\r\n        width: 16px;\r\n        height: 16px;\r\n        border: 3px solid ${style [\"border-color\"]};\r\n        border-radius: 50%;\r\n        background: ${style [\"theme-color\"]};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction ProgressBar (props) {\r\n    const progressBar = useRef();\r\n    const progress = useRef();\r\n    const progressBtn = useRef();\r\n    const [touch,setTouch] = useState({});\r\n\r\n    const _offset = (offsetWidth) => {\r\n      progress.current.style.width = `${offsetWidth}px`;\r\n      progressBtn.current.style.transform = `translate3d(${offsetWidth}px, 0, 0)`;\r\n    }\r\n\r\n    const progressTouchStart = (e) => {\r\n      const startTouch = {};\r\n      startTouch.initiated = true;//initial 为 true 表示滑动动作开始了\r\n      startTouch.startX = e.touches [0].pageX;// 滑动开始时横向坐标\r\n      startTouch.left = progress.current.clientWidth;// 当前 progress 长度\r\n      setTouch (startTouch);\r\n    }\r\n    \r\n    const progressTouchMove = (e) => {\r\n      if (!touch.initiated) return;\r\n      // 滑动距离   \r\n      const deltaX = e.touches [0].pageX - touch.startX;\r\n      const barWidth = progressBar.current.clientWidth - progressBtnWidth; \r\n      const offsetWidth = Math.min (Math.max (0, touch.left + deltaX), barWidth);\r\n      _offset (offsetWidth);\r\n    }\r\n    \r\n    const progressTouchEnd = (e) => {\r\n      const endTouch = JSON.parse (JSON.stringify (touch));\r\n      endTouch.initiated = false;\r\n      setTouch (endTouch);\r\n    }\r\n    \r\n\r\n    return (\r\n      <ProgressBarWrapper>\r\n        <div className=\"bar-inner\" ref={progressBar} >\r\n          <div className=\"progress\" ref={progress}></div>\r\n          <div className=\"progress-btn-wrapper\" ref={progressBtn}\r\n              onTouchStart={progressTouchStart}\r\n              onTouchMove={progressTouchMove}\r\n              onTouchEnd={progressTouchEnd}\r\n          >\r\n            <div className=\"progress-btn\"></div>\r\n          </div>\r\n        </div>\r\n      </ProgressBarWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProgressBar);"]},"metadata":{},"sourceType":"module"}